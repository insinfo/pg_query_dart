//
//  Generated code. Do not modify.
//  source: protobuf/pg_query.proto
//
// @dart = 2.12

// ignore_for_file: annotate_overrides, camel_case_types, comment_references
// ignore_for_file: constant_identifier_names, library_prefixes
// ignore_for_file: non_constant_identifier_names, prefer_final_fields
// ignore_for_file: unnecessary_import, unnecessary_this, unused_import

import 'dart:core' as $core;

import 'package:fixnum/fixnum.dart' as $fixnum;
import 'package:protobuf/protobuf.dart' as $pb;

import 'pg_query.pbenum.dart';

export 'pg_query.pbenum.dart';

class ParseResult extends $pb.GeneratedMessage {
  factory ParseResult({
    $core.int? version,
    $core.Iterable<RawStmt>? stmts,
  }) {
    final $result = create();
    if (version != null) {
      $result.version = version;
    }
    if (stmts != null) {
      $result.stmts.addAll(stmts);
    }
    return $result;
  }
  ParseResult._() : super();
  factory ParseResult.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ParseResult.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ParseResult', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'version', $pb.PbFieldType.O3)
    ..pc<RawStmt>(2, _omitFieldNames ? '' : 'stmts', $pb.PbFieldType.PM, subBuilder: RawStmt.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ParseResult clone() => ParseResult()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ParseResult copyWith(void Function(ParseResult) updates) => super.copyWith((message) => updates(message as ParseResult)) as ParseResult;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ParseResult create() => ParseResult._();
  ParseResult createEmptyInstance() => create();
  static $pb.PbList<ParseResult> createRepeated() => $pb.PbList<ParseResult>();
  @$core.pragma('dart2js:noInline')
  static ParseResult getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ParseResult>(create);
  static ParseResult? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get version => $_getIZ(0);
  @$pb.TagNumber(1)
  set version($core.int v) { $_setSignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasVersion() => $_has(0);
  @$pb.TagNumber(1)
  void clearVersion() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<RawStmt> get stmts => $_getList(1);
}

class ScanResult extends $pb.GeneratedMessage {
  factory ScanResult({
    $core.int? version,
    $core.Iterable<ScanToken>? tokens,
  }) {
    final $result = create();
    if (version != null) {
      $result.version = version;
    }
    if (tokens != null) {
      $result.tokens.addAll(tokens);
    }
    return $result;
  }
  ScanResult._() : super();
  factory ScanResult.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ScanResult.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ScanResult', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'version', $pb.PbFieldType.O3)
    ..pc<ScanToken>(2, _omitFieldNames ? '' : 'tokens', $pb.PbFieldType.PM, subBuilder: ScanToken.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ScanResult clone() => ScanResult()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ScanResult copyWith(void Function(ScanResult) updates) => super.copyWith((message) => updates(message as ScanResult)) as ScanResult;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ScanResult create() => ScanResult._();
  ScanResult createEmptyInstance() => create();
  static $pb.PbList<ScanResult> createRepeated() => $pb.PbList<ScanResult>();
  @$core.pragma('dart2js:noInline')
  static ScanResult getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ScanResult>(create);
  static ScanResult? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get version => $_getIZ(0);
  @$pb.TagNumber(1)
  set version($core.int v) { $_setSignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasVersion() => $_has(0);
  @$pb.TagNumber(1)
  void clearVersion() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<ScanToken> get tokens => $_getList(1);
}

enum Node_Node {
  alias, 
  rangeVar, 
  tableFunc, 
  intoClause, 
  var_5, 
  param, 
  aggref, 
  groupingFunc, 
  windowFunc, 
  subscriptingRef, 
  funcExpr, 
  namedArgExpr, 
  opExpr, 
  distinctExpr, 
  nullIfExpr, 
  scalarArrayOpExpr, 
  boolExpr, 
  subLink, 
  subPlan, 
  alternativeSubPlan, 
  fieldSelect, 
  fieldStore, 
  relabelType, 
  coerceViaIo, 
  arrayCoerceExpr, 
  convertRowtypeExpr, 
  collateExpr, 
  caseExpr, 
  caseWhen, 
  caseTestExpr, 
  arrayExpr, 
  rowExpr, 
  rowCompareExpr, 
  coalesceExpr, 
  minMaxExpr, 
  sqlvalueFunction, 
  xmlExpr, 
  jsonFormat, 
  jsonReturning, 
  jsonValueExpr, 
  jsonConstructorExpr, 
  jsonIsPredicate, 
  nullTest, 
  booleanTest, 
  coerceToDomain, 
  coerceToDomainValue, 
  setToDefault, 
  currentOfExpr, 
  nextValueExpr, 
  inferenceElem, 
  targetEntry, 
  rangeTblRef, 
  joinExpr, 
  fromExpr, 
  onConflictExpr, 
  query, 
  typeName, 
  columnRef, 
  paramRef, 
  aExpr, 
  typeCast, 
  collateClause, 
  roleSpec, 
  funcCall, 
  aStar, 
  aIndices, 
  aIndirection, 
  aArrayExpr, 
  resTarget, 
  multiAssignRef, 
  sortBy, 
  windowDef, 
  rangeSubselect, 
  rangeFunction, 
  rangeTableFunc, 
  rangeTableFuncCol, 
  rangeTableSample, 
  columnDef, 
  tableLikeClause, 
  indexElem, 
  defElem, 
  lockingClause, 
  xmlSerialize, 
  partitionElem, 
  partitionSpec, 
  partitionBoundSpec, 
  partitionRangeDatum, 
  partitionCmd, 
  rangeTblEntry, 
  rtepermissionInfo, 
  rangeTblFunction, 
  tableSampleClause, 
  withCheckOption, 
  sortGroupClause, 
  groupingSet, 
  windowClause, 
  rowMarkClause, 
  withClause, 
  inferClause, 
  onConflictClause, 
  ctesearchClause, 
  ctecycleClause, 
  commonTableExpr, 
  mergeWhenClause, 
  mergeAction, 
  triggerTransition, 
  jsonOutput, 
  jsonKeyValue, 
  jsonObjectConstructor, 
  jsonArrayConstructor, 
  jsonArrayQueryConstructor, 
  jsonAggConstructor, 
  jsonObjectAgg, 
  jsonArrayAgg, 
  rawStmt, 
  insertStmt, 
  deleteStmt, 
  updateStmt, 
  mergeStmt, 
  selectStmt, 
  setOperationStmt, 
  returnStmt, 
  plassignStmt, 
  createSchemaStmt, 
  alterTableStmt, 
  replicaIdentityStmt, 
  alterTableCmd, 
  alterCollationStmt, 
  alterDomainStmt, 
  grantStmt, 
  objectWithArgs, 
  accessPriv, 
  grantRoleStmt, 
  alterDefaultPrivilegesStmt, 
  copyStmt, 
  variableSetStmt, 
  variableShowStmt, 
  createStmt, 
  constraint, 
  createTableSpaceStmt, 
  dropTableSpaceStmt, 
  alterTableSpaceOptionsStmt, 
  alterTableMoveAllStmt, 
  createExtensionStmt, 
  alterExtensionStmt, 
  alterExtensionContentsStmt, 
  createFdwStmt, 
  alterFdwStmt, 
  createForeignServerStmt, 
  alterForeignServerStmt, 
  createForeignTableStmt, 
  createUserMappingStmt, 
  alterUserMappingStmt, 
  dropUserMappingStmt, 
  importForeignSchemaStmt, 
  createPolicyStmt, 
  alterPolicyStmt, 
  createAmStmt, 
  createTrigStmt, 
  createEventTrigStmt, 
  alterEventTrigStmt, 
  createPlangStmt, 
  createRoleStmt, 
  alterRoleStmt, 
  alterRoleSetStmt, 
  dropRoleStmt, 
  createSeqStmt, 
  alterSeqStmt, 
  defineStmt, 
  createDomainStmt, 
  createOpClassStmt, 
  createOpClassItem, 
  createOpFamilyStmt, 
  alterOpFamilyStmt, 
  dropStmt, 
  truncateStmt, 
  commentStmt, 
  secLabelStmt, 
  declareCursorStmt, 
  closePortalStmt, 
  fetchStmt, 
  indexStmt, 
  createStatsStmt, 
  statsElem, 
  alterStatsStmt, 
  createFunctionStmt, 
  functionParameter, 
  alterFunctionStmt, 
  doStmt, 
  inlineCodeBlock, 
  callStmt, 
  callContext, 
  renameStmt, 
  alterObjectDependsStmt, 
  alterObjectSchemaStmt, 
  alterOwnerStmt, 
  alterOperatorStmt, 
  alterTypeStmt, 
  ruleStmt, 
  notifyStmt, 
  listenStmt, 
  unlistenStmt, 
  transactionStmt, 
  compositeTypeStmt, 
  createEnumStmt, 
  createRangeStmt, 
  alterEnumStmt, 
  viewStmt, 
  loadStmt, 
  createdbStmt, 
  alterDatabaseStmt, 
  alterDatabaseRefreshCollStmt, 
  alterDatabaseSetStmt, 
  dropdbStmt, 
  alterSystemStmt, 
  clusterStmt, 
  vacuumStmt, 
  vacuumRelation, 
  explainStmt, 
  createTableAsStmt, 
  refreshMatViewStmt, 
  checkPointStmt, 
  discardStmt, 
  lockStmt, 
  constraintsSetStmt, 
  reindexStmt, 
  createConversionStmt, 
  createCastStmt, 
  createTransformStmt, 
  prepareStmt, 
  executeStmt, 
  deallocateStmt, 
  dropOwnedStmt, 
  reassignOwnedStmt, 
  alterTsdictionaryStmt, 
  alterTsconfigurationStmt, 
  publicationTable, 
  publicationObjSpec, 
  createPublicationStmt, 
  alterPublicationStmt, 
  createSubscriptionStmt, 
  alterSubscriptionStmt, 
  dropSubscriptionStmt, 
  integer, 
  float, 
  boolean, 
  string, 
  bitString, 
  list, 
  intList, 
  oidList, 
  aConst, 
  notSet
}

class Node extends $pb.GeneratedMessage {
  factory Node({
    Alias? alias,
    RangeVar? rangeVar,
    TableFunc? tableFunc,
    IntoClause? intoClause,
    Var? var_5,
    Param? param,
    Aggref? aggref,
    GroupingFunc? groupingFunc,
    WindowFunc? windowFunc,
    SubscriptingRef? subscriptingRef,
    FuncExpr? funcExpr,
    NamedArgExpr? namedArgExpr,
    OpExpr? opExpr,
    DistinctExpr? distinctExpr,
    NullIfExpr? nullIfExpr,
    ScalarArrayOpExpr? scalarArrayOpExpr,
    BoolExpr? boolExpr,
    SubLink? subLink,
    SubPlan? subPlan,
    AlternativeSubPlan? alternativeSubPlan,
    FieldSelect? fieldSelect,
    FieldStore? fieldStore,
    RelabelType? relabelType,
    CoerceViaIO? coerceViaIo,
    ArrayCoerceExpr? arrayCoerceExpr,
    ConvertRowtypeExpr? convertRowtypeExpr,
    CollateExpr? collateExpr,
    CaseExpr? caseExpr,
    CaseWhen? caseWhen,
    CaseTestExpr? caseTestExpr,
    ArrayExpr? arrayExpr,
    RowExpr? rowExpr,
    RowCompareExpr? rowCompareExpr,
    CoalesceExpr? coalesceExpr,
    MinMaxExpr? minMaxExpr,
    SQLValueFunction? sqlvalueFunction,
    XmlExpr? xmlExpr,
    JsonFormat? jsonFormat,
    JsonReturning? jsonReturning,
    JsonValueExpr? jsonValueExpr,
    JsonConstructorExpr? jsonConstructorExpr,
    JsonIsPredicate? jsonIsPredicate,
    NullTest? nullTest,
    BooleanTest? booleanTest,
    CoerceToDomain? coerceToDomain,
    CoerceToDomainValue? coerceToDomainValue,
    SetToDefault? setToDefault,
    CurrentOfExpr? currentOfExpr,
    NextValueExpr? nextValueExpr,
    InferenceElem? inferenceElem,
    TargetEntry? targetEntry,
    RangeTblRef? rangeTblRef,
    JoinExpr? joinExpr,
    FromExpr? fromExpr,
    OnConflictExpr? onConflictExpr,
    Query? query,
    TypeName? typeName,
    ColumnRef? columnRef,
    ParamRef? paramRef,
    A_Expr? aExpr,
    TypeCast? typeCast,
    CollateClause? collateClause,
    RoleSpec? roleSpec,
    FuncCall? funcCall,
    A_Star? aStar,
    A_Indices? aIndices,
    A_Indirection? aIndirection,
    A_ArrayExpr? aArrayExpr,
    ResTarget? resTarget,
    MultiAssignRef? multiAssignRef,
    SortBy? sortBy,
    WindowDef? windowDef,
    RangeSubselect? rangeSubselect,
    RangeFunction? rangeFunction,
    RangeTableFunc? rangeTableFunc,
    RangeTableFuncCol? rangeTableFuncCol,
    RangeTableSample? rangeTableSample,
    ColumnDef? columnDef,
    TableLikeClause? tableLikeClause,
    IndexElem? indexElem,
    DefElem? defElem,
    LockingClause? lockingClause,
    XmlSerialize? xmlSerialize,
    PartitionElem? partitionElem,
    PartitionSpec? partitionSpec,
    PartitionBoundSpec? partitionBoundSpec,
    PartitionRangeDatum? partitionRangeDatum,
    PartitionCmd? partitionCmd,
    RangeTblEntry? rangeTblEntry,
    RTEPermissionInfo? rtepermissionInfo,
    RangeTblFunction? rangeTblFunction,
    TableSampleClause? tableSampleClause,
    WithCheckOption? withCheckOption,
    SortGroupClause? sortGroupClause,
    GroupingSet? groupingSet,
    WindowClause? windowClause,
    RowMarkClause? rowMarkClause,
    WithClause? withClause,
    InferClause? inferClause,
    OnConflictClause? onConflictClause,
    CTESearchClause? ctesearchClause,
    CTECycleClause? ctecycleClause,
    CommonTableExpr? commonTableExpr,
    MergeWhenClause? mergeWhenClause,
    MergeAction? mergeAction,
    TriggerTransition? triggerTransition,
    JsonOutput? jsonOutput,
    JsonKeyValue? jsonKeyValue,
    JsonObjectConstructor? jsonObjectConstructor,
    JsonArrayConstructor? jsonArrayConstructor,
    JsonArrayQueryConstructor? jsonArrayQueryConstructor,
    JsonAggConstructor? jsonAggConstructor,
    JsonObjectAgg? jsonObjectAgg,
    JsonArrayAgg? jsonArrayAgg,
    RawStmt? rawStmt,
    InsertStmt? insertStmt,
    DeleteStmt? deleteStmt,
    UpdateStmt? updateStmt,
    MergeStmt? mergeStmt,
    SelectStmt? selectStmt,
    SetOperationStmt? setOperationStmt,
    ReturnStmt? returnStmt,
    PLAssignStmt? plassignStmt,
    CreateSchemaStmt? createSchemaStmt,
    AlterTableStmt? alterTableStmt,
    ReplicaIdentityStmt? replicaIdentityStmt,
    AlterTableCmd? alterTableCmd,
    AlterCollationStmt? alterCollationStmt,
    AlterDomainStmt? alterDomainStmt,
    GrantStmt? grantStmt,
    ObjectWithArgs? objectWithArgs,
    AccessPriv? accessPriv,
    GrantRoleStmt? grantRoleStmt,
    AlterDefaultPrivilegesStmt? alterDefaultPrivilegesStmt,
    CopyStmt? copyStmt,
    VariableSetStmt? variableSetStmt,
    VariableShowStmt? variableShowStmt,
    CreateStmt? createStmt,
    Constraint? constraint,
    CreateTableSpaceStmt? createTableSpaceStmt,
    DropTableSpaceStmt? dropTableSpaceStmt,
    AlterTableSpaceOptionsStmt? alterTableSpaceOptionsStmt,
    AlterTableMoveAllStmt? alterTableMoveAllStmt,
    CreateExtensionStmt? createExtensionStmt,
    AlterExtensionStmt? alterExtensionStmt,
    AlterExtensionContentsStmt? alterExtensionContentsStmt,
    CreateFdwStmt? createFdwStmt,
    AlterFdwStmt? alterFdwStmt,
    CreateForeignServerStmt? createForeignServerStmt,
    AlterForeignServerStmt? alterForeignServerStmt,
    CreateForeignTableStmt? createForeignTableStmt,
    CreateUserMappingStmt? createUserMappingStmt,
    AlterUserMappingStmt? alterUserMappingStmt,
    DropUserMappingStmt? dropUserMappingStmt,
    ImportForeignSchemaStmt? importForeignSchemaStmt,
    CreatePolicyStmt? createPolicyStmt,
    AlterPolicyStmt? alterPolicyStmt,
    CreateAmStmt? createAmStmt,
    CreateTrigStmt? createTrigStmt,
    CreateEventTrigStmt? createEventTrigStmt,
    AlterEventTrigStmt? alterEventTrigStmt,
    CreatePLangStmt? createPlangStmt,
    CreateRoleStmt? createRoleStmt,
    AlterRoleStmt? alterRoleStmt,
    AlterRoleSetStmt? alterRoleSetStmt,
    DropRoleStmt? dropRoleStmt,
    CreateSeqStmt? createSeqStmt,
    AlterSeqStmt? alterSeqStmt,
    DefineStmt? defineStmt,
    CreateDomainStmt? createDomainStmt,
    CreateOpClassStmt? createOpClassStmt,
    CreateOpClassItem? createOpClassItem,
    CreateOpFamilyStmt? createOpFamilyStmt,
    AlterOpFamilyStmt? alterOpFamilyStmt,
    DropStmt? dropStmt,
    TruncateStmt? truncateStmt,
    CommentStmt? commentStmt,
    SecLabelStmt? secLabelStmt,
    DeclareCursorStmt? declareCursorStmt,
    ClosePortalStmt? closePortalStmt,
    FetchStmt? fetchStmt,
    IndexStmt? indexStmt,
    CreateStatsStmt? createStatsStmt,
    StatsElem? statsElem,
    AlterStatsStmt? alterStatsStmt,
    CreateFunctionStmt? createFunctionStmt,
    FunctionParameter? functionParameter,
    AlterFunctionStmt? alterFunctionStmt,
    DoStmt? doStmt,
    InlineCodeBlock? inlineCodeBlock,
    CallStmt? callStmt,
    CallContext? callContext,
    RenameStmt? renameStmt,
    AlterObjectDependsStmt? alterObjectDependsStmt,
    AlterObjectSchemaStmt? alterObjectSchemaStmt,
    AlterOwnerStmt? alterOwnerStmt,
    AlterOperatorStmt? alterOperatorStmt,
    AlterTypeStmt? alterTypeStmt,
    RuleStmt? ruleStmt,
    NotifyStmt? notifyStmt,
    ListenStmt? listenStmt,
    UnlistenStmt? unlistenStmt,
    TransactionStmt? transactionStmt,
    CompositeTypeStmt? compositeTypeStmt,
    CreateEnumStmt? createEnumStmt,
    CreateRangeStmt? createRangeStmt,
    AlterEnumStmt? alterEnumStmt,
    ViewStmt? viewStmt,
    LoadStmt? loadStmt,
    CreatedbStmt? createdbStmt,
    AlterDatabaseStmt? alterDatabaseStmt,
    AlterDatabaseRefreshCollStmt? alterDatabaseRefreshCollStmt,
    AlterDatabaseSetStmt? alterDatabaseSetStmt,
    DropdbStmt? dropdbStmt,
    AlterSystemStmt? alterSystemStmt,
    ClusterStmt? clusterStmt,
    VacuumStmt? vacuumStmt,
    VacuumRelation? vacuumRelation,
    ExplainStmt? explainStmt,
    CreateTableAsStmt? createTableAsStmt,
    RefreshMatViewStmt? refreshMatViewStmt,
    CheckPointStmt? checkPointStmt,
    DiscardStmt? discardStmt,
    LockStmt? lockStmt,
    ConstraintsSetStmt? constraintsSetStmt,
    ReindexStmt? reindexStmt,
    CreateConversionStmt? createConversionStmt,
    CreateCastStmt? createCastStmt,
    CreateTransformStmt? createTransformStmt,
    PrepareStmt? prepareStmt,
    ExecuteStmt? executeStmt,
    DeallocateStmt? deallocateStmt,
    DropOwnedStmt? dropOwnedStmt,
    ReassignOwnedStmt? reassignOwnedStmt,
    AlterTSDictionaryStmt? alterTsdictionaryStmt,
    AlterTSConfigurationStmt? alterTsconfigurationStmt,
    PublicationTable? publicationTable,
    PublicationObjSpec? publicationObjSpec,
    CreatePublicationStmt? createPublicationStmt,
    AlterPublicationStmt? alterPublicationStmt,
    CreateSubscriptionStmt? createSubscriptionStmt,
    AlterSubscriptionStmt? alterSubscriptionStmt,
    DropSubscriptionStmt? dropSubscriptionStmt,
    PgInteger? integer,
    PgFloat? float,
    PgBoolean? boolean,
    PgString? string,
    PgBitString? bitString,
    List_? list,
    IntList? intList,
    OidList? oidList,
    A_Const? aConst,
  }) {
    final $result = create();
    if (alias != null) {
      $result.alias = alias;
    }
    if (rangeVar != null) {
      $result.rangeVar = rangeVar;
    }
    if (tableFunc != null) {
      $result.tableFunc = tableFunc;
    }
    if (intoClause != null) {
      $result.intoClause = intoClause;
    }
    if (var_5 != null) {
      $result.var_5 = var_5;
    }
    if (param != null) {
      $result.param = param;
    }
    if (aggref != null) {
      $result.aggref = aggref;
    }
    if (groupingFunc != null) {
      $result.groupingFunc = groupingFunc;
    }
    if (windowFunc != null) {
      $result.windowFunc = windowFunc;
    }
    if (subscriptingRef != null) {
      $result.subscriptingRef = subscriptingRef;
    }
    if (funcExpr != null) {
      $result.funcExpr = funcExpr;
    }
    if (namedArgExpr != null) {
      $result.namedArgExpr = namedArgExpr;
    }
    if (opExpr != null) {
      $result.opExpr = opExpr;
    }
    if (distinctExpr != null) {
      $result.distinctExpr = distinctExpr;
    }
    if (nullIfExpr != null) {
      $result.nullIfExpr = nullIfExpr;
    }
    if (scalarArrayOpExpr != null) {
      $result.scalarArrayOpExpr = scalarArrayOpExpr;
    }
    if (boolExpr != null) {
      $result.boolExpr = boolExpr;
    }
    if (subLink != null) {
      $result.subLink = subLink;
    }
    if (subPlan != null) {
      $result.subPlan = subPlan;
    }
    if (alternativeSubPlan != null) {
      $result.alternativeSubPlan = alternativeSubPlan;
    }
    if (fieldSelect != null) {
      $result.fieldSelect = fieldSelect;
    }
    if (fieldStore != null) {
      $result.fieldStore = fieldStore;
    }
    if (relabelType != null) {
      $result.relabelType = relabelType;
    }
    if (coerceViaIo != null) {
      $result.coerceViaIo = coerceViaIo;
    }
    if (arrayCoerceExpr != null) {
      $result.arrayCoerceExpr = arrayCoerceExpr;
    }
    if (convertRowtypeExpr != null) {
      $result.convertRowtypeExpr = convertRowtypeExpr;
    }
    if (collateExpr != null) {
      $result.collateExpr = collateExpr;
    }
    if (caseExpr != null) {
      $result.caseExpr = caseExpr;
    }
    if (caseWhen != null) {
      $result.caseWhen = caseWhen;
    }
    if (caseTestExpr != null) {
      $result.caseTestExpr = caseTestExpr;
    }
    if (arrayExpr != null) {
      $result.arrayExpr = arrayExpr;
    }
    if (rowExpr != null) {
      $result.rowExpr = rowExpr;
    }
    if (rowCompareExpr != null) {
      $result.rowCompareExpr = rowCompareExpr;
    }
    if (coalesceExpr != null) {
      $result.coalesceExpr = coalesceExpr;
    }
    if (minMaxExpr != null) {
      $result.minMaxExpr = minMaxExpr;
    }
    if (sqlvalueFunction != null) {
      $result.sqlvalueFunction = sqlvalueFunction;
    }
    if (xmlExpr != null) {
      $result.xmlExpr = xmlExpr;
    }
    if (jsonFormat != null) {
      $result.jsonFormat = jsonFormat;
    }
    if (jsonReturning != null) {
      $result.jsonReturning = jsonReturning;
    }
    if (jsonValueExpr != null) {
      $result.jsonValueExpr = jsonValueExpr;
    }
    if (jsonConstructorExpr != null) {
      $result.jsonConstructorExpr = jsonConstructorExpr;
    }
    if (jsonIsPredicate != null) {
      $result.jsonIsPredicate = jsonIsPredicate;
    }
    if (nullTest != null) {
      $result.nullTest = nullTest;
    }
    if (booleanTest != null) {
      $result.booleanTest = booleanTest;
    }
    if (coerceToDomain != null) {
      $result.coerceToDomain = coerceToDomain;
    }
    if (coerceToDomainValue != null) {
      $result.coerceToDomainValue = coerceToDomainValue;
    }
    if (setToDefault != null) {
      $result.setToDefault = setToDefault;
    }
    if (currentOfExpr != null) {
      $result.currentOfExpr = currentOfExpr;
    }
    if (nextValueExpr != null) {
      $result.nextValueExpr = nextValueExpr;
    }
    if (inferenceElem != null) {
      $result.inferenceElem = inferenceElem;
    }
    if (targetEntry != null) {
      $result.targetEntry = targetEntry;
    }
    if (rangeTblRef != null) {
      $result.rangeTblRef = rangeTblRef;
    }
    if (joinExpr != null) {
      $result.joinExpr = joinExpr;
    }
    if (fromExpr != null) {
      $result.fromExpr = fromExpr;
    }
    if (onConflictExpr != null) {
      $result.onConflictExpr = onConflictExpr;
    }
    if (query != null) {
      $result.query = query;
    }
    if (typeName != null) {
      $result.typeName = typeName;
    }
    if (columnRef != null) {
      $result.columnRef = columnRef;
    }
    if (paramRef != null) {
      $result.paramRef = paramRef;
    }
    if (aExpr != null) {
      $result.aExpr = aExpr;
    }
    if (typeCast != null) {
      $result.typeCast = typeCast;
    }
    if (collateClause != null) {
      $result.collateClause = collateClause;
    }
    if (roleSpec != null) {
      $result.roleSpec = roleSpec;
    }
    if (funcCall != null) {
      $result.funcCall = funcCall;
    }
    if (aStar != null) {
      $result.aStar = aStar;
    }
    if (aIndices != null) {
      $result.aIndices = aIndices;
    }
    if (aIndirection != null) {
      $result.aIndirection = aIndirection;
    }
    if (aArrayExpr != null) {
      $result.aArrayExpr = aArrayExpr;
    }
    if (resTarget != null) {
      $result.resTarget = resTarget;
    }
    if (multiAssignRef != null) {
      $result.multiAssignRef = multiAssignRef;
    }
    if (sortBy != null) {
      $result.sortBy = sortBy;
    }
    if (windowDef != null) {
      $result.windowDef = windowDef;
    }
    if (rangeSubselect != null) {
      $result.rangeSubselect = rangeSubselect;
    }
    if (rangeFunction != null) {
      $result.rangeFunction = rangeFunction;
    }
    if (rangeTableFunc != null) {
      $result.rangeTableFunc = rangeTableFunc;
    }
    if (rangeTableFuncCol != null) {
      $result.rangeTableFuncCol = rangeTableFuncCol;
    }
    if (rangeTableSample != null) {
      $result.rangeTableSample = rangeTableSample;
    }
    if (columnDef != null) {
      $result.columnDef = columnDef;
    }
    if (tableLikeClause != null) {
      $result.tableLikeClause = tableLikeClause;
    }
    if (indexElem != null) {
      $result.indexElem = indexElem;
    }
    if (defElem != null) {
      $result.defElem = defElem;
    }
    if (lockingClause != null) {
      $result.lockingClause = lockingClause;
    }
    if (xmlSerialize != null) {
      $result.xmlSerialize = xmlSerialize;
    }
    if (partitionElem != null) {
      $result.partitionElem = partitionElem;
    }
    if (partitionSpec != null) {
      $result.partitionSpec = partitionSpec;
    }
    if (partitionBoundSpec != null) {
      $result.partitionBoundSpec = partitionBoundSpec;
    }
    if (partitionRangeDatum != null) {
      $result.partitionRangeDatum = partitionRangeDatum;
    }
    if (partitionCmd != null) {
      $result.partitionCmd = partitionCmd;
    }
    if (rangeTblEntry != null) {
      $result.rangeTblEntry = rangeTblEntry;
    }
    if (rtepermissionInfo != null) {
      $result.rtepermissionInfo = rtepermissionInfo;
    }
    if (rangeTblFunction != null) {
      $result.rangeTblFunction = rangeTblFunction;
    }
    if (tableSampleClause != null) {
      $result.tableSampleClause = tableSampleClause;
    }
    if (withCheckOption != null) {
      $result.withCheckOption = withCheckOption;
    }
    if (sortGroupClause != null) {
      $result.sortGroupClause = sortGroupClause;
    }
    if (groupingSet != null) {
      $result.groupingSet = groupingSet;
    }
    if (windowClause != null) {
      $result.windowClause = windowClause;
    }
    if (rowMarkClause != null) {
      $result.rowMarkClause = rowMarkClause;
    }
    if (withClause != null) {
      $result.withClause = withClause;
    }
    if (inferClause != null) {
      $result.inferClause = inferClause;
    }
    if (onConflictClause != null) {
      $result.onConflictClause = onConflictClause;
    }
    if (ctesearchClause != null) {
      $result.ctesearchClause = ctesearchClause;
    }
    if (ctecycleClause != null) {
      $result.ctecycleClause = ctecycleClause;
    }
    if (commonTableExpr != null) {
      $result.commonTableExpr = commonTableExpr;
    }
    if (mergeWhenClause != null) {
      $result.mergeWhenClause = mergeWhenClause;
    }
    if (mergeAction != null) {
      $result.mergeAction = mergeAction;
    }
    if (triggerTransition != null) {
      $result.triggerTransition = triggerTransition;
    }
    if (jsonOutput != null) {
      $result.jsonOutput = jsonOutput;
    }
    if (jsonKeyValue != null) {
      $result.jsonKeyValue = jsonKeyValue;
    }
    if (jsonObjectConstructor != null) {
      $result.jsonObjectConstructor = jsonObjectConstructor;
    }
    if (jsonArrayConstructor != null) {
      $result.jsonArrayConstructor = jsonArrayConstructor;
    }
    if (jsonArrayQueryConstructor != null) {
      $result.jsonArrayQueryConstructor = jsonArrayQueryConstructor;
    }
    if (jsonAggConstructor != null) {
      $result.jsonAggConstructor = jsonAggConstructor;
    }
    if (jsonObjectAgg != null) {
      $result.jsonObjectAgg = jsonObjectAgg;
    }
    if (jsonArrayAgg != null) {
      $result.jsonArrayAgg = jsonArrayAgg;
    }
    if (rawStmt != null) {
      $result.rawStmt = rawStmt;
    }
    if (insertStmt != null) {
      $result.insertStmt = insertStmt;
    }
    if (deleteStmt != null) {
      $result.deleteStmt = deleteStmt;
    }
    if (updateStmt != null) {
      $result.updateStmt = updateStmt;
    }
    if (mergeStmt != null) {
      $result.mergeStmt = mergeStmt;
    }
    if (selectStmt != null) {
      $result.selectStmt = selectStmt;
    }
    if (setOperationStmt != null) {
      $result.setOperationStmt = setOperationStmt;
    }
    if (returnStmt != null) {
      $result.returnStmt = returnStmt;
    }
    if (plassignStmt != null) {
      $result.plassignStmt = plassignStmt;
    }
    if (createSchemaStmt != null) {
      $result.createSchemaStmt = createSchemaStmt;
    }
    if (alterTableStmt != null) {
      $result.alterTableStmt = alterTableStmt;
    }
    if (replicaIdentityStmt != null) {
      $result.replicaIdentityStmt = replicaIdentityStmt;
    }
    if (alterTableCmd != null) {
      $result.alterTableCmd = alterTableCmd;
    }
    if (alterCollationStmt != null) {
      $result.alterCollationStmt = alterCollationStmt;
    }
    if (alterDomainStmt != null) {
      $result.alterDomainStmt = alterDomainStmt;
    }
    if (grantStmt != null) {
      $result.grantStmt = grantStmt;
    }
    if (objectWithArgs != null) {
      $result.objectWithArgs = objectWithArgs;
    }
    if (accessPriv != null) {
      $result.accessPriv = accessPriv;
    }
    if (grantRoleStmt != null) {
      $result.grantRoleStmt = grantRoleStmt;
    }
    if (alterDefaultPrivilegesStmt != null) {
      $result.alterDefaultPrivilegesStmt = alterDefaultPrivilegesStmt;
    }
    if (copyStmt != null) {
      $result.copyStmt = copyStmt;
    }
    if (variableSetStmt != null) {
      $result.variableSetStmt = variableSetStmt;
    }
    if (variableShowStmt != null) {
      $result.variableShowStmt = variableShowStmt;
    }
    if (createStmt != null) {
      $result.createStmt = createStmt;
    }
    if (constraint != null) {
      $result.constraint = constraint;
    }
    if (createTableSpaceStmt != null) {
      $result.createTableSpaceStmt = createTableSpaceStmt;
    }
    if (dropTableSpaceStmt != null) {
      $result.dropTableSpaceStmt = dropTableSpaceStmt;
    }
    if (alterTableSpaceOptionsStmt != null) {
      $result.alterTableSpaceOptionsStmt = alterTableSpaceOptionsStmt;
    }
    if (alterTableMoveAllStmt != null) {
      $result.alterTableMoveAllStmt = alterTableMoveAllStmt;
    }
    if (createExtensionStmt != null) {
      $result.createExtensionStmt = createExtensionStmt;
    }
    if (alterExtensionStmt != null) {
      $result.alterExtensionStmt = alterExtensionStmt;
    }
    if (alterExtensionContentsStmt != null) {
      $result.alterExtensionContentsStmt = alterExtensionContentsStmt;
    }
    if (createFdwStmt != null) {
      $result.createFdwStmt = createFdwStmt;
    }
    if (alterFdwStmt != null) {
      $result.alterFdwStmt = alterFdwStmt;
    }
    if (createForeignServerStmt != null) {
      $result.createForeignServerStmt = createForeignServerStmt;
    }
    if (alterForeignServerStmt != null) {
      $result.alterForeignServerStmt = alterForeignServerStmt;
    }
    if (createForeignTableStmt != null) {
      $result.createForeignTableStmt = createForeignTableStmt;
    }
    if (createUserMappingStmt != null) {
      $result.createUserMappingStmt = createUserMappingStmt;
    }
    if (alterUserMappingStmt != null) {
      $result.alterUserMappingStmt = alterUserMappingStmt;
    }
    if (dropUserMappingStmt != null) {
      $result.dropUserMappingStmt = dropUserMappingStmt;
    }
    if (importForeignSchemaStmt != null) {
      $result.importForeignSchemaStmt = importForeignSchemaStmt;
    }
    if (createPolicyStmt != null) {
      $result.createPolicyStmt = createPolicyStmt;
    }
    if (alterPolicyStmt != null) {
      $result.alterPolicyStmt = alterPolicyStmt;
    }
    if (createAmStmt != null) {
      $result.createAmStmt = createAmStmt;
    }
    if (createTrigStmt != null) {
      $result.createTrigStmt = createTrigStmt;
    }
    if (createEventTrigStmt != null) {
      $result.createEventTrigStmt = createEventTrigStmt;
    }
    if (alterEventTrigStmt != null) {
      $result.alterEventTrigStmt = alterEventTrigStmt;
    }
    if (createPlangStmt != null) {
      $result.createPlangStmt = createPlangStmt;
    }
    if (createRoleStmt != null) {
      $result.createRoleStmt = createRoleStmt;
    }
    if (alterRoleStmt != null) {
      $result.alterRoleStmt = alterRoleStmt;
    }
    if (alterRoleSetStmt != null) {
      $result.alterRoleSetStmt = alterRoleSetStmt;
    }
    if (dropRoleStmt != null) {
      $result.dropRoleStmt = dropRoleStmt;
    }
    if (createSeqStmt != null) {
      $result.createSeqStmt = createSeqStmt;
    }
    if (alterSeqStmt != null) {
      $result.alterSeqStmt = alterSeqStmt;
    }
    if (defineStmt != null) {
      $result.defineStmt = defineStmt;
    }
    if (createDomainStmt != null) {
      $result.createDomainStmt = createDomainStmt;
    }
    if (createOpClassStmt != null) {
      $result.createOpClassStmt = createOpClassStmt;
    }
    if (createOpClassItem != null) {
      $result.createOpClassItem = createOpClassItem;
    }
    if (createOpFamilyStmt != null) {
      $result.createOpFamilyStmt = createOpFamilyStmt;
    }
    if (alterOpFamilyStmt != null) {
      $result.alterOpFamilyStmt = alterOpFamilyStmt;
    }
    if (dropStmt != null) {
      $result.dropStmt = dropStmt;
    }
    if (truncateStmt != null) {
      $result.truncateStmt = truncateStmt;
    }
    if (commentStmt != null) {
      $result.commentStmt = commentStmt;
    }
    if (secLabelStmt != null) {
      $result.secLabelStmt = secLabelStmt;
    }
    if (declareCursorStmt != null) {
      $result.declareCursorStmt = declareCursorStmt;
    }
    if (closePortalStmt != null) {
      $result.closePortalStmt = closePortalStmt;
    }
    if (fetchStmt != null) {
      $result.fetchStmt = fetchStmt;
    }
    if (indexStmt != null) {
      $result.indexStmt = indexStmt;
    }
    if (createStatsStmt != null) {
      $result.createStatsStmt = createStatsStmt;
    }
    if (statsElem != null) {
      $result.statsElem = statsElem;
    }
    if (alterStatsStmt != null) {
      $result.alterStatsStmt = alterStatsStmt;
    }
    if (createFunctionStmt != null) {
      $result.createFunctionStmt = createFunctionStmt;
    }
    if (functionParameter != null) {
      $result.functionParameter = functionParameter;
    }
    if (alterFunctionStmt != null) {
      $result.alterFunctionStmt = alterFunctionStmt;
    }
    if (doStmt != null) {
      $result.doStmt = doStmt;
    }
    if (inlineCodeBlock != null) {
      $result.inlineCodeBlock = inlineCodeBlock;
    }
    if (callStmt != null) {
      $result.callStmt = callStmt;
    }
    if (callContext != null) {
      $result.callContext = callContext;
    }
    if (renameStmt != null) {
      $result.renameStmt = renameStmt;
    }
    if (alterObjectDependsStmt != null) {
      $result.alterObjectDependsStmt = alterObjectDependsStmt;
    }
    if (alterObjectSchemaStmt != null) {
      $result.alterObjectSchemaStmt = alterObjectSchemaStmt;
    }
    if (alterOwnerStmt != null) {
      $result.alterOwnerStmt = alterOwnerStmt;
    }
    if (alterOperatorStmt != null) {
      $result.alterOperatorStmt = alterOperatorStmt;
    }
    if (alterTypeStmt != null) {
      $result.alterTypeStmt = alterTypeStmt;
    }
    if (ruleStmt != null) {
      $result.ruleStmt = ruleStmt;
    }
    if (notifyStmt != null) {
      $result.notifyStmt = notifyStmt;
    }
    if (listenStmt != null) {
      $result.listenStmt = listenStmt;
    }
    if (unlistenStmt != null) {
      $result.unlistenStmt = unlistenStmt;
    }
    if (transactionStmt != null) {
      $result.transactionStmt = transactionStmt;
    }
    if (compositeTypeStmt != null) {
      $result.compositeTypeStmt = compositeTypeStmt;
    }
    if (createEnumStmt != null) {
      $result.createEnumStmt = createEnumStmt;
    }
    if (createRangeStmt != null) {
      $result.createRangeStmt = createRangeStmt;
    }
    if (alterEnumStmt != null) {
      $result.alterEnumStmt = alterEnumStmt;
    }
    if (viewStmt != null) {
      $result.viewStmt = viewStmt;
    }
    if (loadStmt != null) {
      $result.loadStmt = loadStmt;
    }
    if (createdbStmt != null) {
      $result.createdbStmt = createdbStmt;
    }
    if (alterDatabaseStmt != null) {
      $result.alterDatabaseStmt = alterDatabaseStmt;
    }
    if (alterDatabaseRefreshCollStmt != null) {
      $result.alterDatabaseRefreshCollStmt = alterDatabaseRefreshCollStmt;
    }
    if (alterDatabaseSetStmt != null) {
      $result.alterDatabaseSetStmt = alterDatabaseSetStmt;
    }
    if (dropdbStmt != null) {
      $result.dropdbStmt = dropdbStmt;
    }
    if (alterSystemStmt != null) {
      $result.alterSystemStmt = alterSystemStmt;
    }
    if (clusterStmt != null) {
      $result.clusterStmt = clusterStmt;
    }
    if (vacuumStmt != null) {
      $result.vacuumStmt = vacuumStmt;
    }
    if (vacuumRelation != null) {
      $result.vacuumRelation = vacuumRelation;
    }
    if (explainStmt != null) {
      $result.explainStmt = explainStmt;
    }
    if (createTableAsStmt != null) {
      $result.createTableAsStmt = createTableAsStmt;
    }
    if (refreshMatViewStmt != null) {
      $result.refreshMatViewStmt = refreshMatViewStmt;
    }
    if (checkPointStmt != null) {
      $result.checkPointStmt = checkPointStmt;
    }
    if (discardStmt != null) {
      $result.discardStmt = discardStmt;
    }
    if (lockStmt != null) {
      $result.lockStmt = lockStmt;
    }
    if (constraintsSetStmt != null) {
      $result.constraintsSetStmt = constraintsSetStmt;
    }
    if (reindexStmt != null) {
      $result.reindexStmt = reindexStmt;
    }
    if (createConversionStmt != null) {
      $result.createConversionStmt = createConversionStmt;
    }
    if (createCastStmt != null) {
      $result.createCastStmt = createCastStmt;
    }
    if (createTransformStmt != null) {
      $result.createTransformStmt = createTransformStmt;
    }
    if (prepareStmt != null) {
      $result.prepareStmt = prepareStmt;
    }
    if (executeStmt != null) {
      $result.executeStmt = executeStmt;
    }
    if (deallocateStmt != null) {
      $result.deallocateStmt = deallocateStmt;
    }
    if (dropOwnedStmt != null) {
      $result.dropOwnedStmt = dropOwnedStmt;
    }
    if (reassignOwnedStmt != null) {
      $result.reassignOwnedStmt = reassignOwnedStmt;
    }
    if (alterTsdictionaryStmt != null) {
      $result.alterTsdictionaryStmt = alterTsdictionaryStmt;
    }
    if (alterTsconfigurationStmt != null) {
      $result.alterTsconfigurationStmt = alterTsconfigurationStmt;
    }
    if (publicationTable != null) {
      $result.publicationTable = publicationTable;
    }
    if (publicationObjSpec != null) {
      $result.publicationObjSpec = publicationObjSpec;
    }
    if (createPublicationStmt != null) {
      $result.createPublicationStmt = createPublicationStmt;
    }
    if (alterPublicationStmt != null) {
      $result.alterPublicationStmt = alterPublicationStmt;
    }
    if (createSubscriptionStmt != null) {
      $result.createSubscriptionStmt = createSubscriptionStmt;
    }
    if (alterSubscriptionStmt != null) {
      $result.alterSubscriptionStmt = alterSubscriptionStmt;
    }
    if (dropSubscriptionStmt != null) {
      $result.dropSubscriptionStmt = dropSubscriptionStmt;
    }
    if (integer != null) {
      $result.integer = integer;
    }
    if (float != null) {
      $result.float = float;
    }
    if (boolean != null) {
      $result.boolean = boolean;
    }
    if (string != null) {
      $result.string = string;
    }
    if (bitString != null) {
      $result.bitString = bitString;
    }
    if (list != null) {
      $result.list = list;
    }
    if (intList != null) {
      $result.intList = intList;
    }
    if (oidList != null) {
      $result.oidList = oidList;
    }
    if (aConst != null) {
      $result.aConst = aConst;
    }
    return $result;
  }
  Node._() : super();
  factory Node.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Node.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static const $core.Map<$core.int, Node_Node> _Node_NodeByTag = {
    1 : Node_Node.alias,
    2 : Node_Node.rangeVar,
    3 : Node_Node.tableFunc,
    4 : Node_Node.intoClause,
    5 : Node_Node.var_5,
    6 : Node_Node.param,
    7 : Node_Node.aggref,
    8 : Node_Node.groupingFunc,
    9 : Node_Node.windowFunc,
    10 : Node_Node.subscriptingRef,
    11 : Node_Node.funcExpr,
    12 : Node_Node.namedArgExpr,
    13 : Node_Node.opExpr,
    14 : Node_Node.distinctExpr,
    15 : Node_Node.nullIfExpr,
    16 : Node_Node.scalarArrayOpExpr,
    17 : Node_Node.boolExpr,
    18 : Node_Node.subLink,
    19 : Node_Node.subPlan,
    20 : Node_Node.alternativeSubPlan,
    21 : Node_Node.fieldSelect,
    22 : Node_Node.fieldStore,
    23 : Node_Node.relabelType,
    24 : Node_Node.coerceViaIo,
    25 : Node_Node.arrayCoerceExpr,
    26 : Node_Node.convertRowtypeExpr,
    27 : Node_Node.collateExpr,
    28 : Node_Node.caseExpr,
    29 : Node_Node.caseWhen,
    30 : Node_Node.caseTestExpr,
    31 : Node_Node.arrayExpr,
    32 : Node_Node.rowExpr,
    33 : Node_Node.rowCompareExpr,
    34 : Node_Node.coalesceExpr,
    35 : Node_Node.minMaxExpr,
    36 : Node_Node.sqlvalueFunction,
    37 : Node_Node.xmlExpr,
    38 : Node_Node.jsonFormat,
    39 : Node_Node.jsonReturning,
    40 : Node_Node.jsonValueExpr,
    41 : Node_Node.jsonConstructorExpr,
    42 : Node_Node.jsonIsPredicate,
    43 : Node_Node.nullTest,
    44 : Node_Node.booleanTest,
    45 : Node_Node.coerceToDomain,
    46 : Node_Node.coerceToDomainValue,
    47 : Node_Node.setToDefault,
    48 : Node_Node.currentOfExpr,
    49 : Node_Node.nextValueExpr,
    50 : Node_Node.inferenceElem,
    51 : Node_Node.targetEntry,
    52 : Node_Node.rangeTblRef,
    53 : Node_Node.joinExpr,
    54 : Node_Node.fromExpr,
    55 : Node_Node.onConflictExpr,
    56 : Node_Node.query,
    57 : Node_Node.typeName,
    58 : Node_Node.columnRef,
    59 : Node_Node.paramRef,
    60 : Node_Node.aExpr,
    61 : Node_Node.typeCast,
    62 : Node_Node.collateClause,
    63 : Node_Node.roleSpec,
    64 : Node_Node.funcCall,
    65 : Node_Node.aStar,
    66 : Node_Node.aIndices,
    67 : Node_Node.aIndirection,
    68 : Node_Node.aArrayExpr,
    69 : Node_Node.resTarget,
    70 : Node_Node.multiAssignRef,
    71 : Node_Node.sortBy,
    72 : Node_Node.windowDef,
    73 : Node_Node.rangeSubselect,
    74 : Node_Node.rangeFunction,
    75 : Node_Node.rangeTableFunc,
    76 : Node_Node.rangeTableFuncCol,
    77 : Node_Node.rangeTableSample,
    78 : Node_Node.columnDef,
    79 : Node_Node.tableLikeClause,
    80 : Node_Node.indexElem,
    81 : Node_Node.defElem,
    82 : Node_Node.lockingClause,
    83 : Node_Node.xmlSerialize,
    84 : Node_Node.partitionElem,
    85 : Node_Node.partitionSpec,
    86 : Node_Node.partitionBoundSpec,
    87 : Node_Node.partitionRangeDatum,
    88 : Node_Node.partitionCmd,
    89 : Node_Node.rangeTblEntry,
    90 : Node_Node.rtepermissionInfo,
    91 : Node_Node.rangeTblFunction,
    92 : Node_Node.tableSampleClause,
    93 : Node_Node.withCheckOption,
    94 : Node_Node.sortGroupClause,
    95 : Node_Node.groupingSet,
    96 : Node_Node.windowClause,
    97 : Node_Node.rowMarkClause,
    98 : Node_Node.withClause,
    99 : Node_Node.inferClause,
    100 : Node_Node.onConflictClause,
    101 : Node_Node.ctesearchClause,
    102 : Node_Node.ctecycleClause,
    103 : Node_Node.commonTableExpr,
    104 : Node_Node.mergeWhenClause,
    105 : Node_Node.mergeAction,
    106 : Node_Node.triggerTransition,
    107 : Node_Node.jsonOutput,
    108 : Node_Node.jsonKeyValue,
    109 : Node_Node.jsonObjectConstructor,
    110 : Node_Node.jsonArrayConstructor,
    111 : Node_Node.jsonArrayQueryConstructor,
    112 : Node_Node.jsonAggConstructor,
    113 : Node_Node.jsonObjectAgg,
    114 : Node_Node.jsonArrayAgg,
    115 : Node_Node.rawStmt,
    116 : Node_Node.insertStmt,
    117 : Node_Node.deleteStmt,
    118 : Node_Node.updateStmt,
    119 : Node_Node.mergeStmt,
    120 : Node_Node.selectStmt,
    121 : Node_Node.setOperationStmt,
    122 : Node_Node.returnStmt,
    123 : Node_Node.plassignStmt,
    124 : Node_Node.createSchemaStmt,
    125 : Node_Node.alterTableStmt,
    126 : Node_Node.replicaIdentityStmt,
    127 : Node_Node.alterTableCmd,
    128 : Node_Node.alterCollationStmt,
    129 : Node_Node.alterDomainStmt,
    130 : Node_Node.grantStmt,
    131 : Node_Node.objectWithArgs,
    132 : Node_Node.accessPriv,
    133 : Node_Node.grantRoleStmt,
    134 : Node_Node.alterDefaultPrivilegesStmt,
    135 : Node_Node.copyStmt,
    136 : Node_Node.variableSetStmt,
    137 : Node_Node.variableShowStmt,
    138 : Node_Node.createStmt,
    139 : Node_Node.constraint,
    140 : Node_Node.createTableSpaceStmt,
    141 : Node_Node.dropTableSpaceStmt,
    142 : Node_Node.alterTableSpaceOptionsStmt,
    143 : Node_Node.alterTableMoveAllStmt,
    144 : Node_Node.createExtensionStmt,
    145 : Node_Node.alterExtensionStmt,
    146 : Node_Node.alterExtensionContentsStmt,
    147 : Node_Node.createFdwStmt,
    148 : Node_Node.alterFdwStmt,
    149 : Node_Node.createForeignServerStmt,
    150 : Node_Node.alterForeignServerStmt,
    151 : Node_Node.createForeignTableStmt,
    152 : Node_Node.createUserMappingStmt,
    153 : Node_Node.alterUserMappingStmt,
    154 : Node_Node.dropUserMappingStmt,
    155 : Node_Node.importForeignSchemaStmt,
    156 : Node_Node.createPolicyStmt,
    157 : Node_Node.alterPolicyStmt,
    158 : Node_Node.createAmStmt,
    159 : Node_Node.createTrigStmt,
    160 : Node_Node.createEventTrigStmt,
    161 : Node_Node.alterEventTrigStmt,
    162 : Node_Node.createPlangStmt,
    163 : Node_Node.createRoleStmt,
    164 : Node_Node.alterRoleStmt,
    165 : Node_Node.alterRoleSetStmt,
    166 : Node_Node.dropRoleStmt,
    167 : Node_Node.createSeqStmt,
    168 : Node_Node.alterSeqStmt,
    169 : Node_Node.defineStmt,
    170 : Node_Node.createDomainStmt,
    171 : Node_Node.createOpClassStmt,
    172 : Node_Node.createOpClassItem,
    173 : Node_Node.createOpFamilyStmt,
    174 : Node_Node.alterOpFamilyStmt,
    175 : Node_Node.dropStmt,
    176 : Node_Node.truncateStmt,
    177 : Node_Node.commentStmt,
    178 : Node_Node.secLabelStmt,
    179 : Node_Node.declareCursorStmt,
    180 : Node_Node.closePortalStmt,
    181 : Node_Node.fetchStmt,
    182 : Node_Node.indexStmt,
    183 : Node_Node.createStatsStmt,
    184 : Node_Node.statsElem,
    185 : Node_Node.alterStatsStmt,
    186 : Node_Node.createFunctionStmt,
    187 : Node_Node.functionParameter,
    188 : Node_Node.alterFunctionStmt,
    189 : Node_Node.doStmt,
    190 : Node_Node.inlineCodeBlock,
    191 : Node_Node.callStmt,
    192 : Node_Node.callContext,
    193 : Node_Node.renameStmt,
    194 : Node_Node.alterObjectDependsStmt,
    195 : Node_Node.alterObjectSchemaStmt,
    196 : Node_Node.alterOwnerStmt,
    197 : Node_Node.alterOperatorStmt,
    198 : Node_Node.alterTypeStmt,
    199 : Node_Node.ruleStmt,
    200 : Node_Node.notifyStmt,
    201 : Node_Node.listenStmt,
    202 : Node_Node.unlistenStmt,
    203 : Node_Node.transactionStmt,
    204 : Node_Node.compositeTypeStmt,
    205 : Node_Node.createEnumStmt,
    206 : Node_Node.createRangeStmt,
    207 : Node_Node.alterEnumStmt,
    208 : Node_Node.viewStmt,
    209 : Node_Node.loadStmt,
    210 : Node_Node.createdbStmt,
    211 : Node_Node.alterDatabaseStmt,
    212 : Node_Node.alterDatabaseRefreshCollStmt,
    213 : Node_Node.alterDatabaseSetStmt,
    214 : Node_Node.dropdbStmt,
    215 : Node_Node.alterSystemStmt,
    216 : Node_Node.clusterStmt,
    217 : Node_Node.vacuumStmt,
    218 : Node_Node.vacuumRelation,
    219 : Node_Node.explainStmt,
    220 : Node_Node.createTableAsStmt,
    221 : Node_Node.refreshMatViewStmt,
    222 : Node_Node.checkPointStmt,
    223 : Node_Node.discardStmt,
    224 : Node_Node.lockStmt,
    225 : Node_Node.constraintsSetStmt,
    226 : Node_Node.reindexStmt,
    227 : Node_Node.createConversionStmt,
    228 : Node_Node.createCastStmt,
    229 : Node_Node.createTransformStmt,
    230 : Node_Node.prepareStmt,
    231 : Node_Node.executeStmt,
    232 : Node_Node.deallocateStmt,
    233 : Node_Node.dropOwnedStmt,
    234 : Node_Node.reassignOwnedStmt,
    235 : Node_Node.alterTsdictionaryStmt,
    236 : Node_Node.alterTsconfigurationStmt,
    237 : Node_Node.publicationTable,
    238 : Node_Node.publicationObjSpec,
    239 : Node_Node.createPublicationStmt,
    240 : Node_Node.alterPublicationStmt,
    241 : Node_Node.createSubscriptionStmt,
    242 : Node_Node.alterSubscriptionStmt,
    243 : Node_Node.dropSubscriptionStmt,
    244 : Node_Node.integer,
    245 : Node_Node.float,
    246 : Node_Node.boolean,
    247 : Node_Node.string,
    248 : Node_Node.bitString,
    249 : Node_Node.list,
    250 : Node_Node.intList,
    251 : Node_Node.oidList,
    252 : Node_Node.aConst,
    0 : Node_Node.notSet
  };
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Node', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..oo(0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252])
    ..aOM<Alias>(1, _omitFieldNames ? '' : 'Alias', protoName: 'alias', subBuilder: Alias.create)
    ..aOM<RangeVar>(2, _omitFieldNames ? '' : 'RangeVar', protoName: 'range_var', subBuilder: RangeVar.create)
    ..aOM<TableFunc>(3, _omitFieldNames ? '' : 'TableFunc', protoName: 'table_func', subBuilder: TableFunc.create)
    ..aOM<IntoClause>(4, _omitFieldNames ? '' : 'IntoClause', protoName: 'into_clause', subBuilder: IntoClause.create)
    ..aOM<Var>(5, _omitFieldNames ? '' : 'Var', protoName: 'var', subBuilder: Var.create)
    ..aOM<Param>(6, _omitFieldNames ? '' : 'Param', protoName: 'param', subBuilder: Param.create)
    ..aOM<Aggref>(7, _omitFieldNames ? '' : 'Aggref', protoName: 'aggref', subBuilder: Aggref.create)
    ..aOM<GroupingFunc>(8, _omitFieldNames ? '' : 'GroupingFunc', protoName: 'grouping_func', subBuilder: GroupingFunc.create)
    ..aOM<WindowFunc>(9, _omitFieldNames ? '' : 'WindowFunc', protoName: 'window_func', subBuilder: WindowFunc.create)
    ..aOM<SubscriptingRef>(10, _omitFieldNames ? '' : 'SubscriptingRef', protoName: 'subscripting_ref', subBuilder: SubscriptingRef.create)
    ..aOM<FuncExpr>(11, _omitFieldNames ? '' : 'FuncExpr', protoName: 'func_expr', subBuilder: FuncExpr.create)
    ..aOM<NamedArgExpr>(12, _omitFieldNames ? '' : 'NamedArgExpr', protoName: 'named_arg_expr', subBuilder: NamedArgExpr.create)
    ..aOM<OpExpr>(13, _omitFieldNames ? '' : 'OpExpr', protoName: 'op_expr', subBuilder: OpExpr.create)
    ..aOM<DistinctExpr>(14, _omitFieldNames ? '' : 'DistinctExpr', protoName: 'distinct_expr', subBuilder: DistinctExpr.create)
    ..aOM<NullIfExpr>(15, _omitFieldNames ? '' : 'NullIfExpr', protoName: 'null_if_expr', subBuilder: NullIfExpr.create)
    ..aOM<ScalarArrayOpExpr>(16, _omitFieldNames ? '' : 'ScalarArrayOpExpr', protoName: 'scalar_array_op_expr', subBuilder: ScalarArrayOpExpr.create)
    ..aOM<BoolExpr>(17, _omitFieldNames ? '' : 'BoolExpr', protoName: 'bool_expr', subBuilder: BoolExpr.create)
    ..aOM<SubLink>(18, _omitFieldNames ? '' : 'SubLink', protoName: 'sub_link', subBuilder: SubLink.create)
    ..aOM<SubPlan>(19, _omitFieldNames ? '' : 'SubPlan', protoName: 'sub_plan', subBuilder: SubPlan.create)
    ..aOM<AlternativeSubPlan>(20, _omitFieldNames ? '' : 'AlternativeSubPlan', protoName: 'alternative_sub_plan', subBuilder: AlternativeSubPlan.create)
    ..aOM<FieldSelect>(21, _omitFieldNames ? '' : 'FieldSelect', protoName: 'field_select', subBuilder: FieldSelect.create)
    ..aOM<FieldStore>(22, _omitFieldNames ? '' : 'FieldStore', protoName: 'field_store', subBuilder: FieldStore.create)
    ..aOM<RelabelType>(23, _omitFieldNames ? '' : 'RelabelType', protoName: 'relabel_type', subBuilder: RelabelType.create)
    ..aOM<CoerceViaIO>(24, _omitFieldNames ? '' : 'CoerceViaIO', protoName: 'coerce_via_io', subBuilder: CoerceViaIO.create)
    ..aOM<ArrayCoerceExpr>(25, _omitFieldNames ? '' : 'ArrayCoerceExpr', protoName: 'array_coerce_expr', subBuilder: ArrayCoerceExpr.create)
    ..aOM<ConvertRowtypeExpr>(26, _omitFieldNames ? '' : 'ConvertRowtypeExpr', protoName: 'convert_rowtype_expr', subBuilder: ConvertRowtypeExpr.create)
    ..aOM<CollateExpr>(27, _omitFieldNames ? '' : 'CollateExpr', protoName: 'collate_expr', subBuilder: CollateExpr.create)
    ..aOM<CaseExpr>(28, _omitFieldNames ? '' : 'CaseExpr', protoName: 'case_expr', subBuilder: CaseExpr.create)
    ..aOM<CaseWhen>(29, _omitFieldNames ? '' : 'CaseWhen', protoName: 'case_when', subBuilder: CaseWhen.create)
    ..aOM<CaseTestExpr>(30, _omitFieldNames ? '' : 'CaseTestExpr', protoName: 'case_test_expr', subBuilder: CaseTestExpr.create)
    ..aOM<ArrayExpr>(31, _omitFieldNames ? '' : 'ArrayExpr', protoName: 'array_expr', subBuilder: ArrayExpr.create)
    ..aOM<RowExpr>(32, _omitFieldNames ? '' : 'RowExpr', protoName: 'row_expr', subBuilder: RowExpr.create)
    ..aOM<RowCompareExpr>(33, _omitFieldNames ? '' : 'RowCompareExpr', protoName: 'row_compare_expr', subBuilder: RowCompareExpr.create)
    ..aOM<CoalesceExpr>(34, _omitFieldNames ? '' : 'CoalesceExpr', protoName: 'coalesce_expr', subBuilder: CoalesceExpr.create)
    ..aOM<MinMaxExpr>(35, _omitFieldNames ? '' : 'MinMaxExpr', protoName: 'min_max_expr', subBuilder: MinMaxExpr.create)
    ..aOM<SQLValueFunction>(36, _omitFieldNames ? '' : 'SQLValueFunction', protoName: 'sqlvalue_function', subBuilder: SQLValueFunction.create)
    ..aOM<XmlExpr>(37, _omitFieldNames ? '' : 'XmlExpr', protoName: 'xml_expr', subBuilder: XmlExpr.create)
    ..aOM<JsonFormat>(38, _omitFieldNames ? '' : 'JsonFormat', protoName: 'json_format', subBuilder: JsonFormat.create)
    ..aOM<JsonReturning>(39, _omitFieldNames ? '' : 'JsonReturning', protoName: 'json_returning', subBuilder: JsonReturning.create)
    ..aOM<JsonValueExpr>(40, _omitFieldNames ? '' : 'JsonValueExpr', protoName: 'json_value_expr', subBuilder: JsonValueExpr.create)
    ..aOM<JsonConstructorExpr>(41, _omitFieldNames ? '' : 'JsonConstructorExpr', protoName: 'json_constructor_expr', subBuilder: JsonConstructorExpr.create)
    ..aOM<JsonIsPredicate>(42, _omitFieldNames ? '' : 'JsonIsPredicate', protoName: 'json_is_predicate', subBuilder: JsonIsPredicate.create)
    ..aOM<NullTest>(43, _omitFieldNames ? '' : 'NullTest', protoName: 'null_test', subBuilder: NullTest.create)
    ..aOM<BooleanTest>(44, _omitFieldNames ? '' : 'BooleanTest', protoName: 'boolean_test', subBuilder: BooleanTest.create)
    ..aOM<CoerceToDomain>(45, _omitFieldNames ? '' : 'CoerceToDomain', protoName: 'coerce_to_domain', subBuilder: CoerceToDomain.create)
    ..aOM<CoerceToDomainValue>(46, _omitFieldNames ? '' : 'CoerceToDomainValue', protoName: 'coerce_to_domain_value', subBuilder: CoerceToDomainValue.create)
    ..aOM<SetToDefault>(47, _omitFieldNames ? '' : 'SetToDefault', protoName: 'set_to_default', subBuilder: SetToDefault.create)
    ..aOM<CurrentOfExpr>(48, _omitFieldNames ? '' : 'CurrentOfExpr', protoName: 'current_of_expr', subBuilder: CurrentOfExpr.create)
    ..aOM<NextValueExpr>(49, _omitFieldNames ? '' : 'NextValueExpr', protoName: 'next_value_expr', subBuilder: NextValueExpr.create)
    ..aOM<InferenceElem>(50, _omitFieldNames ? '' : 'InferenceElem', protoName: 'inference_elem', subBuilder: InferenceElem.create)
    ..aOM<TargetEntry>(51, _omitFieldNames ? '' : 'TargetEntry', protoName: 'target_entry', subBuilder: TargetEntry.create)
    ..aOM<RangeTblRef>(52, _omitFieldNames ? '' : 'RangeTblRef', protoName: 'range_tbl_ref', subBuilder: RangeTblRef.create)
    ..aOM<JoinExpr>(53, _omitFieldNames ? '' : 'JoinExpr', protoName: 'join_expr', subBuilder: JoinExpr.create)
    ..aOM<FromExpr>(54, _omitFieldNames ? '' : 'FromExpr', protoName: 'from_expr', subBuilder: FromExpr.create)
    ..aOM<OnConflictExpr>(55, _omitFieldNames ? '' : 'OnConflictExpr', protoName: 'on_conflict_expr', subBuilder: OnConflictExpr.create)
    ..aOM<Query>(56, _omitFieldNames ? '' : 'Query', protoName: 'query', subBuilder: Query.create)
    ..aOM<TypeName>(57, _omitFieldNames ? '' : 'TypeName', protoName: 'type_name', subBuilder: TypeName.create)
    ..aOM<ColumnRef>(58, _omitFieldNames ? '' : 'ColumnRef', protoName: 'column_ref', subBuilder: ColumnRef.create)
    ..aOM<ParamRef>(59, _omitFieldNames ? '' : 'ParamRef', protoName: 'param_ref', subBuilder: ParamRef.create)
    ..aOM<A_Expr>(60, _omitFieldNames ? '' : 'A_Expr', protoName: 'a_expr', subBuilder: A_Expr.create)
    ..aOM<TypeCast>(61, _omitFieldNames ? '' : 'TypeCast', protoName: 'type_cast', subBuilder: TypeCast.create)
    ..aOM<CollateClause>(62, _omitFieldNames ? '' : 'CollateClause', protoName: 'collate_clause', subBuilder: CollateClause.create)
    ..aOM<RoleSpec>(63, _omitFieldNames ? '' : 'RoleSpec', protoName: 'role_spec', subBuilder: RoleSpec.create)
    ..aOM<FuncCall>(64, _omitFieldNames ? '' : 'FuncCall', protoName: 'func_call', subBuilder: FuncCall.create)
    ..aOM<A_Star>(65, _omitFieldNames ? '' : 'A_Star', protoName: 'a_star', subBuilder: A_Star.create)
    ..aOM<A_Indices>(66, _omitFieldNames ? '' : 'A_Indices', protoName: 'a_indices', subBuilder: A_Indices.create)
    ..aOM<A_Indirection>(67, _omitFieldNames ? '' : 'A_Indirection', protoName: 'a_indirection', subBuilder: A_Indirection.create)
    ..aOM<A_ArrayExpr>(68, _omitFieldNames ? '' : 'A_ArrayExpr', protoName: 'a_array_expr', subBuilder: A_ArrayExpr.create)
    ..aOM<ResTarget>(69, _omitFieldNames ? '' : 'ResTarget', protoName: 'res_target', subBuilder: ResTarget.create)
    ..aOM<MultiAssignRef>(70, _omitFieldNames ? '' : 'MultiAssignRef', protoName: 'multi_assign_ref', subBuilder: MultiAssignRef.create)
    ..aOM<SortBy>(71, _omitFieldNames ? '' : 'SortBy', protoName: 'sort_by', subBuilder: SortBy.create)
    ..aOM<WindowDef>(72, _omitFieldNames ? '' : 'WindowDef', protoName: 'window_def', subBuilder: WindowDef.create)
    ..aOM<RangeSubselect>(73, _omitFieldNames ? '' : 'RangeSubselect', protoName: 'range_subselect', subBuilder: RangeSubselect.create)
    ..aOM<RangeFunction>(74, _omitFieldNames ? '' : 'RangeFunction', protoName: 'range_function', subBuilder: RangeFunction.create)
    ..aOM<RangeTableFunc>(75, _omitFieldNames ? '' : 'RangeTableFunc', protoName: 'range_table_func', subBuilder: RangeTableFunc.create)
    ..aOM<RangeTableFuncCol>(76, _omitFieldNames ? '' : 'RangeTableFuncCol', protoName: 'range_table_func_col', subBuilder: RangeTableFuncCol.create)
    ..aOM<RangeTableSample>(77, _omitFieldNames ? '' : 'RangeTableSample', protoName: 'range_table_sample', subBuilder: RangeTableSample.create)
    ..aOM<ColumnDef>(78, _omitFieldNames ? '' : 'ColumnDef', protoName: 'column_def', subBuilder: ColumnDef.create)
    ..aOM<TableLikeClause>(79, _omitFieldNames ? '' : 'TableLikeClause', protoName: 'table_like_clause', subBuilder: TableLikeClause.create)
    ..aOM<IndexElem>(80, _omitFieldNames ? '' : 'IndexElem', protoName: 'index_elem', subBuilder: IndexElem.create)
    ..aOM<DefElem>(81, _omitFieldNames ? '' : 'DefElem', protoName: 'def_elem', subBuilder: DefElem.create)
    ..aOM<LockingClause>(82, _omitFieldNames ? '' : 'LockingClause', protoName: 'locking_clause', subBuilder: LockingClause.create)
    ..aOM<XmlSerialize>(83, _omitFieldNames ? '' : 'XmlSerialize', protoName: 'xml_serialize', subBuilder: XmlSerialize.create)
    ..aOM<PartitionElem>(84, _omitFieldNames ? '' : 'PartitionElem', protoName: 'partition_elem', subBuilder: PartitionElem.create)
    ..aOM<PartitionSpec>(85, _omitFieldNames ? '' : 'PartitionSpec', protoName: 'partition_spec', subBuilder: PartitionSpec.create)
    ..aOM<PartitionBoundSpec>(86, _omitFieldNames ? '' : 'PartitionBoundSpec', protoName: 'partition_bound_spec', subBuilder: PartitionBoundSpec.create)
    ..aOM<PartitionRangeDatum>(87, _omitFieldNames ? '' : 'PartitionRangeDatum', protoName: 'partition_range_datum', subBuilder: PartitionRangeDatum.create)
    ..aOM<PartitionCmd>(88, _omitFieldNames ? '' : 'PartitionCmd', protoName: 'partition_cmd', subBuilder: PartitionCmd.create)
    ..aOM<RangeTblEntry>(89, _omitFieldNames ? '' : 'RangeTblEntry', protoName: 'range_tbl_entry', subBuilder: RangeTblEntry.create)
    ..aOM<RTEPermissionInfo>(90, _omitFieldNames ? '' : 'RTEPermissionInfo', protoName: 'rtepermission_info', subBuilder: RTEPermissionInfo.create)
    ..aOM<RangeTblFunction>(91, _omitFieldNames ? '' : 'RangeTblFunction', protoName: 'range_tbl_function', subBuilder: RangeTblFunction.create)
    ..aOM<TableSampleClause>(92, _omitFieldNames ? '' : 'TableSampleClause', protoName: 'table_sample_clause', subBuilder: TableSampleClause.create)
    ..aOM<WithCheckOption>(93, _omitFieldNames ? '' : 'WithCheckOption', protoName: 'with_check_option', subBuilder: WithCheckOption.create)
    ..aOM<SortGroupClause>(94, _omitFieldNames ? '' : 'SortGroupClause', protoName: 'sort_group_clause', subBuilder: SortGroupClause.create)
    ..aOM<GroupingSet>(95, _omitFieldNames ? '' : 'GroupingSet', protoName: 'grouping_set', subBuilder: GroupingSet.create)
    ..aOM<WindowClause>(96, _omitFieldNames ? '' : 'WindowClause', protoName: 'window_clause', subBuilder: WindowClause.create)
    ..aOM<RowMarkClause>(97, _omitFieldNames ? '' : 'RowMarkClause', protoName: 'row_mark_clause', subBuilder: RowMarkClause.create)
    ..aOM<WithClause>(98, _omitFieldNames ? '' : 'WithClause', protoName: 'with_clause', subBuilder: WithClause.create)
    ..aOM<InferClause>(99, _omitFieldNames ? '' : 'InferClause', protoName: 'infer_clause', subBuilder: InferClause.create)
    ..aOM<OnConflictClause>(100, _omitFieldNames ? '' : 'OnConflictClause', protoName: 'on_conflict_clause', subBuilder: OnConflictClause.create)
    ..aOM<CTESearchClause>(101, _omitFieldNames ? '' : 'CTESearchClause', protoName: 'ctesearch_clause', subBuilder: CTESearchClause.create)
    ..aOM<CTECycleClause>(102, _omitFieldNames ? '' : 'CTECycleClause', protoName: 'ctecycle_clause', subBuilder: CTECycleClause.create)
    ..aOM<CommonTableExpr>(103, _omitFieldNames ? '' : 'CommonTableExpr', protoName: 'common_table_expr', subBuilder: CommonTableExpr.create)
    ..aOM<MergeWhenClause>(104, _omitFieldNames ? '' : 'MergeWhenClause', protoName: 'merge_when_clause', subBuilder: MergeWhenClause.create)
    ..aOM<MergeAction>(105, _omitFieldNames ? '' : 'MergeAction', protoName: 'merge_action', subBuilder: MergeAction.create)
    ..aOM<TriggerTransition>(106, _omitFieldNames ? '' : 'TriggerTransition', protoName: 'trigger_transition', subBuilder: TriggerTransition.create)
    ..aOM<JsonOutput>(107, _omitFieldNames ? '' : 'JsonOutput', protoName: 'json_output', subBuilder: JsonOutput.create)
    ..aOM<JsonKeyValue>(108, _omitFieldNames ? '' : 'JsonKeyValue', protoName: 'json_key_value', subBuilder: JsonKeyValue.create)
    ..aOM<JsonObjectConstructor>(109, _omitFieldNames ? '' : 'JsonObjectConstructor', protoName: 'json_object_constructor', subBuilder: JsonObjectConstructor.create)
    ..aOM<JsonArrayConstructor>(110, _omitFieldNames ? '' : 'JsonArrayConstructor', protoName: 'json_array_constructor', subBuilder: JsonArrayConstructor.create)
    ..aOM<JsonArrayQueryConstructor>(111, _omitFieldNames ? '' : 'JsonArrayQueryConstructor', protoName: 'json_array_query_constructor', subBuilder: JsonArrayQueryConstructor.create)
    ..aOM<JsonAggConstructor>(112, _omitFieldNames ? '' : 'JsonAggConstructor', protoName: 'json_agg_constructor', subBuilder: JsonAggConstructor.create)
    ..aOM<JsonObjectAgg>(113, _omitFieldNames ? '' : 'JsonObjectAgg', protoName: 'json_object_agg', subBuilder: JsonObjectAgg.create)
    ..aOM<JsonArrayAgg>(114, _omitFieldNames ? '' : 'JsonArrayAgg', protoName: 'json_array_agg', subBuilder: JsonArrayAgg.create)
    ..aOM<RawStmt>(115, _omitFieldNames ? '' : 'RawStmt', protoName: 'raw_stmt', subBuilder: RawStmt.create)
    ..aOM<InsertStmt>(116, _omitFieldNames ? '' : 'InsertStmt', protoName: 'insert_stmt', subBuilder: InsertStmt.create)
    ..aOM<DeleteStmt>(117, _omitFieldNames ? '' : 'DeleteStmt', protoName: 'delete_stmt', subBuilder: DeleteStmt.create)
    ..aOM<UpdateStmt>(118, _omitFieldNames ? '' : 'UpdateStmt', protoName: 'update_stmt', subBuilder: UpdateStmt.create)
    ..aOM<MergeStmt>(119, _omitFieldNames ? '' : 'MergeStmt', protoName: 'merge_stmt', subBuilder: MergeStmt.create)
    ..aOM<SelectStmt>(120, _omitFieldNames ? '' : 'SelectStmt', protoName: 'select_stmt', subBuilder: SelectStmt.create)
    ..aOM<SetOperationStmt>(121, _omitFieldNames ? '' : 'SetOperationStmt', protoName: 'set_operation_stmt', subBuilder: SetOperationStmt.create)
    ..aOM<ReturnStmt>(122, _omitFieldNames ? '' : 'ReturnStmt', protoName: 'return_stmt', subBuilder: ReturnStmt.create)
    ..aOM<PLAssignStmt>(123, _omitFieldNames ? '' : 'PLAssignStmt', protoName: 'plassign_stmt', subBuilder: PLAssignStmt.create)
    ..aOM<CreateSchemaStmt>(124, _omitFieldNames ? '' : 'CreateSchemaStmt', protoName: 'create_schema_stmt', subBuilder: CreateSchemaStmt.create)
    ..aOM<AlterTableStmt>(125, _omitFieldNames ? '' : 'AlterTableStmt', protoName: 'alter_table_stmt', subBuilder: AlterTableStmt.create)
    ..aOM<ReplicaIdentityStmt>(126, _omitFieldNames ? '' : 'ReplicaIdentityStmt', protoName: 'replica_identity_stmt', subBuilder: ReplicaIdentityStmt.create)
    ..aOM<AlterTableCmd>(127, _omitFieldNames ? '' : 'AlterTableCmd', protoName: 'alter_table_cmd', subBuilder: AlterTableCmd.create)
    ..aOM<AlterCollationStmt>(128, _omitFieldNames ? '' : 'AlterCollationStmt', protoName: 'alter_collation_stmt', subBuilder: AlterCollationStmt.create)
    ..aOM<AlterDomainStmt>(129, _omitFieldNames ? '' : 'AlterDomainStmt', protoName: 'alter_domain_stmt', subBuilder: AlterDomainStmt.create)
    ..aOM<GrantStmt>(130, _omitFieldNames ? '' : 'GrantStmt', protoName: 'grant_stmt', subBuilder: GrantStmt.create)
    ..aOM<ObjectWithArgs>(131, _omitFieldNames ? '' : 'ObjectWithArgs', protoName: 'object_with_args', subBuilder: ObjectWithArgs.create)
    ..aOM<AccessPriv>(132, _omitFieldNames ? '' : 'AccessPriv', protoName: 'access_priv', subBuilder: AccessPriv.create)
    ..aOM<GrantRoleStmt>(133, _omitFieldNames ? '' : 'GrantRoleStmt', protoName: 'grant_role_stmt', subBuilder: GrantRoleStmt.create)
    ..aOM<AlterDefaultPrivilegesStmt>(134, _omitFieldNames ? '' : 'AlterDefaultPrivilegesStmt', protoName: 'alter_default_privileges_stmt', subBuilder: AlterDefaultPrivilegesStmt.create)
    ..aOM<CopyStmt>(135, _omitFieldNames ? '' : 'CopyStmt', protoName: 'copy_stmt', subBuilder: CopyStmt.create)
    ..aOM<VariableSetStmt>(136, _omitFieldNames ? '' : 'VariableSetStmt', protoName: 'variable_set_stmt', subBuilder: VariableSetStmt.create)
    ..aOM<VariableShowStmt>(137, _omitFieldNames ? '' : 'VariableShowStmt', protoName: 'variable_show_stmt', subBuilder: VariableShowStmt.create)
    ..aOM<CreateStmt>(138, _omitFieldNames ? '' : 'CreateStmt', protoName: 'create_stmt', subBuilder: CreateStmt.create)
    ..aOM<Constraint>(139, _omitFieldNames ? '' : 'Constraint', protoName: 'constraint', subBuilder: Constraint.create)
    ..aOM<CreateTableSpaceStmt>(140, _omitFieldNames ? '' : 'CreateTableSpaceStmt', protoName: 'create_table_space_stmt', subBuilder: CreateTableSpaceStmt.create)
    ..aOM<DropTableSpaceStmt>(141, _omitFieldNames ? '' : 'DropTableSpaceStmt', protoName: 'drop_table_space_stmt', subBuilder: DropTableSpaceStmt.create)
    ..aOM<AlterTableSpaceOptionsStmt>(142, _omitFieldNames ? '' : 'AlterTableSpaceOptionsStmt', protoName: 'alter_table_space_options_stmt', subBuilder: AlterTableSpaceOptionsStmt.create)
    ..aOM<AlterTableMoveAllStmt>(143, _omitFieldNames ? '' : 'AlterTableMoveAllStmt', protoName: 'alter_table_move_all_stmt', subBuilder: AlterTableMoveAllStmt.create)
    ..aOM<CreateExtensionStmt>(144, _omitFieldNames ? '' : 'CreateExtensionStmt', protoName: 'create_extension_stmt', subBuilder: CreateExtensionStmt.create)
    ..aOM<AlterExtensionStmt>(145, _omitFieldNames ? '' : 'AlterExtensionStmt', protoName: 'alter_extension_stmt', subBuilder: AlterExtensionStmt.create)
    ..aOM<AlterExtensionContentsStmt>(146, _omitFieldNames ? '' : 'AlterExtensionContentsStmt', protoName: 'alter_extension_contents_stmt', subBuilder: AlterExtensionContentsStmt.create)
    ..aOM<CreateFdwStmt>(147, _omitFieldNames ? '' : 'CreateFdwStmt', protoName: 'create_fdw_stmt', subBuilder: CreateFdwStmt.create)
    ..aOM<AlterFdwStmt>(148, _omitFieldNames ? '' : 'AlterFdwStmt', protoName: 'alter_fdw_stmt', subBuilder: AlterFdwStmt.create)
    ..aOM<CreateForeignServerStmt>(149, _omitFieldNames ? '' : 'CreateForeignServerStmt', protoName: 'create_foreign_server_stmt', subBuilder: CreateForeignServerStmt.create)
    ..aOM<AlterForeignServerStmt>(150, _omitFieldNames ? '' : 'AlterForeignServerStmt', protoName: 'alter_foreign_server_stmt', subBuilder: AlterForeignServerStmt.create)
    ..aOM<CreateForeignTableStmt>(151, _omitFieldNames ? '' : 'CreateForeignTableStmt', protoName: 'create_foreign_table_stmt', subBuilder: CreateForeignTableStmt.create)
    ..aOM<CreateUserMappingStmt>(152, _omitFieldNames ? '' : 'CreateUserMappingStmt', protoName: 'create_user_mapping_stmt', subBuilder: CreateUserMappingStmt.create)
    ..aOM<AlterUserMappingStmt>(153, _omitFieldNames ? '' : 'AlterUserMappingStmt', protoName: 'alter_user_mapping_stmt', subBuilder: AlterUserMappingStmt.create)
    ..aOM<DropUserMappingStmt>(154, _omitFieldNames ? '' : 'DropUserMappingStmt', protoName: 'drop_user_mapping_stmt', subBuilder: DropUserMappingStmt.create)
    ..aOM<ImportForeignSchemaStmt>(155, _omitFieldNames ? '' : 'ImportForeignSchemaStmt', protoName: 'import_foreign_schema_stmt', subBuilder: ImportForeignSchemaStmt.create)
    ..aOM<CreatePolicyStmt>(156, _omitFieldNames ? '' : 'CreatePolicyStmt', protoName: 'create_policy_stmt', subBuilder: CreatePolicyStmt.create)
    ..aOM<AlterPolicyStmt>(157, _omitFieldNames ? '' : 'AlterPolicyStmt', protoName: 'alter_policy_stmt', subBuilder: AlterPolicyStmt.create)
    ..aOM<CreateAmStmt>(158, _omitFieldNames ? '' : 'CreateAmStmt', protoName: 'create_am_stmt', subBuilder: CreateAmStmt.create)
    ..aOM<CreateTrigStmt>(159, _omitFieldNames ? '' : 'CreateTrigStmt', protoName: 'create_trig_stmt', subBuilder: CreateTrigStmt.create)
    ..aOM<CreateEventTrigStmt>(160, _omitFieldNames ? '' : 'CreateEventTrigStmt', protoName: 'create_event_trig_stmt', subBuilder: CreateEventTrigStmt.create)
    ..aOM<AlterEventTrigStmt>(161, _omitFieldNames ? '' : 'AlterEventTrigStmt', protoName: 'alter_event_trig_stmt', subBuilder: AlterEventTrigStmt.create)
    ..aOM<CreatePLangStmt>(162, _omitFieldNames ? '' : 'CreatePLangStmt', protoName: 'create_plang_stmt', subBuilder: CreatePLangStmt.create)
    ..aOM<CreateRoleStmt>(163, _omitFieldNames ? '' : 'CreateRoleStmt', protoName: 'create_role_stmt', subBuilder: CreateRoleStmt.create)
    ..aOM<AlterRoleStmt>(164, _omitFieldNames ? '' : 'AlterRoleStmt', protoName: 'alter_role_stmt', subBuilder: AlterRoleStmt.create)
    ..aOM<AlterRoleSetStmt>(165, _omitFieldNames ? '' : 'AlterRoleSetStmt', protoName: 'alter_role_set_stmt', subBuilder: AlterRoleSetStmt.create)
    ..aOM<DropRoleStmt>(166, _omitFieldNames ? '' : 'DropRoleStmt', protoName: 'drop_role_stmt', subBuilder: DropRoleStmt.create)
    ..aOM<CreateSeqStmt>(167, _omitFieldNames ? '' : 'CreateSeqStmt', protoName: 'create_seq_stmt', subBuilder: CreateSeqStmt.create)
    ..aOM<AlterSeqStmt>(168, _omitFieldNames ? '' : 'AlterSeqStmt', protoName: 'alter_seq_stmt', subBuilder: AlterSeqStmt.create)
    ..aOM<DefineStmt>(169, _omitFieldNames ? '' : 'DefineStmt', protoName: 'define_stmt', subBuilder: DefineStmt.create)
    ..aOM<CreateDomainStmt>(170, _omitFieldNames ? '' : 'CreateDomainStmt', protoName: 'create_domain_stmt', subBuilder: CreateDomainStmt.create)
    ..aOM<CreateOpClassStmt>(171, _omitFieldNames ? '' : 'CreateOpClassStmt', protoName: 'create_op_class_stmt', subBuilder: CreateOpClassStmt.create)
    ..aOM<CreateOpClassItem>(172, _omitFieldNames ? '' : 'CreateOpClassItem', protoName: 'create_op_class_item', subBuilder: CreateOpClassItem.create)
    ..aOM<CreateOpFamilyStmt>(173, _omitFieldNames ? '' : 'CreateOpFamilyStmt', protoName: 'create_op_family_stmt', subBuilder: CreateOpFamilyStmt.create)
    ..aOM<AlterOpFamilyStmt>(174, _omitFieldNames ? '' : 'AlterOpFamilyStmt', protoName: 'alter_op_family_stmt', subBuilder: AlterOpFamilyStmt.create)
    ..aOM<DropStmt>(175, _omitFieldNames ? '' : 'DropStmt', protoName: 'drop_stmt', subBuilder: DropStmt.create)
    ..aOM<TruncateStmt>(176, _omitFieldNames ? '' : 'TruncateStmt', protoName: 'truncate_stmt', subBuilder: TruncateStmt.create)
    ..aOM<CommentStmt>(177, _omitFieldNames ? '' : 'CommentStmt', protoName: 'comment_stmt', subBuilder: CommentStmt.create)
    ..aOM<SecLabelStmt>(178, _omitFieldNames ? '' : 'SecLabelStmt', protoName: 'sec_label_stmt', subBuilder: SecLabelStmt.create)
    ..aOM<DeclareCursorStmt>(179, _omitFieldNames ? '' : 'DeclareCursorStmt', protoName: 'declare_cursor_stmt', subBuilder: DeclareCursorStmt.create)
    ..aOM<ClosePortalStmt>(180, _omitFieldNames ? '' : 'ClosePortalStmt', protoName: 'close_portal_stmt', subBuilder: ClosePortalStmt.create)
    ..aOM<FetchStmt>(181, _omitFieldNames ? '' : 'FetchStmt', protoName: 'fetch_stmt', subBuilder: FetchStmt.create)
    ..aOM<IndexStmt>(182, _omitFieldNames ? '' : 'IndexStmt', protoName: 'index_stmt', subBuilder: IndexStmt.create)
    ..aOM<CreateStatsStmt>(183, _omitFieldNames ? '' : 'CreateStatsStmt', protoName: 'create_stats_stmt', subBuilder: CreateStatsStmt.create)
    ..aOM<StatsElem>(184, _omitFieldNames ? '' : 'StatsElem', protoName: 'stats_elem', subBuilder: StatsElem.create)
    ..aOM<AlterStatsStmt>(185, _omitFieldNames ? '' : 'AlterStatsStmt', protoName: 'alter_stats_stmt', subBuilder: AlterStatsStmt.create)
    ..aOM<CreateFunctionStmt>(186, _omitFieldNames ? '' : 'CreateFunctionStmt', protoName: 'create_function_stmt', subBuilder: CreateFunctionStmt.create)
    ..aOM<FunctionParameter>(187, _omitFieldNames ? '' : 'FunctionParameter', protoName: 'function_parameter', subBuilder: FunctionParameter.create)
    ..aOM<AlterFunctionStmt>(188, _omitFieldNames ? '' : 'AlterFunctionStmt', protoName: 'alter_function_stmt', subBuilder: AlterFunctionStmt.create)
    ..aOM<DoStmt>(189, _omitFieldNames ? '' : 'DoStmt', protoName: 'do_stmt', subBuilder: DoStmt.create)
    ..aOM<InlineCodeBlock>(190, _omitFieldNames ? '' : 'InlineCodeBlock', protoName: 'inline_code_block', subBuilder: InlineCodeBlock.create)
    ..aOM<CallStmt>(191, _omitFieldNames ? '' : 'CallStmt', protoName: 'call_stmt', subBuilder: CallStmt.create)
    ..aOM<CallContext>(192, _omitFieldNames ? '' : 'CallContext', protoName: 'call_context', subBuilder: CallContext.create)
    ..aOM<RenameStmt>(193, _omitFieldNames ? '' : 'RenameStmt', protoName: 'rename_stmt', subBuilder: RenameStmt.create)
    ..aOM<AlterObjectDependsStmt>(194, _omitFieldNames ? '' : 'AlterObjectDependsStmt', protoName: 'alter_object_depends_stmt', subBuilder: AlterObjectDependsStmt.create)
    ..aOM<AlterObjectSchemaStmt>(195, _omitFieldNames ? '' : 'AlterObjectSchemaStmt', protoName: 'alter_object_schema_stmt', subBuilder: AlterObjectSchemaStmt.create)
    ..aOM<AlterOwnerStmt>(196, _omitFieldNames ? '' : 'AlterOwnerStmt', protoName: 'alter_owner_stmt', subBuilder: AlterOwnerStmt.create)
    ..aOM<AlterOperatorStmt>(197, _omitFieldNames ? '' : 'AlterOperatorStmt', protoName: 'alter_operator_stmt', subBuilder: AlterOperatorStmt.create)
    ..aOM<AlterTypeStmt>(198, _omitFieldNames ? '' : 'AlterTypeStmt', protoName: 'alter_type_stmt', subBuilder: AlterTypeStmt.create)
    ..aOM<RuleStmt>(199, _omitFieldNames ? '' : 'RuleStmt', protoName: 'rule_stmt', subBuilder: RuleStmt.create)
    ..aOM<NotifyStmt>(200, _omitFieldNames ? '' : 'NotifyStmt', protoName: 'notify_stmt', subBuilder: NotifyStmt.create)
    ..aOM<ListenStmt>(201, _omitFieldNames ? '' : 'ListenStmt', protoName: 'listen_stmt', subBuilder: ListenStmt.create)
    ..aOM<UnlistenStmt>(202, _omitFieldNames ? '' : 'UnlistenStmt', protoName: 'unlisten_stmt', subBuilder: UnlistenStmt.create)
    ..aOM<TransactionStmt>(203, _omitFieldNames ? '' : 'TransactionStmt', protoName: 'transaction_stmt', subBuilder: TransactionStmt.create)
    ..aOM<CompositeTypeStmt>(204, _omitFieldNames ? '' : 'CompositeTypeStmt', protoName: 'composite_type_stmt', subBuilder: CompositeTypeStmt.create)
    ..aOM<CreateEnumStmt>(205, _omitFieldNames ? '' : 'CreateEnumStmt', protoName: 'create_enum_stmt', subBuilder: CreateEnumStmt.create)
    ..aOM<CreateRangeStmt>(206, _omitFieldNames ? '' : 'CreateRangeStmt', protoName: 'create_range_stmt', subBuilder: CreateRangeStmt.create)
    ..aOM<AlterEnumStmt>(207, _omitFieldNames ? '' : 'AlterEnumStmt', protoName: 'alter_enum_stmt', subBuilder: AlterEnumStmt.create)
    ..aOM<ViewStmt>(208, _omitFieldNames ? '' : 'ViewStmt', protoName: 'view_stmt', subBuilder: ViewStmt.create)
    ..aOM<LoadStmt>(209, _omitFieldNames ? '' : 'LoadStmt', protoName: 'load_stmt', subBuilder: LoadStmt.create)
    ..aOM<CreatedbStmt>(210, _omitFieldNames ? '' : 'CreatedbStmt', protoName: 'createdb_stmt', subBuilder: CreatedbStmt.create)
    ..aOM<AlterDatabaseStmt>(211, _omitFieldNames ? '' : 'AlterDatabaseStmt', protoName: 'alter_database_stmt', subBuilder: AlterDatabaseStmt.create)
    ..aOM<AlterDatabaseRefreshCollStmt>(212, _omitFieldNames ? '' : 'AlterDatabaseRefreshCollStmt', protoName: 'alter_database_refresh_coll_stmt', subBuilder: AlterDatabaseRefreshCollStmt.create)
    ..aOM<AlterDatabaseSetStmt>(213, _omitFieldNames ? '' : 'AlterDatabaseSetStmt', protoName: 'alter_database_set_stmt', subBuilder: AlterDatabaseSetStmt.create)
    ..aOM<DropdbStmt>(214, _omitFieldNames ? '' : 'DropdbStmt', protoName: 'dropdb_stmt', subBuilder: DropdbStmt.create)
    ..aOM<AlterSystemStmt>(215, _omitFieldNames ? '' : 'AlterSystemStmt', protoName: 'alter_system_stmt', subBuilder: AlterSystemStmt.create)
    ..aOM<ClusterStmt>(216, _omitFieldNames ? '' : 'ClusterStmt', protoName: 'cluster_stmt', subBuilder: ClusterStmt.create)
    ..aOM<VacuumStmt>(217, _omitFieldNames ? '' : 'VacuumStmt', protoName: 'vacuum_stmt', subBuilder: VacuumStmt.create)
    ..aOM<VacuumRelation>(218, _omitFieldNames ? '' : 'VacuumRelation', protoName: 'vacuum_relation', subBuilder: VacuumRelation.create)
    ..aOM<ExplainStmt>(219, _omitFieldNames ? '' : 'ExplainStmt', protoName: 'explain_stmt', subBuilder: ExplainStmt.create)
    ..aOM<CreateTableAsStmt>(220, _omitFieldNames ? '' : 'CreateTableAsStmt', protoName: 'create_table_as_stmt', subBuilder: CreateTableAsStmt.create)
    ..aOM<RefreshMatViewStmt>(221, _omitFieldNames ? '' : 'RefreshMatViewStmt', protoName: 'refresh_mat_view_stmt', subBuilder: RefreshMatViewStmt.create)
    ..aOM<CheckPointStmt>(222, _omitFieldNames ? '' : 'CheckPointStmt', protoName: 'check_point_stmt', subBuilder: CheckPointStmt.create)
    ..aOM<DiscardStmt>(223, _omitFieldNames ? '' : 'DiscardStmt', protoName: 'discard_stmt', subBuilder: DiscardStmt.create)
    ..aOM<LockStmt>(224, _omitFieldNames ? '' : 'LockStmt', protoName: 'lock_stmt', subBuilder: LockStmt.create)
    ..aOM<ConstraintsSetStmt>(225, _omitFieldNames ? '' : 'ConstraintsSetStmt', protoName: 'constraints_set_stmt', subBuilder: ConstraintsSetStmt.create)
    ..aOM<ReindexStmt>(226, _omitFieldNames ? '' : 'ReindexStmt', protoName: 'reindex_stmt', subBuilder: ReindexStmt.create)
    ..aOM<CreateConversionStmt>(227, _omitFieldNames ? '' : 'CreateConversionStmt', protoName: 'create_conversion_stmt', subBuilder: CreateConversionStmt.create)
    ..aOM<CreateCastStmt>(228, _omitFieldNames ? '' : 'CreateCastStmt', protoName: 'create_cast_stmt', subBuilder: CreateCastStmt.create)
    ..aOM<CreateTransformStmt>(229, _omitFieldNames ? '' : 'CreateTransformStmt', protoName: 'create_transform_stmt', subBuilder: CreateTransformStmt.create)
    ..aOM<PrepareStmt>(230, _omitFieldNames ? '' : 'PrepareStmt', protoName: 'prepare_stmt', subBuilder: PrepareStmt.create)
    ..aOM<ExecuteStmt>(231, _omitFieldNames ? '' : 'ExecuteStmt', protoName: 'execute_stmt', subBuilder: ExecuteStmt.create)
    ..aOM<DeallocateStmt>(232, _omitFieldNames ? '' : 'DeallocateStmt', protoName: 'deallocate_stmt', subBuilder: DeallocateStmt.create)
    ..aOM<DropOwnedStmt>(233, _omitFieldNames ? '' : 'DropOwnedStmt', protoName: 'drop_owned_stmt', subBuilder: DropOwnedStmt.create)
    ..aOM<ReassignOwnedStmt>(234, _omitFieldNames ? '' : 'ReassignOwnedStmt', protoName: 'reassign_owned_stmt', subBuilder: ReassignOwnedStmt.create)
    ..aOM<AlterTSDictionaryStmt>(235, _omitFieldNames ? '' : 'AlterTSDictionaryStmt', protoName: 'alter_tsdictionary_stmt', subBuilder: AlterTSDictionaryStmt.create)
    ..aOM<AlterTSConfigurationStmt>(236, _omitFieldNames ? '' : 'AlterTSConfigurationStmt', protoName: 'alter_tsconfiguration_stmt', subBuilder: AlterTSConfigurationStmt.create)
    ..aOM<PublicationTable>(237, _omitFieldNames ? '' : 'PublicationTable', protoName: 'publication_table', subBuilder: PublicationTable.create)
    ..aOM<PublicationObjSpec>(238, _omitFieldNames ? '' : 'PublicationObjSpec', protoName: 'publication_obj_spec', subBuilder: PublicationObjSpec.create)
    ..aOM<CreatePublicationStmt>(239, _omitFieldNames ? '' : 'CreatePublicationStmt', protoName: 'create_publication_stmt', subBuilder: CreatePublicationStmt.create)
    ..aOM<AlterPublicationStmt>(240, _omitFieldNames ? '' : 'AlterPublicationStmt', protoName: 'alter_publication_stmt', subBuilder: AlterPublicationStmt.create)
    ..aOM<CreateSubscriptionStmt>(241, _omitFieldNames ? '' : 'CreateSubscriptionStmt', protoName: 'create_subscription_stmt', subBuilder: CreateSubscriptionStmt.create)
    ..aOM<AlterSubscriptionStmt>(242, _omitFieldNames ? '' : 'AlterSubscriptionStmt', protoName: 'alter_subscription_stmt', subBuilder: AlterSubscriptionStmt.create)
    ..aOM<DropSubscriptionStmt>(243, _omitFieldNames ? '' : 'DropSubscriptionStmt', protoName: 'drop_subscription_stmt', subBuilder: DropSubscriptionStmt.create)
    ..aOM<PgInteger>(244, _omitFieldNames ? '' : 'Integer', protoName: 'integer', subBuilder: PgInteger.create)
    ..aOM<PgFloat>(245, _omitFieldNames ? '' : 'Float', protoName: 'float', subBuilder: PgFloat.create)
    ..aOM<PgBoolean>(246, _omitFieldNames ? '' : 'Boolean', protoName: 'boolean', subBuilder: PgBoolean.create)
    ..aOM<PgString>(247, _omitFieldNames ? '' : 'String', protoName: 'string', subBuilder: PgString.create)
    ..aOM<PgBitString>(248, _omitFieldNames ? '' : 'BitString', protoName: 'bit_string', subBuilder: PgBitString.create)
    ..aOM<List_>(249, _omitFieldNames ? '' : 'List', protoName: 'list', subBuilder: List_.create)
    ..aOM<IntList>(250, _omitFieldNames ? '' : 'IntList', protoName: 'int_list', subBuilder: IntList.create)
    ..aOM<OidList>(251, _omitFieldNames ? '' : 'OidList', protoName: 'oid_list', subBuilder: OidList.create)
    ..aOM<A_Const>(252, _omitFieldNames ? '' : 'A_Const', protoName: 'a_const', subBuilder: A_Const.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Node clone() => Node()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Node copyWith(void Function(Node) updates) => super.copyWith((message) => updates(message as Node)) as Node;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Node create() => Node._();
  Node createEmptyInstance() => create();
  static $pb.PbList<Node> createRepeated() => $pb.PbList<Node>();
  @$core.pragma('dart2js:noInline')
  static Node getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Node>(create);
  static Node? _defaultInstance;

  Node_Node whichNode() => _Node_NodeByTag[$_whichOneof(0)]!;
  void clearNode() => clearField($_whichOneof(0));

  @$pb.TagNumber(1)
  Alias get alias => $_getN(0);
  @$pb.TagNumber(1)
  set alias(Alias v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasAlias() => $_has(0);
  @$pb.TagNumber(1)
  void clearAlias() => clearField(1);
  @$pb.TagNumber(1)
  Alias ensureAlias() => $_ensure(0);

  @$pb.TagNumber(2)
  RangeVar get rangeVar => $_getN(1);
  @$pb.TagNumber(2)
  set rangeVar(RangeVar v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRangeVar() => $_has(1);
  @$pb.TagNumber(2)
  void clearRangeVar() => clearField(2);
  @$pb.TagNumber(2)
  RangeVar ensureRangeVar() => $_ensure(1);

  @$pb.TagNumber(3)
  TableFunc get tableFunc => $_getN(2);
  @$pb.TagNumber(3)
  set tableFunc(TableFunc v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTableFunc() => $_has(2);
  @$pb.TagNumber(3)
  void clearTableFunc() => clearField(3);
  @$pb.TagNumber(3)
  TableFunc ensureTableFunc() => $_ensure(2);

  @$pb.TagNumber(4)
  IntoClause get intoClause => $_getN(3);
  @$pb.TagNumber(4)
  set intoClause(IntoClause v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasIntoClause() => $_has(3);
  @$pb.TagNumber(4)
  void clearIntoClause() => clearField(4);
  @$pb.TagNumber(4)
  IntoClause ensureIntoClause() => $_ensure(3);

  @$pb.TagNumber(5)
  Var get var_5 => $_getN(4);
  @$pb.TagNumber(5)
  set var_5(Var v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasVar_5() => $_has(4);
  @$pb.TagNumber(5)
  void clearVar_5() => clearField(5);
  @$pb.TagNumber(5)
  Var ensureVar_5() => $_ensure(4);

  @$pb.TagNumber(6)
  Param get param => $_getN(5);
  @$pb.TagNumber(6)
  set param(Param v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasParam() => $_has(5);
  @$pb.TagNumber(6)
  void clearParam() => clearField(6);
  @$pb.TagNumber(6)
  Param ensureParam() => $_ensure(5);

  @$pb.TagNumber(7)
  Aggref get aggref => $_getN(6);
  @$pb.TagNumber(7)
  set aggref(Aggref v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasAggref() => $_has(6);
  @$pb.TagNumber(7)
  void clearAggref() => clearField(7);
  @$pb.TagNumber(7)
  Aggref ensureAggref() => $_ensure(6);

  @$pb.TagNumber(8)
  GroupingFunc get groupingFunc => $_getN(7);
  @$pb.TagNumber(8)
  set groupingFunc(GroupingFunc v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasGroupingFunc() => $_has(7);
  @$pb.TagNumber(8)
  void clearGroupingFunc() => clearField(8);
  @$pb.TagNumber(8)
  GroupingFunc ensureGroupingFunc() => $_ensure(7);

  @$pb.TagNumber(9)
  WindowFunc get windowFunc => $_getN(8);
  @$pb.TagNumber(9)
  set windowFunc(WindowFunc v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasWindowFunc() => $_has(8);
  @$pb.TagNumber(9)
  void clearWindowFunc() => clearField(9);
  @$pb.TagNumber(9)
  WindowFunc ensureWindowFunc() => $_ensure(8);

  @$pb.TagNumber(10)
  SubscriptingRef get subscriptingRef => $_getN(9);
  @$pb.TagNumber(10)
  set subscriptingRef(SubscriptingRef v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasSubscriptingRef() => $_has(9);
  @$pb.TagNumber(10)
  void clearSubscriptingRef() => clearField(10);
  @$pb.TagNumber(10)
  SubscriptingRef ensureSubscriptingRef() => $_ensure(9);

  @$pb.TagNumber(11)
  FuncExpr get funcExpr => $_getN(10);
  @$pb.TagNumber(11)
  set funcExpr(FuncExpr v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasFuncExpr() => $_has(10);
  @$pb.TagNumber(11)
  void clearFuncExpr() => clearField(11);
  @$pb.TagNumber(11)
  FuncExpr ensureFuncExpr() => $_ensure(10);

  @$pb.TagNumber(12)
  NamedArgExpr get namedArgExpr => $_getN(11);
  @$pb.TagNumber(12)
  set namedArgExpr(NamedArgExpr v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasNamedArgExpr() => $_has(11);
  @$pb.TagNumber(12)
  void clearNamedArgExpr() => clearField(12);
  @$pb.TagNumber(12)
  NamedArgExpr ensureNamedArgExpr() => $_ensure(11);

  @$pb.TagNumber(13)
  OpExpr get opExpr => $_getN(12);
  @$pb.TagNumber(13)
  set opExpr(OpExpr v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasOpExpr() => $_has(12);
  @$pb.TagNumber(13)
  void clearOpExpr() => clearField(13);
  @$pb.TagNumber(13)
  OpExpr ensureOpExpr() => $_ensure(12);

  @$pb.TagNumber(14)
  DistinctExpr get distinctExpr => $_getN(13);
  @$pb.TagNumber(14)
  set distinctExpr(DistinctExpr v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasDistinctExpr() => $_has(13);
  @$pb.TagNumber(14)
  void clearDistinctExpr() => clearField(14);
  @$pb.TagNumber(14)
  DistinctExpr ensureDistinctExpr() => $_ensure(13);

  @$pb.TagNumber(15)
  NullIfExpr get nullIfExpr => $_getN(14);
  @$pb.TagNumber(15)
  set nullIfExpr(NullIfExpr v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasNullIfExpr() => $_has(14);
  @$pb.TagNumber(15)
  void clearNullIfExpr() => clearField(15);
  @$pb.TagNumber(15)
  NullIfExpr ensureNullIfExpr() => $_ensure(14);

  @$pb.TagNumber(16)
  ScalarArrayOpExpr get scalarArrayOpExpr => $_getN(15);
  @$pb.TagNumber(16)
  set scalarArrayOpExpr(ScalarArrayOpExpr v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasScalarArrayOpExpr() => $_has(15);
  @$pb.TagNumber(16)
  void clearScalarArrayOpExpr() => clearField(16);
  @$pb.TagNumber(16)
  ScalarArrayOpExpr ensureScalarArrayOpExpr() => $_ensure(15);

  @$pb.TagNumber(17)
  BoolExpr get boolExpr => $_getN(16);
  @$pb.TagNumber(17)
  set boolExpr(BoolExpr v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasBoolExpr() => $_has(16);
  @$pb.TagNumber(17)
  void clearBoolExpr() => clearField(17);
  @$pb.TagNumber(17)
  BoolExpr ensureBoolExpr() => $_ensure(16);

  @$pb.TagNumber(18)
  SubLink get subLink => $_getN(17);
  @$pb.TagNumber(18)
  set subLink(SubLink v) { setField(18, v); }
  @$pb.TagNumber(18)
  $core.bool hasSubLink() => $_has(17);
  @$pb.TagNumber(18)
  void clearSubLink() => clearField(18);
  @$pb.TagNumber(18)
  SubLink ensureSubLink() => $_ensure(17);

  @$pb.TagNumber(19)
  SubPlan get subPlan => $_getN(18);
  @$pb.TagNumber(19)
  set subPlan(SubPlan v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasSubPlan() => $_has(18);
  @$pb.TagNumber(19)
  void clearSubPlan() => clearField(19);
  @$pb.TagNumber(19)
  SubPlan ensureSubPlan() => $_ensure(18);

  @$pb.TagNumber(20)
  AlternativeSubPlan get alternativeSubPlan => $_getN(19);
  @$pb.TagNumber(20)
  set alternativeSubPlan(AlternativeSubPlan v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasAlternativeSubPlan() => $_has(19);
  @$pb.TagNumber(20)
  void clearAlternativeSubPlan() => clearField(20);
  @$pb.TagNumber(20)
  AlternativeSubPlan ensureAlternativeSubPlan() => $_ensure(19);

  @$pb.TagNumber(21)
  FieldSelect get fieldSelect => $_getN(20);
  @$pb.TagNumber(21)
  set fieldSelect(FieldSelect v) { setField(21, v); }
  @$pb.TagNumber(21)
  $core.bool hasFieldSelect() => $_has(20);
  @$pb.TagNumber(21)
  void clearFieldSelect() => clearField(21);
  @$pb.TagNumber(21)
  FieldSelect ensureFieldSelect() => $_ensure(20);

  @$pb.TagNumber(22)
  FieldStore get fieldStore => $_getN(21);
  @$pb.TagNumber(22)
  set fieldStore(FieldStore v) { setField(22, v); }
  @$pb.TagNumber(22)
  $core.bool hasFieldStore() => $_has(21);
  @$pb.TagNumber(22)
  void clearFieldStore() => clearField(22);
  @$pb.TagNumber(22)
  FieldStore ensureFieldStore() => $_ensure(21);

  @$pb.TagNumber(23)
  RelabelType get relabelType => $_getN(22);
  @$pb.TagNumber(23)
  set relabelType(RelabelType v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasRelabelType() => $_has(22);
  @$pb.TagNumber(23)
  void clearRelabelType() => clearField(23);
  @$pb.TagNumber(23)
  RelabelType ensureRelabelType() => $_ensure(22);

  @$pb.TagNumber(24)
  CoerceViaIO get coerceViaIo => $_getN(23);
  @$pb.TagNumber(24)
  set coerceViaIo(CoerceViaIO v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasCoerceViaIo() => $_has(23);
  @$pb.TagNumber(24)
  void clearCoerceViaIo() => clearField(24);
  @$pb.TagNumber(24)
  CoerceViaIO ensureCoerceViaIo() => $_ensure(23);

  @$pb.TagNumber(25)
  ArrayCoerceExpr get arrayCoerceExpr => $_getN(24);
  @$pb.TagNumber(25)
  set arrayCoerceExpr(ArrayCoerceExpr v) { setField(25, v); }
  @$pb.TagNumber(25)
  $core.bool hasArrayCoerceExpr() => $_has(24);
  @$pb.TagNumber(25)
  void clearArrayCoerceExpr() => clearField(25);
  @$pb.TagNumber(25)
  ArrayCoerceExpr ensureArrayCoerceExpr() => $_ensure(24);

  @$pb.TagNumber(26)
  ConvertRowtypeExpr get convertRowtypeExpr => $_getN(25);
  @$pb.TagNumber(26)
  set convertRowtypeExpr(ConvertRowtypeExpr v) { setField(26, v); }
  @$pb.TagNumber(26)
  $core.bool hasConvertRowtypeExpr() => $_has(25);
  @$pb.TagNumber(26)
  void clearConvertRowtypeExpr() => clearField(26);
  @$pb.TagNumber(26)
  ConvertRowtypeExpr ensureConvertRowtypeExpr() => $_ensure(25);

  @$pb.TagNumber(27)
  CollateExpr get collateExpr => $_getN(26);
  @$pb.TagNumber(27)
  set collateExpr(CollateExpr v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasCollateExpr() => $_has(26);
  @$pb.TagNumber(27)
  void clearCollateExpr() => clearField(27);
  @$pb.TagNumber(27)
  CollateExpr ensureCollateExpr() => $_ensure(26);

  @$pb.TagNumber(28)
  CaseExpr get caseExpr => $_getN(27);
  @$pb.TagNumber(28)
  set caseExpr(CaseExpr v) { setField(28, v); }
  @$pb.TagNumber(28)
  $core.bool hasCaseExpr() => $_has(27);
  @$pb.TagNumber(28)
  void clearCaseExpr() => clearField(28);
  @$pb.TagNumber(28)
  CaseExpr ensureCaseExpr() => $_ensure(27);

  @$pb.TagNumber(29)
  CaseWhen get caseWhen => $_getN(28);
  @$pb.TagNumber(29)
  set caseWhen(CaseWhen v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasCaseWhen() => $_has(28);
  @$pb.TagNumber(29)
  void clearCaseWhen() => clearField(29);
  @$pb.TagNumber(29)
  CaseWhen ensureCaseWhen() => $_ensure(28);

  @$pb.TagNumber(30)
  CaseTestExpr get caseTestExpr => $_getN(29);
  @$pb.TagNumber(30)
  set caseTestExpr(CaseTestExpr v) { setField(30, v); }
  @$pb.TagNumber(30)
  $core.bool hasCaseTestExpr() => $_has(29);
  @$pb.TagNumber(30)
  void clearCaseTestExpr() => clearField(30);
  @$pb.TagNumber(30)
  CaseTestExpr ensureCaseTestExpr() => $_ensure(29);

  @$pb.TagNumber(31)
  ArrayExpr get arrayExpr => $_getN(30);
  @$pb.TagNumber(31)
  set arrayExpr(ArrayExpr v) { setField(31, v); }
  @$pb.TagNumber(31)
  $core.bool hasArrayExpr() => $_has(30);
  @$pb.TagNumber(31)
  void clearArrayExpr() => clearField(31);
  @$pb.TagNumber(31)
  ArrayExpr ensureArrayExpr() => $_ensure(30);

  @$pb.TagNumber(32)
  RowExpr get rowExpr => $_getN(31);
  @$pb.TagNumber(32)
  set rowExpr(RowExpr v) { setField(32, v); }
  @$pb.TagNumber(32)
  $core.bool hasRowExpr() => $_has(31);
  @$pb.TagNumber(32)
  void clearRowExpr() => clearField(32);
  @$pb.TagNumber(32)
  RowExpr ensureRowExpr() => $_ensure(31);

  @$pb.TagNumber(33)
  RowCompareExpr get rowCompareExpr => $_getN(32);
  @$pb.TagNumber(33)
  set rowCompareExpr(RowCompareExpr v) { setField(33, v); }
  @$pb.TagNumber(33)
  $core.bool hasRowCompareExpr() => $_has(32);
  @$pb.TagNumber(33)
  void clearRowCompareExpr() => clearField(33);
  @$pb.TagNumber(33)
  RowCompareExpr ensureRowCompareExpr() => $_ensure(32);

  @$pb.TagNumber(34)
  CoalesceExpr get coalesceExpr => $_getN(33);
  @$pb.TagNumber(34)
  set coalesceExpr(CoalesceExpr v) { setField(34, v); }
  @$pb.TagNumber(34)
  $core.bool hasCoalesceExpr() => $_has(33);
  @$pb.TagNumber(34)
  void clearCoalesceExpr() => clearField(34);
  @$pb.TagNumber(34)
  CoalesceExpr ensureCoalesceExpr() => $_ensure(33);

  @$pb.TagNumber(35)
  MinMaxExpr get minMaxExpr => $_getN(34);
  @$pb.TagNumber(35)
  set minMaxExpr(MinMaxExpr v) { setField(35, v); }
  @$pb.TagNumber(35)
  $core.bool hasMinMaxExpr() => $_has(34);
  @$pb.TagNumber(35)
  void clearMinMaxExpr() => clearField(35);
  @$pb.TagNumber(35)
  MinMaxExpr ensureMinMaxExpr() => $_ensure(34);

  @$pb.TagNumber(36)
  SQLValueFunction get sqlvalueFunction => $_getN(35);
  @$pb.TagNumber(36)
  set sqlvalueFunction(SQLValueFunction v) { setField(36, v); }
  @$pb.TagNumber(36)
  $core.bool hasSqlvalueFunction() => $_has(35);
  @$pb.TagNumber(36)
  void clearSqlvalueFunction() => clearField(36);
  @$pb.TagNumber(36)
  SQLValueFunction ensureSqlvalueFunction() => $_ensure(35);

  @$pb.TagNumber(37)
  XmlExpr get xmlExpr => $_getN(36);
  @$pb.TagNumber(37)
  set xmlExpr(XmlExpr v) { setField(37, v); }
  @$pb.TagNumber(37)
  $core.bool hasXmlExpr() => $_has(36);
  @$pb.TagNumber(37)
  void clearXmlExpr() => clearField(37);
  @$pb.TagNumber(37)
  XmlExpr ensureXmlExpr() => $_ensure(36);

  @$pb.TagNumber(38)
  JsonFormat get jsonFormat => $_getN(37);
  @$pb.TagNumber(38)
  set jsonFormat(JsonFormat v) { setField(38, v); }
  @$pb.TagNumber(38)
  $core.bool hasJsonFormat() => $_has(37);
  @$pb.TagNumber(38)
  void clearJsonFormat() => clearField(38);
  @$pb.TagNumber(38)
  JsonFormat ensureJsonFormat() => $_ensure(37);

  @$pb.TagNumber(39)
  JsonReturning get jsonReturning => $_getN(38);
  @$pb.TagNumber(39)
  set jsonReturning(JsonReturning v) { setField(39, v); }
  @$pb.TagNumber(39)
  $core.bool hasJsonReturning() => $_has(38);
  @$pb.TagNumber(39)
  void clearJsonReturning() => clearField(39);
  @$pb.TagNumber(39)
  JsonReturning ensureJsonReturning() => $_ensure(38);

  @$pb.TagNumber(40)
  JsonValueExpr get jsonValueExpr => $_getN(39);
  @$pb.TagNumber(40)
  set jsonValueExpr(JsonValueExpr v) { setField(40, v); }
  @$pb.TagNumber(40)
  $core.bool hasJsonValueExpr() => $_has(39);
  @$pb.TagNumber(40)
  void clearJsonValueExpr() => clearField(40);
  @$pb.TagNumber(40)
  JsonValueExpr ensureJsonValueExpr() => $_ensure(39);

  @$pb.TagNumber(41)
  JsonConstructorExpr get jsonConstructorExpr => $_getN(40);
  @$pb.TagNumber(41)
  set jsonConstructorExpr(JsonConstructorExpr v) { setField(41, v); }
  @$pb.TagNumber(41)
  $core.bool hasJsonConstructorExpr() => $_has(40);
  @$pb.TagNumber(41)
  void clearJsonConstructorExpr() => clearField(41);
  @$pb.TagNumber(41)
  JsonConstructorExpr ensureJsonConstructorExpr() => $_ensure(40);

  @$pb.TagNumber(42)
  JsonIsPredicate get jsonIsPredicate => $_getN(41);
  @$pb.TagNumber(42)
  set jsonIsPredicate(JsonIsPredicate v) { setField(42, v); }
  @$pb.TagNumber(42)
  $core.bool hasJsonIsPredicate() => $_has(41);
  @$pb.TagNumber(42)
  void clearJsonIsPredicate() => clearField(42);
  @$pb.TagNumber(42)
  JsonIsPredicate ensureJsonIsPredicate() => $_ensure(41);

  @$pb.TagNumber(43)
  NullTest get nullTest => $_getN(42);
  @$pb.TagNumber(43)
  set nullTest(NullTest v) { setField(43, v); }
  @$pb.TagNumber(43)
  $core.bool hasNullTest() => $_has(42);
  @$pb.TagNumber(43)
  void clearNullTest() => clearField(43);
  @$pb.TagNumber(43)
  NullTest ensureNullTest() => $_ensure(42);

  @$pb.TagNumber(44)
  BooleanTest get booleanTest => $_getN(43);
  @$pb.TagNumber(44)
  set booleanTest(BooleanTest v) { setField(44, v); }
  @$pb.TagNumber(44)
  $core.bool hasBooleanTest() => $_has(43);
  @$pb.TagNumber(44)
  void clearBooleanTest() => clearField(44);
  @$pb.TagNumber(44)
  BooleanTest ensureBooleanTest() => $_ensure(43);

  @$pb.TagNumber(45)
  CoerceToDomain get coerceToDomain => $_getN(44);
  @$pb.TagNumber(45)
  set coerceToDomain(CoerceToDomain v) { setField(45, v); }
  @$pb.TagNumber(45)
  $core.bool hasCoerceToDomain() => $_has(44);
  @$pb.TagNumber(45)
  void clearCoerceToDomain() => clearField(45);
  @$pb.TagNumber(45)
  CoerceToDomain ensureCoerceToDomain() => $_ensure(44);

  @$pb.TagNumber(46)
  CoerceToDomainValue get coerceToDomainValue => $_getN(45);
  @$pb.TagNumber(46)
  set coerceToDomainValue(CoerceToDomainValue v) { setField(46, v); }
  @$pb.TagNumber(46)
  $core.bool hasCoerceToDomainValue() => $_has(45);
  @$pb.TagNumber(46)
  void clearCoerceToDomainValue() => clearField(46);
  @$pb.TagNumber(46)
  CoerceToDomainValue ensureCoerceToDomainValue() => $_ensure(45);

  @$pb.TagNumber(47)
  SetToDefault get setToDefault => $_getN(46);
  @$pb.TagNumber(47)
  set setToDefault(SetToDefault v) { setField(47, v); }
  @$pb.TagNumber(47)
  $core.bool hasSetToDefault() => $_has(46);
  @$pb.TagNumber(47)
  void clearSetToDefault() => clearField(47);
  @$pb.TagNumber(47)
  SetToDefault ensureSetToDefault() => $_ensure(46);

  @$pb.TagNumber(48)
  CurrentOfExpr get currentOfExpr => $_getN(47);
  @$pb.TagNumber(48)
  set currentOfExpr(CurrentOfExpr v) { setField(48, v); }
  @$pb.TagNumber(48)
  $core.bool hasCurrentOfExpr() => $_has(47);
  @$pb.TagNumber(48)
  void clearCurrentOfExpr() => clearField(48);
  @$pb.TagNumber(48)
  CurrentOfExpr ensureCurrentOfExpr() => $_ensure(47);

  @$pb.TagNumber(49)
  NextValueExpr get nextValueExpr => $_getN(48);
  @$pb.TagNumber(49)
  set nextValueExpr(NextValueExpr v) { setField(49, v); }
  @$pb.TagNumber(49)
  $core.bool hasNextValueExpr() => $_has(48);
  @$pb.TagNumber(49)
  void clearNextValueExpr() => clearField(49);
  @$pb.TagNumber(49)
  NextValueExpr ensureNextValueExpr() => $_ensure(48);

  @$pb.TagNumber(50)
  InferenceElem get inferenceElem => $_getN(49);
  @$pb.TagNumber(50)
  set inferenceElem(InferenceElem v) { setField(50, v); }
  @$pb.TagNumber(50)
  $core.bool hasInferenceElem() => $_has(49);
  @$pb.TagNumber(50)
  void clearInferenceElem() => clearField(50);
  @$pb.TagNumber(50)
  InferenceElem ensureInferenceElem() => $_ensure(49);

  @$pb.TagNumber(51)
  TargetEntry get targetEntry => $_getN(50);
  @$pb.TagNumber(51)
  set targetEntry(TargetEntry v) { setField(51, v); }
  @$pb.TagNumber(51)
  $core.bool hasTargetEntry() => $_has(50);
  @$pb.TagNumber(51)
  void clearTargetEntry() => clearField(51);
  @$pb.TagNumber(51)
  TargetEntry ensureTargetEntry() => $_ensure(50);

  @$pb.TagNumber(52)
  RangeTblRef get rangeTblRef => $_getN(51);
  @$pb.TagNumber(52)
  set rangeTblRef(RangeTblRef v) { setField(52, v); }
  @$pb.TagNumber(52)
  $core.bool hasRangeTblRef() => $_has(51);
  @$pb.TagNumber(52)
  void clearRangeTblRef() => clearField(52);
  @$pb.TagNumber(52)
  RangeTblRef ensureRangeTblRef() => $_ensure(51);

  @$pb.TagNumber(53)
  JoinExpr get joinExpr => $_getN(52);
  @$pb.TagNumber(53)
  set joinExpr(JoinExpr v) { setField(53, v); }
  @$pb.TagNumber(53)
  $core.bool hasJoinExpr() => $_has(52);
  @$pb.TagNumber(53)
  void clearJoinExpr() => clearField(53);
  @$pb.TagNumber(53)
  JoinExpr ensureJoinExpr() => $_ensure(52);

  @$pb.TagNumber(54)
  FromExpr get fromExpr => $_getN(53);
  @$pb.TagNumber(54)
  set fromExpr(FromExpr v) { setField(54, v); }
  @$pb.TagNumber(54)
  $core.bool hasFromExpr() => $_has(53);
  @$pb.TagNumber(54)
  void clearFromExpr() => clearField(54);
  @$pb.TagNumber(54)
  FromExpr ensureFromExpr() => $_ensure(53);

  @$pb.TagNumber(55)
  OnConflictExpr get onConflictExpr => $_getN(54);
  @$pb.TagNumber(55)
  set onConflictExpr(OnConflictExpr v) { setField(55, v); }
  @$pb.TagNumber(55)
  $core.bool hasOnConflictExpr() => $_has(54);
  @$pb.TagNumber(55)
  void clearOnConflictExpr() => clearField(55);
  @$pb.TagNumber(55)
  OnConflictExpr ensureOnConflictExpr() => $_ensure(54);

  @$pb.TagNumber(56)
  Query get query => $_getN(55);
  @$pb.TagNumber(56)
  set query(Query v) { setField(56, v); }
  @$pb.TagNumber(56)
  $core.bool hasQuery() => $_has(55);
  @$pb.TagNumber(56)
  void clearQuery() => clearField(56);
  @$pb.TagNumber(56)
  Query ensureQuery() => $_ensure(55);

  @$pb.TagNumber(57)
  TypeName get typeName => $_getN(56);
  @$pb.TagNumber(57)
  set typeName(TypeName v) { setField(57, v); }
  @$pb.TagNumber(57)
  $core.bool hasTypeName() => $_has(56);
  @$pb.TagNumber(57)
  void clearTypeName() => clearField(57);
  @$pb.TagNumber(57)
  TypeName ensureTypeName() => $_ensure(56);

  @$pb.TagNumber(58)
  ColumnRef get columnRef => $_getN(57);
  @$pb.TagNumber(58)
  set columnRef(ColumnRef v) { setField(58, v); }
  @$pb.TagNumber(58)
  $core.bool hasColumnRef() => $_has(57);
  @$pb.TagNumber(58)
  void clearColumnRef() => clearField(58);
  @$pb.TagNumber(58)
  ColumnRef ensureColumnRef() => $_ensure(57);

  @$pb.TagNumber(59)
  ParamRef get paramRef => $_getN(58);
  @$pb.TagNumber(59)
  set paramRef(ParamRef v) { setField(59, v); }
  @$pb.TagNumber(59)
  $core.bool hasParamRef() => $_has(58);
  @$pb.TagNumber(59)
  void clearParamRef() => clearField(59);
  @$pb.TagNumber(59)
  ParamRef ensureParamRef() => $_ensure(58);

  @$pb.TagNumber(60)
  A_Expr get aExpr => $_getN(59);
  @$pb.TagNumber(60)
  set aExpr(A_Expr v) { setField(60, v); }
  @$pb.TagNumber(60)
  $core.bool hasAExpr() => $_has(59);
  @$pb.TagNumber(60)
  void clearAExpr() => clearField(60);
  @$pb.TagNumber(60)
  A_Expr ensureAExpr() => $_ensure(59);

  @$pb.TagNumber(61)
  TypeCast get typeCast => $_getN(60);
  @$pb.TagNumber(61)
  set typeCast(TypeCast v) { setField(61, v); }
  @$pb.TagNumber(61)
  $core.bool hasTypeCast() => $_has(60);
  @$pb.TagNumber(61)
  void clearTypeCast() => clearField(61);
  @$pb.TagNumber(61)
  TypeCast ensureTypeCast() => $_ensure(60);

  @$pb.TagNumber(62)
  CollateClause get collateClause => $_getN(61);
  @$pb.TagNumber(62)
  set collateClause(CollateClause v) { setField(62, v); }
  @$pb.TagNumber(62)
  $core.bool hasCollateClause() => $_has(61);
  @$pb.TagNumber(62)
  void clearCollateClause() => clearField(62);
  @$pb.TagNumber(62)
  CollateClause ensureCollateClause() => $_ensure(61);

  @$pb.TagNumber(63)
  RoleSpec get roleSpec => $_getN(62);
  @$pb.TagNumber(63)
  set roleSpec(RoleSpec v) { setField(63, v); }
  @$pb.TagNumber(63)
  $core.bool hasRoleSpec() => $_has(62);
  @$pb.TagNumber(63)
  void clearRoleSpec() => clearField(63);
  @$pb.TagNumber(63)
  RoleSpec ensureRoleSpec() => $_ensure(62);

  @$pb.TagNumber(64)
  FuncCall get funcCall => $_getN(63);
  @$pb.TagNumber(64)
  set funcCall(FuncCall v) { setField(64, v); }
  @$pb.TagNumber(64)
  $core.bool hasFuncCall() => $_has(63);
  @$pb.TagNumber(64)
  void clearFuncCall() => clearField(64);
  @$pb.TagNumber(64)
  FuncCall ensureFuncCall() => $_ensure(63);

  @$pb.TagNumber(65)
  A_Star get aStar => $_getN(64);
  @$pb.TagNumber(65)
  set aStar(A_Star v) { setField(65, v); }
  @$pb.TagNumber(65)
  $core.bool hasAStar() => $_has(64);
  @$pb.TagNumber(65)
  void clearAStar() => clearField(65);
  @$pb.TagNumber(65)
  A_Star ensureAStar() => $_ensure(64);

  @$pb.TagNumber(66)
  A_Indices get aIndices => $_getN(65);
  @$pb.TagNumber(66)
  set aIndices(A_Indices v) { setField(66, v); }
  @$pb.TagNumber(66)
  $core.bool hasAIndices() => $_has(65);
  @$pb.TagNumber(66)
  void clearAIndices() => clearField(66);
  @$pb.TagNumber(66)
  A_Indices ensureAIndices() => $_ensure(65);

  @$pb.TagNumber(67)
  A_Indirection get aIndirection => $_getN(66);
  @$pb.TagNumber(67)
  set aIndirection(A_Indirection v) { setField(67, v); }
  @$pb.TagNumber(67)
  $core.bool hasAIndirection() => $_has(66);
  @$pb.TagNumber(67)
  void clearAIndirection() => clearField(67);
  @$pb.TagNumber(67)
  A_Indirection ensureAIndirection() => $_ensure(66);

  @$pb.TagNumber(68)
  A_ArrayExpr get aArrayExpr => $_getN(67);
  @$pb.TagNumber(68)
  set aArrayExpr(A_ArrayExpr v) { setField(68, v); }
  @$pb.TagNumber(68)
  $core.bool hasAArrayExpr() => $_has(67);
  @$pb.TagNumber(68)
  void clearAArrayExpr() => clearField(68);
  @$pb.TagNumber(68)
  A_ArrayExpr ensureAArrayExpr() => $_ensure(67);

  @$pb.TagNumber(69)
  ResTarget get resTarget => $_getN(68);
  @$pb.TagNumber(69)
  set resTarget(ResTarget v) { setField(69, v); }
  @$pb.TagNumber(69)
  $core.bool hasResTarget() => $_has(68);
  @$pb.TagNumber(69)
  void clearResTarget() => clearField(69);
  @$pb.TagNumber(69)
  ResTarget ensureResTarget() => $_ensure(68);

  @$pb.TagNumber(70)
  MultiAssignRef get multiAssignRef => $_getN(69);
  @$pb.TagNumber(70)
  set multiAssignRef(MultiAssignRef v) { setField(70, v); }
  @$pb.TagNumber(70)
  $core.bool hasMultiAssignRef() => $_has(69);
  @$pb.TagNumber(70)
  void clearMultiAssignRef() => clearField(70);
  @$pb.TagNumber(70)
  MultiAssignRef ensureMultiAssignRef() => $_ensure(69);

  @$pb.TagNumber(71)
  SortBy get sortBy => $_getN(70);
  @$pb.TagNumber(71)
  set sortBy(SortBy v) { setField(71, v); }
  @$pb.TagNumber(71)
  $core.bool hasSortBy() => $_has(70);
  @$pb.TagNumber(71)
  void clearSortBy() => clearField(71);
  @$pb.TagNumber(71)
  SortBy ensureSortBy() => $_ensure(70);

  @$pb.TagNumber(72)
  WindowDef get windowDef => $_getN(71);
  @$pb.TagNumber(72)
  set windowDef(WindowDef v) { setField(72, v); }
  @$pb.TagNumber(72)
  $core.bool hasWindowDef() => $_has(71);
  @$pb.TagNumber(72)
  void clearWindowDef() => clearField(72);
  @$pb.TagNumber(72)
  WindowDef ensureWindowDef() => $_ensure(71);

  @$pb.TagNumber(73)
  RangeSubselect get rangeSubselect => $_getN(72);
  @$pb.TagNumber(73)
  set rangeSubselect(RangeSubselect v) { setField(73, v); }
  @$pb.TagNumber(73)
  $core.bool hasRangeSubselect() => $_has(72);
  @$pb.TagNumber(73)
  void clearRangeSubselect() => clearField(73);
  @$pb.TagNumber(73)
  RangeSubselect ensureRangeSubselect() => $_ensure(72);

  @$pb.TagNumber(74)
  RangeFunction get rangeFunction => $_getN(73);
  @$pb.TagNumber(74)
  set rangeFunction(RangeFunction v) { setField(74, v); }
  @$pb.TagNumber(74)
  $core.bool hasRangeFunction() => $_has(73);
  @$pb.TagNumber(74)
  void clearRangeFunction() => clearField(74);
  @$pb.TagNumber(74)
  RangeFunction ensureRangeFunction() => $_ensure(73);

  @$pb.TagNumber(75)
  RangeTableFunc get rangeTableFunc => $_getN(74);
  @$pb.TagNumber(75)
  set rangeTableFunc(RangeTableFunc v) { setField(75, v); }
  @$pb.TagNumber(75)
  $core.bool hasRangeTableFunc() => $_has(74);
  @$pb.TagNumber(75)
  void clearRangeTableFunc() => clearField(75);
  @$pb.TagNumber(75)
  RangeTableFunc ensureRangeTableFunc() => $_ensure(74);

  @$pb.TagNumber(76)
  RangeTableFuncCol get rangeTableFuncCol => $_getN(75);
  @$pb.TagNumber(76)
  set rangeTableFuncCol(RangeTableFuncCol v) { setField(76, v); }
  @$pb.TagNumber(76)
  $core.bool hasRangeTableFuncCol() => $_has(75);
  @$pb.TagNumber(76)
  void clearRangeTableFuncCol() => clearField(76);
  @$pb.TagNumber(76)
  RangeTableFuncCol ensureRangeTableFuncCol() => $_ensure(75);

  @$pb.TagNumber(77)
  RangeTableSample get rangeTableSample => $_getN(76);
  @$pb.TagNumber(77)
  set rangeTableSample(RangeTableSample v) { setField(77, v); }
  @$pb.TagNumber(77)
  $core.bool hasRangeTableSample() => $_has(76);
  @$pb.TagNumber(77)
  void clearRangeTableSample() => clearField(77);
  @$pb.TagNumber(77)
  RangeTableSample ensureRangeTableSample() => $_ensure(76);

  @$pb.TagNumber(78)
  ColumnDef get columnDef => $_getN(77);
  @$pb.TagNumber(78)
  set columnDef(ColumnDef v) { setField(78, v); }
  @$pb.TagNumber(78)
  $core.bool hasColumnDef() => $_has(77);
  @$pb.TagNumber(78)
  void clearColumnDef() => clearField(78);
  @$pb.TagNumber(78)
  ColumnDef ensureColumnDef() => $_ensure(77);

  @$pb.TagNumber(79)
  TableLikeClause get tableLikeClause => $_getN(78);
  @$pb.TagNumber(79)
  set tableLikeClause(TableLikeClause v) { setField(79, v); }
  @$pb.TagNumber(79)
  $core.bool hasTableLikeClause() => $_has(78);
  @$pb.TagNumber(79)
  void clearTableLikeClause() => clearField(79);
  @$pb.TagNumber(79)
  TableLikeClause ensureTableLikeClause() => $_ensure(78);

  @$pb.TagNumber(80)
  IndexElem get indexElem => $_getN(79);
  @$pb.TagNumber(80)
  set indexElem(IndexElem v) { setField(80, v); }
  @$pb.TagNumber(80)
  $core.bool hasIndexElem() => $_has(79);
  @$pb.TagNumber(80)
  void clearIndexElem() => clearField(80);
  @$pb.TagNumber(80)
  IndexElem ensureIndexElem() => $_ensure(79);

  @$pb.TagNumber(81)
  DefElem get defElem => $_getN(80);
  @$pb.TagNumber(81)
  set defElem(DefElem v) { setField(81, v); }
  @$pb.TagNumber(81)
  $core.bool hasDefElem() => $_has(80);
  @$pb.TagNumber(81)
  void clearDefElem() => clearField(81);
  @$pb.TagNumber(81)
  DefElem ensureDefElem() => $_ensure(80);

  @$pb.TagNumber(82)
  LockingClause get lockingClause => $_getN(81);
  @$pb.TagNumber(82)
  set lockingClause(LockingClause v) { setField(82, v); }
  @$pb.TagNumber(82)
  $core.bool hasLockingClause() => $_has(81);
  @$pb.TagNumber(82)
  void clearLockingClause() => clearField(82);
  @$pb.TagNumber(82)
  LockingClause ensureLockingClause() => $_ensure(81);

  @$pb.TagNumber(83)
  XmlSerialize get xmlSerialize => $_getN(82);
  @$pb.TagNumber(83)
  set xmlSerialize(XmlSerialize v) { setField(83, v); }
  @$pb.TagNumber(83)
  $core.bool hasXmlSerialize() => $_has(82);
  @$pb.TagNumber(83)
  void clearXmlSerialize() => clearField(83);
  @$pb.TagNumber(83)
  XmlSerialize ensureXmlSerialize() => $_ensure(82);

  @$pb.TagNumber(84)
  PartitionElem get partitionElem => $_getN(83);
  @$pb.TagNumber(84)
  set partitionElem(PartitionElem v) { setField(84, v); }
  @$pb.TagNumber(84)
  $core.bool hasPartitionElem() => $_has(83);
  @$pb.TagNumber(84)
  void clearPartitionElem() => clearField(84);
  @$pb.TagNumber(84)
  PartitionElem ensurePartitionElem() => $_ensure(83);

  @$pb.TagNumber(85)
  PartitionSpec get partitionSpec => $_getN(84);
  @$pb.TagNumber(85)
  set partitionSpec(PartitionSpec v) { setField(85, v); }
  @$pb.TagNumber(85)
  $core.bool hasPartitionSpec() => $_has(84);
  @$pb.TagNumber(85)
  void clearPartitionSpec() => clearField(85);
  @$pb.TagNumber(85)
  PartitionSpec ensurePartitionSpec() => $_ensure(84);

  @$pb.TagNumber(86)
  PartitionBoundSpec get partitionBoundSpec => $_getN(85);
  @$pb.TagNumber(86)
  set partitionBoundSpec(PartitionBoundSpec v) { setField(86, v); }
  @$pb.TagNumber(86)
  $core.bool hasPartitionBoundSpec() => $_has(85);
  @$pb.TagNumber(86)
  void clearPartitionBoundSpec() => clearField(86);
  @$pb.TagNumber(86)
  PartitionBoundSpec ensurePartitionBoundSpec() => $_ensure(85);

  @$pb.TagNumber(87)
  PartitionRangeDatum get partitionRangeDatum => $_getN(86);
  @$pb.TagNumber(87)
  set partitionRangeDatum(PartitionRangeDatum v) { setField(87, v); }
  @$pb.TagNumber(87)
  $core.bool hasPartitionRangeDatum() => $_has(86);
  @$pb.TagNumber(87)
  void clearPartitionRangeDatum() => clearField(87);
  @$pb.TagNumber(87)
  PartitionRangeDatum ensurePartitionRangeDatum() => $_ensure(86);

  @$pb.TagNumber(88)
  PartitionCmd get partitionCmd => $_getN(87);
  @$pb.TagNumber(88)
  set partitionCmd(PartitionCmd v) { setField(88, v); }
  @$pb.TagNumber(88)
  $core.bool hasPartitionCmd() => $_has(87);
  @$pb.TagNumber(88)
  void clearPartitionCmd() => clearField(88);
  @$pb.TagNumber(88)
  PartitionCmd ensurePartitionCmd() => $_ensure(87);

  @$pb.TagNumber(89)
  RangeTblEntry get rangeTblEntry => $_getN(88);
  @$pb.TagNumber(89)
  set rangeTblEntry(RangeTblEntry v) { setField(89, v); }
  @$pb.TagNumber(89)
  $core.bool hasRangeTblEntry() => $_has(88);
  @$pb.TagNumber(89)
  void clearRangeTblEntry() => clearField(89);
  @$pb.TagNumber(89)
  RangeTblEntry ensureRangeTblEntry() => $_ensure(88);

  @$pb.TagNumber(90)
  RTEPermissionInfo get rtepermissionInfo => $_getN(89);
  @$pb.TagNumber(90)
  set rtepermissionInfo(RTEPermissionInfo v) { setField(90, v); }
  @$pb.TagNumber(90)
  $core.bool hasRtepermissionInfo() => $_has(89);
  @$pb.TagNumber(90)
  void clearRtepermissionInfo() => clearField(90);
  @$pb.TagNumber(90)
  RTEPermissionInfo ensureRtepermissionInfo() => $_ensure(89);

  @$pb.TagNumber(91)
  RangeTblFunction get rangeTblFunction => $_getN(90);
  @$pb.TagNumber(91)
  set rangeTblFunction(RangeTblFunction v) { setField(91, v); }
  @$pb.TagNumber(91)
  $core.bool hasRangeTblFunction() => $_has(90);
  @$pb.TagNumber(91)
  void clearRangeTblFunction() => clearField(91);
  @$pb.TagNumber(91)
  RangeTblFunction ensureRangeTblFunction() => $_ensure(90);

  @$pb.TagNumber(92)
  TableSampleClause get tableSampleClause => $_getN(91);
  @$pb.TagNumber(92)
  set tableSampleClause(TableSampleClause v) { setField(92, v); }
  @$pb.TagNumber(92)
  $core.bool hasTableSampleClause() => $_has(91);
  @$pb.TagNumber(92)
  void clearTableSampleClause() => clearField(92);
  @$pb.TagNumber(92)
  TableSampleClause ensureTableSampleClause() => $_ensure(91);

  @$pb.TagNumber(93)
  WithCheckOption get withCheckOption => $_getN(92);
  @$pb.TagNumber(93)
  set withCheckOption(WithCheckOption v) { setField(93, v); }
  @$pb.TagNumber(93)
  $core.bool hasWithCheckOption() => $_has(92);
  @$pb.TagNumber(93)
  void clearWithCheckOption() => clearField(93);
  @$pb.TagNumber(93)
  WithCheckOption ensureWithCheckOption() => $_ensure(92);

  @$pb.TagNumber(94)
  SortGroupClause get sortGroupClause => $_getN(93);
  @$pb.TagNumber(94)
  set sortGroupClause(SortGroupClause v) { setField(94, v); }
  @$pb.TagNumber(94)
  $core.bool hasSortGroupClause() => $_has(93);
  @$pb.TagNumber(94)
  void clearSortGroupClause() => clearField(94);
  @$pb.TagNumber(94)
  SortGroupClause ensureSortGroupClause() => $_ensure(93);

  @$pb.TagNumber(95)
  GroupingSet get groupingSet => $_getN(94);
  @$pb.TagNumber(95)
  set groupingSet(GroupingSet v) { setField(95, v); }
  @$pb.TagNumber(95)
  $core.bool hasGroupingSet() => $_has(94);
  @$pb.TagNumber(95)
  void clearGroupingSet() => clearField(95);
  @$pb.TagNumber(95)
  GroupingSet ensureGroupingSet() => $_ensure(94);

  @$pb.TagNumber(96)
  WindowClause get windowClause => $_getN(95);
  @$pb.TagNumber(96)
  set windowClause(WindowClause v) { setField(96, v); }
  @$pb.TagNumber(96)
  $core.bool hasWindowClause() => $_has(95);
  @$pb.TagNumber(96)
  void clearWindowClause() => clearField(96);
  @$pb.TagNumber(96)
  WindowClause ensureWindowClause() => $_ensure(95);

  @$pb.TagNumber(97)
  RowMarkClause get rowMarkClause => $_getN(96);
  @$pb.TagNumber(97)
  set rowMarkClause(RowMarkClause v) { setField(97, v); }
  @$pb.TagNumber(97)
  $core.bool hasRowMarkClause() => $_has(96);
  @$pb.TagNumber(97)
  void clearRowMarkClause() => clearField(97);
  @$pb.TagNumber(97)
  RowMarkClause ensureRowMarkClause() => $_ensure(96);

  @$pb.TagNumber(98)
  WithClause get withClause => $_getN(97);
  @$pb.TagNumber(98)
  set withClause(WithClause v) { setField(98, v); }
  @$pb.TagNumber(98)
  $core.bool hasWithClause() => $_has(97);
  @$pb.TagNumber(98)
  void clearWithClause() => clearField(98);
  @$pb.TagNumber(98)
  WithClause ensureWithClause() => $_ensure(97);

  @$pb.TagNumber(99)
  InferClause get inferClause => $_getN(98);
  @$pb.TagNumber(99)
  set inferClause(InferClause v) { setField(99, v); }
  @$pb.TagNumber(99)
  $core.bool hasInferClause() => $_has(98);
  @$pb.TagNumber(99)
  void clearInferClause() => clearField(99);
  @$pb.TagNumber(99)
  InferClause ensureInferClause() => $_ensure(98);

  @$pb.TagNumber(100)
  OnConflictClause get onConflictClause => $_getN(99);
  @$pb.TagNumber(100)
  set onConflictClause(OnConflictClause v) { setField(100, v); }
  @$pb.TagNumber(100)
  $core.bool hasOnConflictClause() => $_has(99);
  @$pb.TagNumber(100)
  void clearOnConflictClause() => clearField(100);
  @$pb.TagNumber(100)
  OnConflictClause ensureOnConflictClause() => $_ensure(99);

  @$pb.TagNumber(101)
  CTESearchClause get ctesearchClause => $_getN(100);
  @$pb.TagNumber(101)
  set ctesearchClause(CTESearchClause v) { setField(101, v); }
  @$pb.TagNumber(101)
  $core.bool hasCtesearchClause() => $_has(100);
  @$pb.TagNumber(101)
  void clearCtesearchClause() => clearField(101);
  @$pb.TagNumber(101)
  CTESearchClause ensureCtesearchClause() => $_ensure(100);

  @$pb.TagNumber(102)
  CTECycleClause get ctecycleClause => $_getN(101);
  @$pb.TagNumber(102)
  set ctecycleClause(CTECycleClause v) { setField(102, v); }
  @$pb.TagNumber(102)
  $core.bool hasCtecycleClause() => $_has(101);
  @$pb.TagNumber(102)
  void clearCtecycleClause() => clearField(102);
  @$pb.TagNumber(102)
  CTECycleClause ensureCtecycleClause() => $_ensure(101);

  @$pb.TagNumber(103)
  CommonTableExpr get commonTableExpr => $_getN(102);
  @$pb.TagNumber(103)
  set commonTableExpr(CommonTableExpr v) { setField(103, v); }
  @$pb.TagNumber(103)
  $core.bool hasCommonTableExpr() => $_has(102);
  @$pb.TagNumber(103)
  void clearCommonTableExpr() => clearField(103);
  @$pb.TagNumber(103)
  CommonTableExpr ensureCommonTableExpr() => $_ensure(102);

  @$pb.TagNumber(104)
  MergeWhenClause get mergeWhenClause => $_getN(103);
  @$pb.TagNumber(104)
  set mergeWhenClause(MergeWhenClause v) { setField(104, v); }
  @$pb.TagNumber(104)
  $core.bool hasMergeWhenClause() => $_has(103);
  @$pb.TagNumber(104)
  void clearMergeWhenClause() => clearField(104);
  @$pb.TagNumber(104)
  MergeWhenClause ensureMergeWhenClause() => $_ensure(103);

  @$pb.TagNumber(105)
  MergeAction get mergeAction => $_getN(104);
  @$pb.TagNumber(105)
  set mergeAction(MergeAction v) { setField(105, v); }
  @$pb.TagNumber(105)
  $core.bool hasMergeAction() => $_has(104);
  @$pb.TagNumber(105)
  void clearMergeAction() => clearField(105);
  @$pb.TagNumber(105)
  MergeAction ensureMergeAction() => $_ensure(104);

  @$pb.TagNumber(106)
  TriggerTransition get triggerTransition => $_getN(105);
  @$pb.TagNumber(106)
  set triggerTransition(TriggerTransition v) { setField(106, v); }
  @$pb.TagNumber(106)
  $core.bool hasTriggerTransition() => $_has(105);
  @$pb.TagNumber(106)
  void clearTriggerTransition() => clearField(106);
  @$pb.TagNumber(106)
  TriggerTransition ensureTriggerTransition() => $_ensure(105);

  @$pb.TagNumber(107)
  JsonOutput get jsonOutput => $_getN(106);
  @$pb.TagNumber(107)
  set jsonOutput(JsonOutput v) { setField(107, v); }
  @$pb.TagNumber(107)
  $core.bool hasJsonOutput() => $_has(106);
  @$pb.TagNumber(107)
  void clearJsonOutput() => clearField(107);
  @$pb.TagNumber(107)
  JsonOutput ensureJsonOutput() => $_ensure(106);

  @$pb.TagNumber(108)
  JsonKeyValue get jsonKeyValue => $_getN(107);
  @$pb.TagNumber(108)
  set jsonKeyValue(JsonKeyValue v) { setField(108, v); }
  @$pb.TagNumber(108)
  $core.bool hasJsonKeyValue() => $_has(107);
  @$pb.TagNumber(108)
  void clearJsonKeyValue() => clearField(108);
  @$pb.TagNumber(108)
  JsonKeyValue ensureJsonKeyValue() => $_ensure(107);

  @$pb.TagNumber(109)
  JsonObjectConstructor get jsonObjectConstructor => $_getN(108);
  @$pb.TagNumber(109)
  set jsonObjectConstructor(JsonObjectConstructor v) { setField(109, v); }
  @$pb.TagNumber(109)
  $core.bool hasJsonObjectConstructor() => $_has(108);
  @$pb.TagNumber(109)
  void clearJsonObjectConstructor() => clearField(109);
  @$pb.TagNumber(109)
  JsonObjectConstructor ensureJsonObjectConstructor() => $_ensure(108);

  @$pb.TagNumber(110)
  JsonArrayConstructor get jsonArrayConstructor => $_getN(109);
  @$pb.TagNumber(110)
  set jsonArrayConstructor(JsonArrayConstructor v) { setField(110, v); }
  @$pb.TagNumber(110)
  $core.bool hasJsonArrayConstructor() => $_has(109);
  @$pb.TagNumber(110)
  void clearJsonArrayConstructor() => clearField(110);
  @$pb.TagNumber(110)
  JsonArrayConstructor ensureJsonArrayConstructor() => $_ensure(109);

  @$pb.TagNumber(111)
  JsonArrayQueryConstructor get jsonArrayQueryConstructor => $_getN(110);
  @$pb.TagNumber(111)
  set jsonArrayQueryConstructor(JsonArrayQueryConstructor v) { setField(111, v); }
  @$pb.TagNumber(111)
  $core.bool hasJsonArrayQueryConstructor() => $_has(110);
  @$pb.TagNumber(111)
  void clearJsonArrayQueryConstructor() => clearField(111);
  @$pb.TagNumber(111)
  JsonArrayQueryConstructor ensureJsonArrayQueryConstructor() => $_ensure(110);

  @$pb.TagNumber(112)
  JsonAggConstructor get jsonAggConstructor => $_getN(111);
  @$pb.TagNumber(112)
  set jsonAggConstructor(JsonAggConstructor v) { setField(112, v); }
  @$pb.TagNumber(112)
  $core.bool hasJsonAggConstructor() => $_has(111);
  @$pb.TagNumber(112)
  void clearJsonAggConstructor() => clearField(112);
  @$pb.TagNumber(112)
  JsonAggConstructor ensureJsonAggConstructor() => $_ensure(111);

  @$pb.TagNumber(113)
  JsonObjectAgg get jsonObjectAgg => $_getN(112);
  @$pb.TagNumber(113)
  set jsonObjectAgg(JsonObjectAgg v) { setField(113, v); }
  @$pb.TagNumber(113)
  $core.bool hasJsonObjectAgg() => $_has(112);
  @$pb.TagNumber(113)
  void clearJsonObjectAgg() => clearField(113);
  @$pb.TagNumber(113)
  JsonObjectAgg ensureJsonObjectAgg() => $_ensure(112);

  @$pb.TagNumber(114)
  JsonArrayAgg get jsonArrayAgg => $_getN(113);
  @$pb.TagNumber(114)
  set jsonArrayAgg(JsonArrayAgg v) { setField(114, v); }
  @$pb.TagNumber(114)
  $core.bool hasJsonArrayAgg() => $_has(113);
  @$pb.TagNumber(114)
  void clearJsonArrayAgg() => clearField(114);
  @$pb.TagNumber(114)
  JsonArrayAgg ensureJsonArrayAgg() => $_ensure(113);

  @$pb.TagNumber(115)
  RawStmt get rawStmt => $_getN(114);
  @$pb.TagNumber(115)
  set rawStmt(RawStmt v) { setField(115, v); }
  @$pb.TagNumber(115)
  $core.bool hasRawStmt() => $_has(114);
  @$pb.TagNumber(115)
  void clearRawStmt() => clearField(115);
  @$pb.TagNumber(115)
  RawStmt ensureRawStmt() => $_ensure(114);

  @$pb.TagNumber(116)
  InsertStmt get insertStmt => $_getN(115);
  @$pb.TagNumber(116)
  set insertStmt(InsertStmt v) { setField(116, v); }
  @$pb.TagNumber(116)
  $core.bool hasInsertStmt() => $_has(115);
  @$pb.TagNumber(116)
  void clearInsertStmt() => clearField(116);
  @$pb.TagNumber(116)
  InsertStmt ensureInsertStmt() => $_ensure(115);

  @$pb.TagNumber(117)
  DeleteStmt get deleteStmt => $_getN(116);
  @$pb.TagNumber(117)
  set deleteStmt(DeleteStmt v) { setField(117, v); }
  @$pb.TagNumber(117)
  $core.bool hasDeleteStmt() => $_has(116);
  @$pb.TagNumber(117)
  void clearDeleteStmt() => clearField(117);
  @$pb.TagNumber(117)
  DeleteStmt ensureDeleteStmt() => $_ensure(116);

  @$pb.TagNumber(118)
  UpdateStmt get updateStmt => $_getN(117);
  @$pb.TagNumber(118)
  set updateStmt(UpdateStmt v) { setField(118, v); }
  @$pb.TagNumber(118)
  $core.bool hasUpdateStmt() => $_has(117);
  @$pb.TagNumber(118)
  void clearUpdateStmt() => clearField(118);
  @$pb.TagNumber(118)
  UpdateStmt ensureUpdateStmt() => $_ensure(117);

  @$pb.TagNumber(119)
  MergeStmt get mergeStmt => $_getN(118);
  @$pb.TagNumber(119)
  set mergeStmt(MergeStmt v) { setField(119, v); }
  @$pb.TagNumber(119)
  $core.bool hasMergeStmt() => $_has(118);
  @$pb.TagNumber(119)
  void clearMergeStmt() => clearField(119);
  @$pb.TagNumber(119)
  MergeStmt ensureMergeStmt() => $_ensure(118);

  @$pb.TagNumber(120)
  SelectStmt get selectStmt => $_getN(119);
  @$pb.TagNumber(120)
  set selectStmt(SelectStmt v) { setField(120, v); }
  @$pb.TagNumber(120)
  $core.bool hasSelectStmt() => $_has(119);
  @$pb.TagNumber(120)
  void clearSelectStmt() => clearField(120);
  @$pb.TagNumber(120)
  SelectStmt ensureSelectStmt() => $_ensure(119);

  @$pb.TagNumber(121)
  SetOperationStmt get setOperationStmt => $_getN(120);
  @$pb.TagNumber(121)
  set setOperationStmt(SetOperationStmt v) { setField(121, v); }
  @$pb.TagNumber(121)
  $core.bool hasSetOperationStmt() => $_has(120);
  @$pb.TagNumber(121)
  void clearSetOperationStmt() => clearField(121);
  @$pb.TagNumber(121)
  SetOperationStmt ensureSetOperationStmt() => $_ensure(120);

  @$pb.TagNumber(122)
  ReturnStmt get returnStmt => $_getN(121);
  @$pb.TagNumber(122)
  set returnStmt(ReturnStmt v) { setField(122, v); }
  @$pb.TagNumber(122)
  $core.bool hasReturnStmt() => $_has(121);
  @$pb.TagNumber(122)
  void clearReturnStmt() => clearField(122);
  @$pb.TagNumber(122)
  ReturnStmt ensureReturnStmt() => $_ensure(121);

  @$pb.TagNumber(123)
  PLAssignStmt get plassignStmt => $_getN(122);
  @$pb.TagNumber(123)
  set plassignStmt(PLAssignStmt v) { setField(123, v); }
  @$pb.TagNumber(123)
  $core.bool hasPlassignStmt() => $_has(122);
  @$pb.TagNumber(123)
  void clearPlassignStmt() => clearField(123);
  @$pb.TagNumber(123)
  PLAssignStmt ensurePlassignStmt() => $_ensure(122);

  @$pb.TagNumber(124)
  CreateSchemaStmt get createSchemaStmt => $_getN(123);
  @$pb.TagNumber(124)
  set createSchemaStmt(CreateSchemaStmt v) { setField(124, v); }
  @$pb.TagNumber(124)
  $core.bool hasCreateSchemaStmt() => $_has(123);
  @$pb.TagNumber(124)
  void clearCreateSchemaStmt() => clearField(124);
  @$pb.TagNumber(124)
  CreateSchemaStmt ensureCreateSchemaStmt() => $_ensure(123);

  @$pb.TagNumber(125)
  AlterTableStmt get alterTableStmt => $_getN(124);
  @$pb.TagNumber(125)
  set alterTableStmt(AlterTableStmt v) { setField(125, v); }
  @$pb.TagNumber(125)
  $core.bool hasAlterTableStmt() => $_has(124);
  @$pb.TagNumber(125)
  void clearAlterTableStmt() => clearField(125);
  @$pb.TagNumber(125)
  AlterTableStmt ensureAlterTableStmt() => $_ensure(124);

  @$pb.TagNumber(126)
  ReplicaIdentityStmt get replicaIdentityStmt => $_getN(125);
  @$pb.TagNumber(126)
  set replicaIdentityStmt(ReplicaIdentityStmt v) { setField(126, v); }
  @$pb.TagNumber(126)
  $core.bool hasReplicaIdentityStmt() => $_has(125);
  @$pb.TagNumber(126)
  void clearReplicaIdentityStmt() => clearField(126);
  @$pb.TagNumber(126)
  ReplicaIdentityStmt ensureReplicaIdentityStmt() => $_ensure(125);

  @$pb.TagNumber(127)
  AlterTableCmd get alterTableCmd => $_getN(126);
  @$pb.TagNumber(127)
  set alterTableCmd(AlterTableCmd v) { setField(127, v); }
  @$pb.TagNumber(127)
  $core.bool hasAlterTableCmd() => $_has(126);
  @$pb.TagNumber(127)
  void clearAlterTableCmd() => clearField(127);
  @$pb.TagNumber(127)
  AlterTableCmd ensureAlterTableCmd() => $_ensure(126);

  @$pb.TagNumber(128)
  AlterCollationStmt get alterCollationStmt => $_getN(127);
  @$pb.TagNumber(128)
  set alterCollationStmt(AlterCollationStmt v) { setField(128, v); }
  @$pb.TagNumber(128)
  $core.bool hasAlterCollationStmt() => $_has(127);
  @$pb.TagNumber(128)
  void clearAlterCollationStmt() => clearField(128);
  @$pb.TagNumber(128)
  AlterCollationStmt ensureAlterCollationStmt() => $_ensure(127);

  @$pb.TagNumber(129)
  AlterDomainStmt get alterDomainStmt => $_getN(128);
  @$pb.TagNumber(129)
  set alterDomainStmt(AlterDomainStmt v) { setField(129, v); }
  @$pb.TagNumber(129)
  $core.bool hasAlterDomainStmt() => $_has(128);
  @$pb.TagNumber(129)
  void clearAlterDomainStmt() => clearField(129);
  @$pb.TagNumber(129)
  AlterDomainStmt ensureAlterDomainStmt() => $_ensure(128);

  @$pb.TagNumber(130)
  GrantStmt get grantStmt => $_getN(129);
  @$pb.TagNumber(130)
  set grantStmt(GrantStmt v) { setField(130, v); }
  @$pb.TagNumber(130)
  $core.bool hasGrantStmt() => $_has(129);
  @$pb.TagNumber(130)
  void clearGrantStmt() => clearField(130);
  @$pb.TagNumber(130)
  GrantStmt ensureGrantStmt() => $_ensure(129);

  @$pb.TagNumber(131)
  ObjectWithArgs get objectWithArgs => $_getN(130);
  @$pb.TagNumber(131)
  set objectWithArgs(ObjectWithArgs v) { setField(131, v); }
  @$pb.TagNumber(131)
  $core.bool hasObjectWithArgs() => $_has(130);
  @$pb.TagNumber(131)
  void clearObjectWithArgs() => clearField(131);
  @$pb.TagNumber(131)
  ObjectWithArgs ensureObjectWithArgs() => $_ensure(130);

  @$pb.TagNumber(132)
  AccessPriv get accessPriv => $_getN(131);
  @$pb.TagNumber(132)
  set accessPriv(AccessPriv v) { setField(132, v); }
  @$pb.TagNumber(132)
  $core.bool hasAccessPriv() => $_has(131);
  @$pb.TagNumber(132)
  void clearAccessPriv() => clearField(132);
  @$pb.TagNumber(132)
  AccessPriv ensureAccessPriv() => $_ensure(131);

  @$pb.TagNumber(133)
  GrantRoleStmt get grantRoleStmt => $_getN(132);
  @$pb.TagNumber(133)
  set grantRoleStmt(GrantRoleStmt v) { setField(133, v); }
  @$pb.TagNumber(133)
  $core.bool hasGrantRoleStmt() => $_has(132);
  @$pb.TagNumber(133)
  void clearGrantRoleStmt() => clearField(133);
  @$pb.TagNumber(133)
  GrantRoleStmt ensureGrantRoleStmt() => $_ensure(132);

  @$pb.TagNumber(134)
  AlterDefaultPrivilegesStmt get alterDefaultPrivilegesStmt => $_getN(133);
  @$pb.TagNumber(134)
  set alterDefaultPrivilegesStmt(AlterDefaultPrivilegesStmt v) { setField(134, v); }
  @$pb.TagNumber(134)
  $core.bool hasAlterDefaultPrivilegesStmt() => $_has(133);
  @$pb.TagNumber(134)
  void clearAlterDefaultPrivilegesStmt() => clearField(134);
  @$pb.TagNumber(134)
  AlterDefaultPrivilegesStmt ensureAlterDefaultPrivilegesStmt() => $_ensure(133);

  @$pb.TagNumber(135)
  CopyStmt get copyStmt => $_getN(134);
  @$pb.TagNumber(135)
  set copyStmt(CopyStmt v) { setField(135, v); }
  @$pb.TagNumber(135)
  $core.bool hasCopyStmt() => $_has(134);
  @$pb.TagNumber(135)
  void clearCopyStmt() => clearField(135);
  @$pb.TagNumber(135)
  CopyStmt ensureCopyStmt() => $_ensure(134);

  @$pb.TagNumber(136)
  VariableSetStmt get variableSetStmt => $_getN(135);
  @$pb.TagNumber(136)
  set variableSetStmt(VariableSetStmt v) { setField(136, v); }
  @$pb.TagNumber(136)
  $core.bool hasVariableSetStmt() => $_has(135);
  @$pb.TagNumber(136)
  void clearVariableSetStmt() => clearField(136);
  @$pb.TagNumber(136)
  VariableSetStmt ensureVariableSetStmt() => $_ensure(135);

  @$pb.TagNumber(137)
  VariableShowStmt get variableShowStmt => $_getN(136);
  @$pb.TagNumber(137)
  set variableShowStmt(VariableShowStmt v) { setField(137, v); }
  @$pb.TagNumber(137)
  $core.bool hasVariableShowStmt() => $_has(136);
  @$pb.TagNumber(137)
  void clearVariableShowStmt() => clearField(137);
  @$pb.TagNumber(137)
  VariableShowStmt ensureVariableShowStmt() => $_ensure(136);

  @$pb.TagNumber(138)
  CreateStmt get createStmt => $_getN(137);
  @$pb.TagNumber(138)
  set createStmt(CreateStmt v) { setField(138, v); }
  @$pb.TagNumber(138)
  $core.bool hasCreateStmt() => $_has(137);
  @$pb.TagNumber(138)
  void clearCreateStmt() => clearField(138);
  @$pb.TagNumber(138)
  CreateStmt ensureCreateStmt() => $_ensure(137);

  @$pb.TagNumber(139)
  Constraint get constraint => $_getN(138);
  @$pb.TagNumber(139)
  set constraint(Constraint v) { setField(139, v); }
  @$pb.TagNumber(139)
  $core.bool hasConstraint() => $_has(138);
  @$pb.TagNumber(139)
  void clearConstraint() => clearField(139);
  @$pb.TagNumber(139)
  Constraint ensureConstraint() => $_ensure(138);

  @$pb.TagNumber(140)
  CreateTableSpaceStmt get createTableSpaceStmt => $_getN(139);
  @$pb.TagNumber(140)
  set createTableSpaceStmt(CreateTableSpaceStmt v) { setField(140, v); }
  @$pb.TagNumber(140)
  $core.bool hasCreateTableSpaceStmt() => $_has(139);
  @$pb.TagNumber(140)
  void clearCreateTableSpaceStmt() => clearField(140);
  @$pb.TagNumber(140)
  CreateTableSpaceStmt ensureCreateTableSpaceStmt() => $_ensure(139);

  @$pb.TagNumber(141)
  DropTableSpaceStmt get dropTableSpaceStmt => $_getN(140);
  @$pb.TagNumber(141)
  set dropTableSpaceStmt(DropTableSpaceStmt v) { setField(141, v); }
  @$pb.TagNumber(141)
  $core.bool hasDropTableSpaceStmt() => $_has(140);
  @$pb.TagNumber(141)
  void clearDropTableSpaceStmt() => clearField(141);
  @$pb.TagNumber(141)
  DropTableSpaceStmt ensureDropTableSpaceStmt() => $_ensure(140);

  @$pb.TagNumber(142)
  AlterTableSpaceOptionsStmt get alterTableSpaceOptionsStmt => $_getN(141);
  @$pb.TagNumber(142)
  set alterTableSpaceOptionsStmt(AlterTableSpaceOptionsStmt v) { setField(142, v); }
  @$pb.TagNumber(142)
  $core.bool hasAlterTableSpaceOptionsStmt() => $_has(141);
  @$pb.TagNumber(142)
  void clearAlterTableSpaceOptionsStmt() => clearField(142);
  @$pb.TagNumber(142)
  AlterTableSpaceOptionsStmt ensureAlterTableSpaceOptionsStmt() => $_ensure(141);

  @$pb.TagNumber(143)
  AlterTableMoveAllStmt get alterTableMoveAllStmt => $_getN(142);
  @$pb.TagNumber(143)
  set alterTableMoveAllStmt(AlterTableMoveAllStmt v) { setField(143, v); }
  @$pb.TagNumber(143)
  $core.bool hasAlterTableMoveAllStmt() => $_has(142);
  @$pb.TagNumber(143)
  void clearAlterTableMoveAllStmt() => clearField(143);
  @$pb.TagNumber(143)
  AlterTableMoveAllStmt ensureAlterTableMoveAllStmt() => $_ensure(142);

  @$pb.TagNumber(144)
  CreateExtensionStmt get createExtensionStmt => $_getN(143);
  @$pb.TagNumber(144)
  set createExtensionStmt(CreateExtensionStmt v) { setField(144, v); }
  @$pb.TagNumber(144)
  $core.bool hasCreateExtensionStmt() => $_has(143);
  @$pb.TagNumber(144)
  void clearCreateExtensionStmt() => clearField(144);
  @$pb.TagNumber(144)
  CreateExtensionStmt ensureCreateExtensionStmt() => $_ensure(143);

  @$pb.TagNumber(145)
  AlterExtensionStmt get alterExtensionStmt => $_getN(144);
  @$pb.TagNumber(145)
  set alterExtensionStmt(AlterExtensionStmt v) { setField(145, v); }
  @$pb.TagNumber(145)
  $core.bool hasAlterExtensionStmt() => $_has(144);
  @$pb.TagNumber(145)
  void clearAlterExtensionStmt() => clearField(145);
  @$pb.TagNumber(145)
  AlterExtensionStmt ensureAlterExtensionStmt() => $_ensure(144);

  @$pb.TagNumber(146)
  AlterExtensionContentsStmt get alterExtensionContentsStmt => $_getN(145);
  @$pb.TagNumber(146)
  set alterExtensionContentsStmt(AlterExtensionContentsStmt v) { setField(146, v); }
  @$pb.TagNumber(146)
  $core.bool hasAlterExtensionContentsStmt() => $_has(145);
  @$pb.TagNumber(146)
  void clearAlterExtensionContentsStmt() => clearField(146);
  @$pb.TagNumber(146)
  AlterExtensionContentsStmt ensureAlterExtensionContentsStmt() => $_ensure(145);

  @$pb.TagNumber(147)
  CreateFdwStmt get createFdwStmt => $_getN(146);
  @$pb.TagNumber(147)
  set createFdwStmt(CreateFdwStmt v) { setField(147, v); }
  @$pb.TagNumber(147)
  $core.bool hasCreateFdwStmt() => $_has(146);
  @$pb.TagNumber(147)
  void clearCreateFdwStmt() => clearField(147);
  @$pb.TagNumber(147)
  CreateFdwStmt ensureCreateFdwStmt() => $_ensure(146);

  @$pb.TagNumber(148)
  AlterFdwStmt get alterFdwStmt => $_getN(147);
  @$pb.TagNumber(148)
  set alterFdwStmt(AlterFdwStmt v) { setField(148, v); }
  @$pb.TagNumber(148)
  $core.bool hasAlterFdwStmt() => $_has(147);
  @$pb.TagNumber(148)
  void clearAlterFdwStmt() => clearField(148);
  @$pb.TagNumber(148)
  AlterFdwStmt ensureAlterFdwStmt() => $_ensure(147);

  @$pb.TagNumber(149)
  CreateForeignServerStmt get createForeignServerStmt => $_getN(148);
  @$pb.TagNumber(149)
  set createForeignServerStmt(CreateForeignServerStmt v) { setField(149, v); }
  @$pb.TagNumber(149)
  $core.bool hasCreateForeignServerStmt() => $_has(148);
  @$pb.TagNumber(149)
  void clearCreateForeignServerStmt() => clearField(149);
  @$pb.TagNumber(149)
  CreateForeignServerStmt ensureCreateForeignServerStmt() => $_ensure(148);

  @$pb.TagNumber(150)
  AlterForeignServerStmt get alterForeignServerStmt => $_getN(149);
  @$pb.TagNumber(150)
  set alterForeignServerStmt(AlterForeignServerStmt v) { setField(150, v); }
  @$pb.TagNumber(150)
  $core.bool hasAlterForeignServerStmt() => $_has(149);
  @$pb.TagNumber(150)
  void clearAlterForeignServerStmt() => clearField(150);
  @$pb.TagNumber(150)
  AlterForeignServerStmt ensureAlterForeignServerStmt() => $_ensure(149);

  @$pb.TagNumber(151)
  CreateForeignTableStmt get createForeignTableStmt => $_getN(150);
  @$pb.TagNumber(151)
  set createForeignTableStmt(CreateForeignTableStmt v) { setField(151, v); }
  @$pb.TagNumber(151)
  $core.bool hasCreateForeignTableStmt() => $_has(150);
  @$pb.TagNumber(151)
  void clearCreateForeignTableStmt() => clearField(151);
  @$pb.TagNumber(151)
  CreateForeignTableStmt ensureCreateForeignTableStmt() => $_ensure(150);

  @$pb.TagNumber(152)
  CreateUserMappingStmt get createUserMappingStmt => $_getN(151);
  @$pb.TagNumber(152)
  set createUserMappingStmt(CreateUserMappingStmt v) { setField(152, v); }
  @$pb.TagNumber(152)
  $core.bool hasCreateUserMappingStmt() => $_has(151);
  @$pb.TagNumber(152)
  void clearCreateUserMappingStmt() => clearField(152);
  @$pb.TagNumber(152)
  CreateUserMappingStmt ensureCreateUserMappingStmt() => $_ensure(151);

  @$pb.TagNumber(153)
  AlterUserMappingStmt get alterUserMappingStmt => $_getN(152);
  @$pb.TagNumber(153)
  set alterUserMappingStmt(AlterUserMappingStmt v) { setField(153, v); }
  @$pb.TagNumber(153)
  $core.bool hasAlterUserMappingStmt() => $_has(152);
  @$pb.TagNumber(153)
  void clearAlterUserMappingStmt() => clearField(153);
  @$pb.TagNumber(153)
  AlterUserMappingStmt ensureAlterUserMappingStmt() => $_ensure(152);

  @$pb.TagNumber(154)
  DropUserMappingStmt get dropUserMappingStmt => $_getN(153);
  @$pb.TagNumber(154)
  set dropUserMappingStmt(DropUserMappingStmt v) { setField(154, v); }
  @$pb.TagNumber(154)
  $core.bool hasDropUserMappingStmt() => $_has(153);
  @$pb.TagNumber(154)
  void clearDropUserMappingStmt() => clearField(154);
  @$pb.TagNumber(154)
  DropUserMappingStmt ensureDropUserMappingStmt() => $_ensure(153);

  @$pb.TagNumber(155)
  ImportForeignSchemaStmt get importForeignSchemaStmt => $_getN(154);
  @$pb.TagNumber(155)
  set importForeignSchemaStmt(ImportForeignSchemaStmt v) { setField(155, v); }
  @$pb.TagNumber(155)
  $core.bool hasImportForeignSchemaStmt() => $_has(154);
  @$pb.TagNumber(155)
  void clearImportForeignSchemaStmt() => clearField(155);
  @$pb.TagNumber(155)
  ImportForeignSchemaStmt ensureImportForeignSchemaStmt() => $_ensure(154);

  @$pb.TagNumber(156)
  CreatePolicyStmt get createPolicyStmt => $_getN(155);
  @$pb.TagNumber(156)
  set createPolicyStmt(CreatePolicyStmt v) { setField(156, v); }
  @$pb.TagNumber(156)
  $core.bool hasCreatePolicyStmt() => $_has(155);
  @$pb.TagNumber(156)
  void clearCreatePolicyStmt() => clearField(156);
  @$pb.TagNumber(156)
  CreatePolicyStmt ensureCreatePolicyStmt() => $_ensure(155);

  @$pb.TagNumber(157)
  AlterPolicyStmt get alterPolicyStmt => $_getN(156);
  @$pb.TagNumber(157)
  set alterPolicyStmt(AlterPolicyStmt v) { setField(157, v); }
  @$pb.TagNumber(157)
  $core.bool hasAlterPolicyStmt() => $_has(156);
  @$pb.TagNumber(157)
  void clearAlterPolicyStmt() => clearField(157);
  @$pb.TagNumber(157)
  AlterPolicyStmt ensureAlterPolicyStmt() => $_ensure(156);

  @$pb.TagNumber(158)
  CreateAmStmt get createAmStmt => $_getN(157);
  @$pb.TagNumber(158)
  set createAmStmt(CreateAmStmt v) { setField(158, v); }
  @$pb.TagNumber(158)
  $core.bool hasCreateAmStmt() => $_has(157);
  @$pb.TagNumber(158)
  void clearCreateAmStmt() => clearField(158);
  @$pb.TagNumber(158)
  CreateAmStmt ensureCreateAmStmt() => $_ensure(157);

  @$pb.TagNumber(159)
  CreateTrigStmt get createTrigStmt => $_getN(158);
  @$pb.TagNumber(159)
  set createTrigStmt(CreateTrigStmt v) { setField(159, v); }
  @$pb.TagNumber(159)
  $core.bool hasCreateTrigStmt() => $_has(158);
  @$pb.TagNumber(159)
  void clearCreateTrigStmt() => clearField(159);
  @$pb.TagNumber(159)
  CreateTrigStmt ensureCreateTrigStmt() => $_ensure(158);

  @$pb.TagNumber(160)
  CreateEventTrigStmt get createEventTrigStmt => $_getN(159);
  @$pb.TagNumber(160)
  set createEventTrigStmt(CreateEventTrigStmt v) { setField(160, v); }
  @$pb.TagNumber(160)
  $core.bool hasCreateEventTrigStmt() => $_has(159);
  @$pb.TagNumber(160)
  void clearCreateEventTrigStmt() => clearField(160);
  @$pb.TagNumber(160)
  CreateEventTrigStmt ensureCreateEventTrigStmt() => $_ensure(159);

  @$pb.TagNumber(161)
  AlterEventTrigStmt get alterEventTrigStmt => $_getN(160);
  @$pb.TagNumber(161)
  set alterEventTrigStmt(AlterEventTrigStmt v) { setField(161, v); }
  @$pb.TagNumber(161)
  $core.bool hasAlterEventTrigStmt() => $_has(160);
  @$pb.TagNumber(161)
  void clearAlterEventTrigStmt() => clearField(161);
  @$pb.TagNumber(161)
  AlterEventTrigStmt ensureAlterEventTrigStmt() => $_ensure(160);

  @$pb.TagNumber(162)
  CreatePLangStmt get createPlangStmt => $_getN(161);
  @$pb.TagNumber(162)
  set createPlangStmt(CreatePLangStmt v) { setField(162, v); }
  @$pb.TagNumber(162)
  $core.bool hasCreatePlangStmt() => $_has(161);
  @$pb.TagNumber(162)
  void clearCreatePlangStmt() => clearField(162);
  @$pb.TagNumber(162)
  CreatePLangStmt ensureCreatePlangStmt() => $_ensure(161);

  @$pb.TagNumber(163)
  CreateRoleStmt get createRoleStmt => $_getN(162);
  @$pb.TagNumber(163)
  set createRoleStmt(CreateRoleStmt v) { setField(163, v); }
  @$pb.TagNumber(163)
  $core.bool hasCreateRoleStmt() => $_has(162);
  @$pb.TagNumber(163)
  void clearCreateRoleStmt() => clearField(163);
  @$pb.TagNumber(163)
  CreateRoleStmt ensureCreateRoleStmt() => $_ensure(162);

  @$pb.TagNumber(164)
  AlterRoleStmt get alterRoleStmt => $_getN(163);
  @$pb.TagNumber(164)
  set alterRoleStmt(AlterRoleStmt v) { setField(164, v); }
  @$pb.TagNumber(164)
  $core.bool hasAlterRoleStmt() => $_has(163);
  @$pb.TagNumber(164)
  void clearAlterRoleStmt() => clearField(164);
  @$pb.TagNumber(164)
  AlterRoleStmt ensureAlterRoleStmt() => $_ensure(163);

  @$pb.TagNumber(165)
  AlterRoleSetStmt get alterRoleSetStmt => $_getN(164);
  @$pb.TagNumber(165)
  set alterRoleSetStmt(AlterRoleSetStmt v) { setField(165, v); }
  @$pb.TagNumber(165)
  $core.bool hasAlterRoleSetStmt() => $_has(164);
  @$pb.TagNumber(165)
  void clearAlterRoleSetStmt() => clearField(165);
  @$pb.TagNumber(165)
  AlterRoleSetStmt ensureAlterRoleSetStmt() => $_ensure(164);

  @$pb.TagNumber(166)
  DropRoleStmt get dropRoleStmt => $_getN(165);
  @$pb.TagNumber(166)
  set dropRoleStmt(DropRoleStmt v) { setField(166, v); }
  @$pb.TagNumber(166)
  $core.bool hasDropRoleStmt() => $_has(165);
  @$pb.TagNumber(166)
  void clearDropRoleStmt() => clearField(166);
  @$pb.TagNumber(166)
  DropRoleStmt ensureDropRoleStmt() => $_ensure(165);

  @$pb.TagNumber(167)
  CreateSeqStmt get createSeqStmt => $_getN(166);
  @$pb.TagNumber(167)
  set createSeqStmt(CreateSeqStmt v) { setField(167, v); }
  @$pb.TagNumber(167)
  $core.bool hasCreateSeqStmt() => $_has(166);
  @$pb.TagNumber(167)
  void clearCreateSeqStmt() => clearField(167);
  @$pb.TagNumber(167)
  CreateSeqStmt ensureCreateSeqStmt() => $_ensure(166);

  @$pb.TagNumber(168)
  AlterSeqStmt get alterSeqStmt => $_getN(167);
  @$pb.TagNumber(168)
  set alterSeqStmt(AlterSeqStmt v) { setField(168, v); }
  @$pb.TagNumber(168)
  $core.bool hasAlterSeqStmt() => $_has(167);
  @$pb.TagNumber(168)
  void clearAlterSeqStmt() => clearField(168);
  @$pb.TagNumber(168)
  AlterSeqStmt ensureAlterSeqStmt() => $_ensure(167);

  @$pb.TagNumber(169)
  DefineStmt get defineStmt => $_getN(168);
  @$pb.TagNumber(169)
  set defineStmt(DefineStmt v) { setField(169, v); }
  @$pb.TagNumber(169)
  $core.bool hasDefineStmt() => $_has(168);
  @$pb.TagNumber(169)
  void clearDefineStmt() => clearField(169);
  @$pb.TagNumber(169)
  DefineStmt ensureDefineStmt() => $_ensure(168);

  @$pb.TagNumber(170)
  CreateDomainStmt get createDomainStmt => $_getN(169);
  @$pb.TagNumber(170)
  set createDomainStmt(CreateDomainStmt v) { setField(170, v); }
  @$pb.TagNumber(170)
  $core.bool hasCreateDomainStmt() => $_has(169);
  @$pb.TagNumber(170)
  void clearCreateDomainStmt() => clearField(170);
  @$pb.TagNumber(170)
  CreateDomainStmt ensureCreateDomainStmt() => $_ensure(169);

  @$pb.TagNumber(171)
  CreateOpClassStmt get createOpClassStmt => $_getN(170);
  @$pb.TagNumber(171)
  set createOpClassStmt(CreateOpClassStmt v) { setField(171, v); }
  @$pb.TagNumber(171)
  $core.bool hasCreateOpClassStmt() => $_has(170);
  @$pb.TagNumber(171)
  void clearCreateOpClassStmt() => clearField(171);
  @$pb.TagNumber(171)
  CreateOpClassStmt ensureCreateOpClassStmt() => $_ensure(170);

  @$pb.TagNumber(172)
  CreateOpClassItem get createOpClassItem => $_getN(171);
  @$pb.TagNumber(172)
  set createOpClassItem(CreateOpClassItem v) { setField(172, v); }
  @$pb.TagNumber(172)
  $core.bool hasCreateOpClassItem() => $_has(171);
  @$pb.TagNumber(172)
  void clearCreateOpClassItem() => clearField(172);
  @$pb.TagNumber(172)
  CreateOpClassItem ensureCreateOpClassItem() => $_ensure(171);

  @$pb.TagNumber(173)
  CreateOpFamilyStmt get createOpFamilyStmt => $_getN(172);
  @$pb.TagNumber(173)
  set createOpFamilyStmt(CreateOpFamilyStmt v) { setField(173, v); }
  @$pb.TagNumber(173)
  $core.bool hasCreateOpFamilyStmt() => $_has(172);
  @$pb.TagNumber(173)
  void clearCreateOpFamilyStmt() => clearField(173);
  @$pb.TagNumber(173)
  CreateOpFamilyStmt ensureCreateOpFamilyStmt() => $_ensure(172);

  @$pb.TagNumber(174)
  AlterOpFamilyStmt get alterOpFamilyStmt => $_getN(173);
  @$pb.TagNumber(174)
  set alterOpFamilyStmt(AlterOpFamilyStmt v) { setField(174, v); }
  @$pb.TagNumber(174)
  $core.bool hasAlterOpFamilyStmt() => $_has(173);
  @$pb.TagNumber(174)
  void clearAlterOpFamilyStmt() => clearField(174);
  @$pb.TagNumber(174)
  AlterOpFamilyStmt ensureAlterOpFamilyStmt() => $_ensure(173);

  @$pb.TagNumber(175)
  DropStmt get dropStmt => $_getN(174);
  @$pb.TagNumber(175)
  set dropStmt(DropStmt v) { setField(175, v); }
  @$pb.TagNumber(175)
  $core.bool hasDropStmt() => $_has(174);
  @$pb.TagNumber(175)
  void clearDropStmt() => clearField(175);
  @$pb.TagNumber(175)
  DropStmt ensureDropStmt() => $_ensure(174);

  @$pb.TagNumber(176)
  TruncateStmt get truncateStmt => $_getN(175);
  @$pb.TagNumber(176)
  set truncateStmt(TruncateStmt v) { setField(176, v); }
  @$pb.TagNumber(176)
  $core.bool hasTruncateStmt() => $_has(175);
  @$pb.TagNumber(176)
  void clearTruncateStmt() => clearField(176);
  @$pb.TagNumber(176)
  TruncateStmt ensureTruncateStmt() => $_ensure(175);

  @$pb.TagNumber(177)
  CommentStmt get commentStmt => $_getN(176);
  @$pb.TagNumber(177)
  set commentStmt(CommentStmt v) { setField(177, v); }
  @$pb.TagNumber(177)
  $core.bool hasCommentStmt() => $_has(176);
  @$pb.TagNumber(177)
  void clearCommentStmt() => clearField(177);
  @$pb.TagNumber(177)
  CommentStmt ensureCommentStmt() => $_ensure(176);

  @$pb.TagNumber(178)
  SecLabelStmt get secLabelStmt => $_getN(177);
  @$pb.TagNumber(178)
  set secLabelStmt(SecLabelStmt v) { setField(178, v); }
  @$pb.TagNumber(178)
  $core.bool hasSecLabelStmt() => $_has(177);
  @$pb.TagNumber(178)
  void clearSecLabelStmt() => clearField(178);
  @$pb.TagNumber(178)
  SecLabelStmt ensureSecLabelStmt() => $_ensure(177);

  @$pb.TagNumber(179)
  DeclareCursorStmt get declareCursorStmt => $_getN(178);
  @$pb.TagNumber(179)
  set declareCursorStmt(DeclareCursorStmt v) { setField(179, v); }
  @$pb.TagNumber(179)
  $core.bool hasDeclareCursorStmt() => $_has(178);
  @$pb.TagNumber(179)
  void clearDeclareCursorStmt() => clearField(179);
  @$pb.TagNumber(179)
  DeclareCursorStmt ensureDeclareCursorStmt() => $_ensure(178);

  @$pb.TagNumber(180)
  ClosePortalStmt get closePortalStmt => $_getN(179);
  @$pb.TagNumber(180)
  set closePortalStmt(ClosePortalStmt v) { setField(180, v); }
  @$pb.TagNumber(180)
  $core.bool hasClosePortalStmt() => $_has(179);
  @$pb.TagNumber(180)
  void clearClosePortalStmt() => clearField(180);
  @$pb.TagNumber(180)
  ClosePortalStmt ensureClosePortalStmt() => $_ensure(179);

  @$pb.TagNumber(181)
  FetchStmt get fetchStmt => $_getN(180);
  @$pb.TagNumber(181)
  set fetchStmt(FetchStmt v) { setField(181, v); }
  @$pb.TagNumber(181)
  $core.bool hasFetchStmt() => $_has(180);
  @$pb.TagNumber(181)
  void clearFetchStmt() => clearField(181);
  @$pb.TagNumber(181)
  FetchStmt ensureFetchStmt() => $_ensure(180);

  @$pb.TagNumber(182)
  IndexStmt get indexStmt => $_getN(181);
  @$pb.TagNumber(182)
  set indexStmt(IndexStmt v) { setField(182, v); }
  @$pb.TagNumber(182)
  $core.bool hasIndexStmt() => $_has(181);
  @$pb.TagNumber(182)
  void clearIndexStmt() => clearField(182);
  @$pb.TagNumber(182)
  IndexStmt ensureIndexStmt() => $_ensure(181);

  @$pb.TagNumber(183)
  CreateStatsStmt get createStatsStmt => $_getN(182);
  @$pb.TagNumber(183)
  set createStatsStmt(CreateStatsStmt v) { setField(183, v); }
  @$pb.TagNumber(183)
  $core.bool hasCreateStatsStmt() => $_has(182);
  @$pb.TagNumber(183)
  void clearCreateStatsStmt() => clearField(183);
  @$pb.TagNumber(183)
  CreateStatsStmt ensureCreateStatsStmt() => $_ensure(182);

  @$pb.TagNumber(184)
  StatsElem get statsElem => $_getN(183);
  @$pb.TagNumber(184)
  set statsElem(StatsElem v) { setField(184, v); }
  @$pb.TagNumber(184)
  $core.bool hasStatsElem() => $_has(183);
  @$pb.TagNumber(184)
  void clearStatsElem() => clearField(184);
  @$pb.TagNumber(184)
  StatsElem ensureStatsElem() => $_ensure(183);

  @$pb.TagNumber(185)
  AlterStatsStmt get alterStatsStmt => $_getN(184);
  @$pb.TagNumber(185)
  set alterStatsStmt(AlterStatsStmt v) { setField(185, v); }
  @$pb.TagNumber(185)
  $core.bool hasAlterStatsStmt() => $_has(184);
  @$pb.TagNumber(185)
  void clearAlterStatsStmt() => clearField(185);
  @$pb.TagNumber(185)
  AlterStatsStmt ensureAlterStatsStmt() => $_ensure(184);

  @$pb.TagNumber(186)
  CreateFunctionStmt get createFunctionStmt => $_getN(185);
  @$pb.TagNumber(186)
  set createFunctionStmt(CreateFunctionStmt v) { setField(186, v); }
  @$pb.TagNumber(186)
  $core.bool hasCreateFunctionStmt() => $_has(185);
  @$pb.TagNumber(186)
  void clearCreateFunctionStmt() => clearField(186);
  @$pb.TagNumber(186)
  CreateFunctionStmt ensureCreateFunctionStmt() => $_ensure(185);

  @$pb.TagNumber(187)
  FunctionParameter get functionParameter => $_getN(186);
  @$pb.TagNumber(187)
  set functionParameter(FunctionParameter v) { setField(187, v); }
  @$pb.TagNumber(187)
  $core.bool hasFunctionParameter() => $_has(186);
  @$pb.TagNumber(187)
  void clearFunctionParameter() => clearField(187);
  @$pb.TagNumber(187)
  FunctionParameter ensureFunctionParameter() => $_ensure(186);

  @$pb.TagNumber(188)
  AlterFunctionStmt get alterFunctionStmt => $_getN(187);
  @$pb.TagNumber(188)
  set alterFunctionStmt(AlterFunctionStmt v) { setField(188, v); }
  @$pb.TagNumber(188)
  $core.bool hasAlterFunctionStmt() => $_has(187);
  @$pb.TagNumber(188)
  void clearAlterFunctionStmt() => clearField(188);
  @$pb.TagNumber(188)
  AlterFunctionStmt ensureAlterFunctionStmt() => $_ensure(187);

  @$pb.TagNumber(189)
  DoStmt get doStmt => $_getN(188);
  @$pb.TagNumber(189)
  set doStmt(DoStmt v) { setField(189, v); }
  @$pb.TagNumber(189)
  $core.bool hasDoStmt() => $_has(188);
  @$pb.TagNumber(189)
  void clearDoStmt() => clearField(189);
  @$pb.TagNumber(189)
  DoStmt ensureDoStmt() => $_ensure(188);

  @$pb.TagNumber(190)
  InlineCodeBlock get inlineCodeBlock => $_getN(189);
  @$pb.TagNumber(190)
  set inlineCodeBlock(InlineCodeBlock v) { setField(190, v); }
  @$pb.TagNumber(190)
  $core.bool hasInlineCodeBlock() => $_has(189);
  @$pb.TagNumber(190)
  void clearInlineCodeBlock() => clearField(190);
  @$pb.TagNumber(190)
  InlineCodeBlock ensureInlineCodeBlock() => $_ensure(189);

  @$pb.TagNumber(191)
  CallStmt get callStmt => $_getN(190);
  @$pb.TagNumber(191)
  set callStmt(CallStmt v) { setField(191, v); }
  @$pb.TagNumber(191)
  $core.bool hasCallStmt() => $_has(190);
  @$pb.TagNumber(191)
  void clearCallStmt() => clearField(191);
  @$pb.TagNumber(191)
  CallStmt ensureCallStmt() => $_ensure(190);

  @$pb.TagNumber(192)
  CallContext get callContext => $_getN(191);
  @$pb.TagNumber(192)
  set callContext(CallContext v) { setField(192, v); }
  @$pb.TagNumber(192)
  $core.bool hasCallContext() => $_has(191);
  @$pb.TagNumber(192)
  void clearCallContext() => clearField(192);
  @$pb.TagNumber(192)
  CallContext ensureCallContext() => $_ensure(191);

  @$pb.TagNumber(193)
  RenameStmt get renameStmt => $_getN(192);
  @$pb.TagNumber(193)
  set renameStmt(RenameStmt v) { setField(193, v); }
  @$pb.TagNumber(193)
  $core.bool hasRenameStmt() => $_has(192);
  @$pb.TagNumber(193)
  void clearRenameStmt() => clearField(193);
  @$pb.TagNumber(193)
  RenameStmt ensureRenameStmt() => $_ensure(192);

  @$pb.TagNumber(194)
  AlterObjectDependsStmt get alterObjectDependsStmt => $_getN(193);
  @$pb.TagNumber(194)
  set alterObjectDependsStmt(AlterObjectDependsStmt v) { setField(194, v); }
  @$pb.TagNumber(194)
  $core.bool hasAlterObjectDependsStmt() => $_has(193);
  @$pb.TagNumber(194)
  void clearAlterObjectDependsStmt() => clearField(194);
  @$pb.TagNumber(194)
  AlterObjectDependsStmt ensureAlterObjectDependsStmt() => $_ensure(193);

  @$pb.TagNumber(195)
  AlterObjectSchemaStmt get alterObjectSchemaStmt => $_getN(194);
  @$pb.TagNumber(195)
  set alterObjectSchemaStmt(AlterObjectSchemaStmt v) { setField(195, v); }
  @$pb.TagNumber(195)
  $core.bool hasAlterObjectSchemaStmt() => $_has(194);
  @$pb.TagNumber(195)
  void clearAlterObjectSchemaStmt() => clearField(195);
  @$pb.TagNumber(195)
  AlterObjectSchemaStmt ensureAlterObjectSchemaStmt() => $_ensure(194);

  @$pb.TagNumber(196)
  AlterOwnerStmt get alterOwnerStmt => $_getN(195);
  @$pb.TagNumber(196)
  set alterOwnerStmt(AlterOwnerStmt v) { setField(196, v); }
  @$pb.TagNumber(196)
  $core.bool hasAlterOwnerStmt() => $_has(195);
  @$pb.TagNumber(196)
  void clearAlterOwnerStmt() => clearField(196);
  @$pb.TagNumber(196)
  AlterOwnerStmt ensureAlterOwnerStmt() => $_ensure(195);

  @$pb.TagNumber(197)
  AlterOperatorStmt get alterOperatorStmt => $_getN(196);
  @$pb.TagNumber(197)
  set alterOperatorStmt(AlterOperatorStmt v) { setField(197, v); }
  @$pb.TagNumber(197)
  $core.bool hasAlterOperatorStmt() => $_has(196);
  @$pb.TagNumber(197)
  void clearAlterOperatorStmt() => clearField(197);
  @$pb.TagNumber(197)
  AlterOperatorStmt ensureAlterOperatorStmt() => $_ensure(196);

  @$pb.TagNumber(198)
  AlterTypeStmt get alterTypeStmt => $_getN(197);
  @$pb.TagNumber(198)
  set alterTypeStmt(AlterTypeStmt v) { setField(198, v); }
  @$pb.TagNumber(198)
  $core.bool hasAlterTypeStmt() => $_has(197);
  @$pb.TagNumber(198)
  void clearAlterTypeStmt() => clearField(198);
  @$pb.TagNumber(198)
  AlterTypeStmt ensureAlterTypeStmt() => $_ensure(197);

  @$pb.TagNumber(199)
  RuleStmt get ruleStmt => $_getN(198);
  @$pb.TagNumber(199)
  set ruleStmt(RuleStmt v) { setField(199, v); }
  @$pb.TagNumber(199)
  $core.bool hasRuleStmt() => $_has(198);
  @$pb.TagNumber(199)
  void clearRuleStmt() => clearField(199);
  @$pb.TagNumber(199)
  RuleStmt ensureRuleStmt() => $_ensure(198);

  @$pb.TagNumber(200)
  NotifyStmt get notifyStmt => $_getN(199);
  @$pb.TagNumber(200)
  set notifyStmt(NotifyStmt v) { setField(200, v); }
  @$pb.TagNumber(200)
  $core.bool hasNotifyStmt() => $_has(199);
  @$pb.TagNumber(200)
  void clearNotifyStmt() => clearField(200);
  @$pb.TagNumber(200)
  NotifyStmt ensureNotifyStmt() => $_ensure(199);

  @$pb.TagNumber(201)
  ListenStmt get listenStmt => $_getN(200);
  @$pb.TagNumber(201)
  set listenStmt(ListenStmt v) { setField(201, v); }
  @$pb.TagNumber(201)
  $core.bool hasListenStmt() => $_has(200);
  @$pb.TagNumber(201)
  void clearListenStmt() => clearField(201);
  @$pb.TagNumber(201)
  ListenStmt ensureListenStmt() => $_ensure(200);

  @$pb.TagNumber(202)
  UnlistenStmt get unlistenStmt => $_getN(201);
  @$pb.TagNumber(202)
  set unlistenStmt(UnlistenStmt v) { setField(202, v); }
  @$pb.TagNumber(202)
  $core.bool hasUnlistenStmt() => $_has(201);
  @$pb.TagNumber(202)
  void clearUnlistenStmt() => clearField(202);
  @$pb.TagNumber(202)
  UnlistenStmt ensureUnlistenStmt() => $_ensure(201);

  @$pb.TagNumber(203)
  TransactionStmt get transactionStmt => $_getN(202);
  @$pb.TagNumber(203)
  set transactionStmt(TransactionStmt v) { setField(203, v); }
  @$pb.TagNumber(203)
  $core.bool hasTransactionStmt() => $_has(202);
  @$pb.TagNumber(203)
  void clearTransactionStmt() => clearField(203);
  @$pb.TagNumber(203)
  TransactionStmt ensureTransactionStmt() => $_ensure(202);

  @$pb.TagNumber(204)
  CompositeTypeStmt get compositeTypeStmt => $_getN(203);
  @$pb.TagNumber(204)
  set compositeTypeStmt(CompositeTypeStmt v) { setField(204, v); }
  @$pb.TagNumber(204)
  $core.bool hasCompositeTypeStmt() => $_has(203);
  @$pb.TagNumber(204)
  void clearCompositeTypeStmt() => clearField(204);
  @$pb.TagNumber(204)
  CompositeTypeStmt ensureCompositeTypeStmt() => $_ensure(203);

  @$pb.TagNumber(205)
  CreateEnumStmt get createEnumStmt => $_getN(204);
  @$pb.TagNumber(205)
  set createEnumStmt(CreateEnumStmt v) { setField(205, v); }
  @$pb.TagNumber(205)
  $core.bool hasCreateEnumStmt() => $_has(204);
  @$pb.TagNumber(205)
  void clearCreateEnumStmt() => clearField(205);
  @$pb.TagNumber(205)
  CreateEnumStmt ensureCreateEnumStmt() => $_ensure(204);

  @$pb.TagNumber(206)
  CreateRangeStmt get createRangeStmt => $_getN(205);
  @$pb.TagNumber(206)
  set createRangeStmt(CreateRangeStmt v) { setField(206, v); }
  @$pb.TagNumber(206)
  $core.bool hasCreateRangeStmt() => $_has(205);
  @$pb.TagNumber(206)
  void clearCreateRangeStmt() => clearField(206);
  @$pb.TagNumber(206)
  CreateRangeStmt ensureCreateRangeStmt() => $_ensure(205);

  @$pb.TagNumber(207)
  AlterEnumStmt get alterEnumStmt => $_getN(206);
  @$pb.TagNumber(207)
  set alterEnumStmt(AlterEnumStmt v) { setField(207, v); }
  @$pb.TagNumber(207)
  $core.bool hasAlterEnumStmt() => $_has(206);
  @$pb.TagNumber(207)
  void clearAlterEnumStmt() => clearField(207);
  @$pb.TagNumber(207)
  AlterEnumStmt ensureAlterEnumStmt() => $_ensure(206);

  @$pb.TagNumber(208)
  ViewStmt get viewStmt => $_getN(207);
  @$pb.TagNumber(208)
  set viewStmt(ViewStmt v) { setField(208, v); }
  @$pb.TagNumber(208)
  $core.bool hasViewStmt() => $_has(207);
  @$pb.TagNumber(208)
  void clearViewStmt() => clearField(208);
  @$pb.TagNumber(208)
  ViewStmt ensureViewStmt() => $_ensure(207);

  @$pb.TagNumber(209)
  LoadStmt get loadStmt => $_getN(208);
  @$pb.TagNumber(209)
  set loadStmt(LoadStmt v) { setField(209, v); }
  @$pb.TagNumber(209)
  $core.bool hasLoadStmt() => $_has(208);
  @$pb.TagNumber(209)
  void clearLoadStmt() => clearField(209);
  @$pb.TagNumber(209)
  LoadStmt ensureLoadStmt() => $_ensure(208);

  @$pb.TagNumber(210)
  CreatedbStmt get createdbStmt => $_getN(209);
  @$pb.TagNumber(210)
  set createdbStmt(CreatedbStmt v) { setField(210, v); }
  @$pb.TagNumber(210)
  $core.bool hasCreatedbStmt() => $_has(209);
  @$pb.TagNumber(210)
  void clearCreatedbStmt() => clearField(210);
  @$pb.TagNumber(210)
  CreatedbStmt ensureCreatedbStmt() => $_ensure(209);

  @$pb.TagNumber(211)
  AlterDatabaseStmt get alterDatabaseStmt => $_getN(210);
  @$pb.TagNumber(211)
  set alterDatabaseStmt(AlterDatabaseStmt v) { setField(211, v); }
  @$pb.TagNumber(211)
  $core.bool hasAlterDatabaseStmt() => $_has(210);
  @$pb.TagNumber(211)
  void clearAlterDatabaseStmt() => clearField(211);
  @$pb.TagNumber(211)
  AlterDatabaseStmt ensureAlterDatabaseStmt() => $_ensure(210);

  @$pb.TagNumber(212)
  AlterDatabaseRefreshCollStmt get alterDatabaseRefreshCollStmt => $_getN(211);
  @$pb.TagNumber(212)
  set alterDatabaseRefreshCollStmt(AlterDatabaseRefreshCollStmt v) { setField(212, v); }
  @$pb.TagNumber(212)
  $core.bool hasAlterDatabaseRefreshCollStmt() => $_has(211);
  @$pb.TagNumber(212)
  void clearAlterDatabaseRefreshCollStmt() => clearField(212);
  @$pb.TagNumber(212)
  AlterDatabaseRefreshCollStmt ensureAlterDatabaseRefreshCollStmt() => $_ensure(211);

  @$pb.TagNumber(213)
  AlterDatabaseSetStmt get alterDatabaseSetStmt => $_getN(212);
  @$pb.TagNumber(213)
  set alterDatabaseSetStmt(AlterDatabaseSetStmt v) { setField(213, v); }
  @$pb.TagNumber(213)
  $core.bool hasAlterDatabaseSetStmt() => $_has(212);
  @$pb.TagNumber(213)
  void clearAlterDatabaseSetStmt() => clearField(213);
  @$pb.TagNumber(213)
  AlterDatabaseSetStmt ensureAlterDatabaseSetStmt() => $_ensure(212);

  @$pb.TagNumber(214)
  DropdbStmt get dropdbStmt => $_getN(213);
  @$pb.TagNumber(214)
  set dropdbStmt(DropdbStmt v) { setField(214, v); }
  @$pb.TagNumber(214)
  $core.bool hasDropdbStmt() => $_has(213);
  @$pb.TagNumber(214)
  void clearDropdbStmt() => clearField(214);
  @$pb.TagNumber(214)
  DropdbStmt ensureDropdbStmt() => $_ensure(213);

  @$pb.TagNumber(215)
  AlterSystemStmt get alterSystemStmt => $_getN(214);
  @$pb.TagNumber(215)
  set alterSystemStmt(AlterSystemStmt v) { setField(215, v); }
  @$pb.TagNumber(215)
  $core.bool hasAlterSystemStmt() => $_has(214);
  @$pb.TagNumber(215)
  void clearAlterSystemStmt() => clearField(215);
  @$pb.TagNumber(215)
  AlterSystemStmt ensureAlterSystemStmt() => $_ensure(214);

  @$pb.TagNumber(216)
  ClusterStmt get clusterStmt => $_getN(215);
  @$pb.TagNumber(216)
  set clusterStmt(ClusterStmt v) { setField(216, v); }
  @$pb.TagNumber(216)
  $core.bool hasClusterStmt() => $_has(215);
  @$pb.TagNumber(216)
  void clearClusterStmt() => clearField(216);
  @$pb.TagNumber(216)
  ClusterStmt ensureClusterStmt() => $_ensure(215);

  @$pb.TagNumber(217)
  VacuumStmt get vacuumStmt => $_getN(216);
  @$pb.TagNumber(217)
  set vacuumStmt(VacuumStmt v) { setField(217, v); }
  @$pb.TagNumber(217)
  $core.bool hasVacuumStmt() => $_has(216);
  @$pb.TagNumber(217)
  void clearVacuumStmt() => clearField(217);
  @$pb.TagNumber(217)
  VacuumStmt ensureVacuumStmt() => $_ensure(216);

  @$pb.TagNumber(218)
  VacuumRelation get vacuumRelation => $_getN(217);
  @$pb.TagNumber(218)
  set vacuumRelation(VacuumRelation v) { setField(218, v); }
  @$pb.TagNumber(218)
  $core.bool hasVacuumRelation() => $_has(217);
  @$pb.TagNumber(218)
  void clearVacuumRelation() => clearField(218);
  @$pb.TagNumber(218)
  VacuumRelation ensureVacuumRelation() => $_ensure(217);

  @$pb.TagNumber(219)
  ExplainStmt get explainStmt => $_getN(218);
  @$pb.TagNumber(219)
  set explainStmt(ExplainStmt v) { setField(219, v); }
  @$pb.TagNumber(219)
  $core.bool hasExplainStmt() => $_has(218);
  @$pb.TagNumber(219)
  void clearExplainStmt() => clearField(219);
  @$pb.TagNumber(219)
  ExplainStmt ensureExplainStmt() => $_ensure(218);

  @$pb.TagNumber(220)
  CreateTableAsStmt get createTableAsStmt => $_getN(219);
  @$pb.TagNumber(220)
  set createTableAsStmt(CreateTableAsStmt v) { setField(220, v); }
  @$pb.TagNumber(220)
  $core.bool hasCreateTableAsStmt() => $_has(219);
  @$pb.TagNumber(220)
  void clearCreateTableAsStmt() => clearField(220);
  @$pb.TagNumber(220)
  CreateTableAsStmt ensureCreateTableAsStmt() => $_ensure(219);

  @$pb.TagNumber(221)
  RefreshMatViewStmt get refreshMatViewStmt => $_getN(220);
  @$pb.TagNumber(221)
  set refreshMatViewStmt(RefreshMatViewStmt v) { setField(221, v); }
  @$pb.TagNumber(221)
  $core.bool hasRefreshMatViewStmt() => $_has(220);
  @$pb.TagNumber(221)
  void clearRefreshMatViewStmt() => clearField(221);
  @$pb.TagNumber(221)
  RefreshMatViewStmt ensureRefreshMatViewStmt() => $_ensure(220);

  @$pb.TagNumber(222)
  CheckPointStmt get checkPointStmt => $_getN(221);
  @$pb.TagNumber(222)
  set checkPointStmt(CheckPointStmt v) { setField(222, v); }
  @$pb.TagNumber(222)
  $core.bool hasCheckPointStmt() => $_has(221);
  @$pb.TagNumber(222)
  void clearCheckPointStmt() => clearField(222);
  @$pb.TagNumber(222)
  CheckPointStmt ensureCheckPointStmt() => $_ensure(221);

  @$pb.TagNumber(223)
  DiscardStmt get discardStmt => $_getN(222);
  @$pb.TagNumber(223)
  set discardStmt(DiscardStmt v) { setField(223, v); }
  @$pb.TagNumber(223)
  $core.bool hasDiscardStmt() => $_has(222);
  @$pb.TagNumber(223)
  void clearDiscardStmt() => clearField(223);
  @$pb.TagNumber(223)
  DiscardStmt ensureDiscardStmt() => $_ensure(222);

  @$pb.TagNumber(224)
  LockStmt get lockStmt => $_getN(223);
  @$pb.TagNumber(224)
  set lockStmt(LockStmt v) { setField(224, v); }
  @$pb.TagNumber(224)
  $core.bool hasLockStmt() => $_has(223);
  @$pb.TagNumber(224)
  void clearLockStmt() => clearField(224);
  @$pb.TagNumber(224)
  LockStmt ensureLockStmt() => $_ensure(223);

  @$pb.TagNumber(225)
  ConstraintsSetStmt get constraintsSetStmt => $_getN(224);
  @$pb.TagNumber(225)
  set constraintsSetStmt(ConstraintsSetStmt v) { setField(225, v); }
  @$pb.TagNumber(225)
  $core.bool hasConstraintsSetStmt() => $_has(224);
  @$pb.TagNumber(225)
  void clearConstraintsSetStmt() => clearField(225);
  @$pb.TagNumber(225)
  ConstraintsSetStmt ensureConstraintsSetStmt() => $_ensure(224);

  @$pb.TagNumber(226)
  ReindexStmt get reindexStmt => $_getN(225);
  @$pb.TagNumber(226)
  set reindexStmt(ReindexStmt v) { setField(226, v); }
  @$pb.TagNumber(226)
  $core.bool hasReindexStmt() => $_has(225);
  @$pb.TagNumber(226)
  void clearReindexStmt() => clearField(226);
  @$pb.TagNumber(226)
  ReindexStmt ensureReindexStmt() => $_ensure(225);

  @$pb.TagNumber(227)
  CreateConversionStmt get createConversionStmt => $_getN(226);
  @$pb.TagNumber(227)
  set createConversionStmt(CreateConversionStmt v) { setField(227, v); }
  @$pb.TagNumber(227)
  $core.bool hasCreateConversionStmt() => $_has(226);
  @$pb.TagNumber(227)
  void clearCreateConversionStmt() => clearField(227);
  @$pb.TagNumber(227)
  CreateConversionStmt ensureCreateConversionStmt() => $_ensure(226);

  @$pb.TagNumber(228)
  CreateCastStmt get createCastStmt => $_getN(227);
  @$pb.TagNumber(228)
  set createCastStmt(CreateCastStmt v) { setField(228, v); }
  @$pb.TagNumber(228)
  $core.bool hasCreateCastStmt() => $_has(227);
  @$pb.TagNumber(228)
  void clearCreateCastStmt() => clearField(228);
  @$pb.TagNumber(228)
  CreateCastStmt ensureCreateCastStmt() => $_ensure(227);

  @$pb.TagNumber(229)
  CreateTransformStmt get createTransformStmt => $_getN(228);
  @$pb.TagNumber(229)
  set createTransformStmt(CreateTransformStmt v) { setField(229, v); }
  @$pb.TagNumber(229)
  $core.bool hasCreateTransformStmt() => $_has(228);
  @$pb.TagNumber(229)
  void clearCreateTransformStmt() => clearField(229);
  @$pb.TagNumber(229)
  CreateTransformStmt ensureCreateTransformStmt() => $_ensure(228);

  @$pb.TagNumber(230)
  PrepareStmt get prepareStmt => $_getN(229);
  @$pb.TagNumber(230)
  set prepareStmt(PrepareStmt v) { setField(230, v); }
  @$pb.TagNumber(230)
  $core.bool hasPrepareStmt() => $_has(229);
  @$pb.TagNumber(230)
  void clearPrepareStmt() => clearField(230);
  @$pb.TagNumber(230)
  PrepareStmt ensurePrepareStmt() => $_ensure(229);

  @$pb.TagNumber(231)
  ExecuteStmt get executeStmt => $_getN(230);
  @$pb.TagNumber(231)
  set executeStmt(ExecuteStmt v) { setField(231, v); }
  @$pb.TagNumber(231)
  $core.bool hasExecuteStmt() => $_has(230);
  @$pb.TagNumber(231)
  void clearExecuteStmt() => clearField(231);
  @$pb.TagNumber(231)
  ExecuteStmt ensureExecuteStmt() => $_ensure(230);

  @$pb.TagNumber(232)
  DeallocateStmt get deallocateStmt => $_getN(231);
  @$pb.TagNumber(232)
  set deallocateStmt(DeallocateStmt v) { setField(232, v); }
  @$pb.TagNumber(232)
  $core.bool hasDeallocateStmt() => $_has(231);
  @$pb.TagNumber(232)
  void clearDeallocateStmt() => clearField(232);
  @$pb.TagNumber(232)
  DeallocateStmt ensureDeallocateStmt() => $_ensure(231);

  @$pb.TagNumber(233)
  DropOwnedStmt get dropOwnedStmt => $_getN(232);
  @$pb.TagNumber(233)
  set dropOwnedStmt(DropOwnedStmt v) { setField(233, v); }
  @$pb.TagNumber(233)
  $core.bool hasDropOwnedStmt() => $_has(232);
  @$pb.TagNumber(233)
  void clearDropOwnedStmt() => clearField(233);
  @$pb.TagNumber(233)
  DropOwnedStmt ensureDropOwnedStmt() => $_ensure(232);

  @$pb.TagNumber(234)
  ReassignOwnedStmt get reassignOwnedStmt => $_getN(233);
  @$pb.TagNumber(234)
  set reassignOwnedStmt(ReassignOwnedStmt v) { setField(234, v); }
  @$pb.TagNumber(234)
  $core.bool hasReassignOwnedStmt() => $_has(233);
  @$pb.TagNumber(234)
  void clearReassignOwnedStmt() => clearField(234);
  @$pb.TagNumber(234)
  ReassignOwnedStmt ensureReassignOwnedStmt() => $_ensure(233);

  @$pb.TagNumber(235)
  AlterTSDictionaryStmt get alterTsdictionaryStmt => $_getN(234);
  @$pb.TagNumber(235)
  set alterTsdictionaryStmt(AlterTSDictionaryStmt v) { setField(235, v); }
  @$pb.TagNumber(235)
  $core.bool hasAlterTsdictionaryStmt() => $_has(234);
  @$pb.TagNumber(235)
  void clearAlterTsdictionaryStmt() => clearField(235);
  @$pb.TagNumber(235)
  AlterTSDictionaryStmt ensureAlterTsdictionaryStmt() => $_ensure(234);

  @$pb.TagNumber(236)
  AlterTSConfigurationStmt get alterTsconfigurationStmt => $_getN(235);
  @$pb.TagNumber(236)
  set alterTsconfigurationStmt(AlterTSConfigurationStmt v) { setField(236, v); }
  @$pb.TagNumber(236)
  $core.bool hasAlterTsconfigurationStmt() => $_has(235);
  @$pb.TagNumber(236)
  void clearAlterTsconfigurationStmt() => clearField(236);
  @$pb.TagNumber(236)
  AlterTSConfigurationStmt ensureAlterTsconfigurationStmt() => $_ensure(235);

  @$pb.TagNumber(237)
  PublicationTable get publicationTable => $_getN(236);
  @$pb.TagNumber(237)
  set publicationTable(PublicationTable v) { setField(237, v); }
  @$pb.TagNumber(237)
  $core.bool hasPublicationTable() => $_has(236);
  @$pb.TagNumber(237)
  void clearPublicationTable() => clearField(237);
  @$pb.TagNumber(237)
  PublicationTable ensurePublicationTable() => $_ensure(236);

  @$pb.TagNumber(238)
  PublicationObjSpec get publicationObjSpec => $_getN(237);
  @$pb.TagNumber(238)
  set publicationObjSpec(PublicationObjSpec v) { setField(238, v); }
  @$pb.TagNumber(238)
  $core.bool hasPublicationObjSpec() => $_has(237);
  @$pb.TagNumber(238)
  void clearPublicationObjSpec() => clearField(238);
  @$pb.TagNumber(238)
  PublicationObjSpec ensurePublicationObjSpec() => $_ensure(237);

  @$pb.TagNumber(239)
  CreatePublicationStmt get createPublicationStmt => $_getN(238);
  @$pb.TagNumber(239)
  set createPublicationStmt(CreatePublicationStmt v) { setField(239, v); }
  @$pb.TagNumber(239)
  $core.bool hasCreatePublicationStmt() => $_has(238);
  @$pb.TagNumber(239)
  void clearCreatePublicationStmt() => clearField(239);
  @$pb.TagNumber(239)
  CreatePublicationStmt ensureCreatePublicationStmt() => $_ensure(238);

  @$pb.TagNumber(240)
  AlterPublicationStmt get alterPublicationStmt => $_getN(239);
  @$pb.TagNumber(240)
  set alterPublicationStmt(AlterPublicationStmt v) { setField(240, v); }
  @$pb.TagNumber(240)
  $core.bool hasAlterPublicationStmt() => $_has(239);
  @$pb.TagNumber(240)
  void clearAlterPublicationStmt() => clearField(240);
  @$pb.TagNumber(240)
  AlterPublicationStmt ensureAlterPublicationStmt() => $_ensure(239);

  @$pb.TagNumber(241)
  CreateSubscriptionStmt get createSubscriptionStmt => $_getN(240);
  @$pb.TagNumber(241)
  set createSubscriptionStmt(CreateSubscriptionStmt v) { setField(241, v); }
  @$pb.TagNumber(241)
  $core.bool hasCreateSubscriptionStmt() => $_has(240);
  @$pb.TagNumber(241)
  void clearCreateSubscriptionStmt() => clearField(241);
  @$pb.TagNumber(241)
  CreateSubscriptionStmt ensureCreateSubscriptionStmt() => $_ensure(240);

  @$pb.TagNumber(242)
  AlterSubscriptionStmt get alterSubscriptionStmt => $_getN(241);
  @$pb.TagNumber(242)
  set alterSubscriptionStmt(AlterSubscriptionStmt v) { setField(242, v); }
  @$pb.TagNumber(242)
  $core.bool hasAlterSubscriptionStmt() => $_has(241);
  @$pb.TagNumber(242)
  void clearAlterSubscriptionStmt() => clearField(242);
  @$pb.TagNumber(242)
  AlterSubscriptionStmt ensureAlterSubscriptionStmt() => $_ensure(241);

  @$pb.TagNumber(243)
  DropSubscriptionStmt get dropSubscriptionStmt => $_getN(242);
  @$pb.TagNumber(243)
  set dropSubscriptionStmt(DropSubscriptionStmt v) { setField(243, v); }
  @$pb.TagNumber(243)
  $core.bool hasDropSubscriptionStmt() => $_has(242);
  @$pb.TagNumber(243)
  void clearDropSubscriptionStmt() => clearField(243);
  @$pb.TagNumber(243)
  DropSubscriptionStmt ensureDropSubscriptionStmt() => $_ensure(242);

  @$pb.TagNumber(244)
  PgInteger get integer => $_getN(243);
  @$pb.TagNumber(244)
  set integer(PgInteger v) { setField(244, v); }
  @$pb.TagNumber(244)
  $core.bool hasInteger() => $_has(243);
  @$pb.TagNumber(244)
  void clearInteger() => clearField(244);
  @$pb.TagNumber(244)
  PgInteger ensureInteger() => $_ensure(243);

  @$pb.TagNumber(245)
  PgFloat get float => $_getN(244);
  @$pb.TagNumber(245)
  set float(PgFloat v) { setField(245, v); }
  @$pb.TagNumber(245)
  $core.bool hasFloat() => $_has(244);
  @$pb.TagNumber(245)
  void clearFloat() => clearField(245);
  @$pb.TagNumber(245)
  PgFloat ensureFloat() => $_ensure(244);

  @$pb.TagNumber(246)
  PgBoolean get boolean => $_getN(245);
  @$pb.TagNumber(246)
  set boolean(PgBoolean v) { setField(246, v); }
  @$pb.TagNumber(246)
  $core.bool hasBoolean() => $_has(245);
  @$pb.TagNumber(246)
  void clearBoolean() => clearField(246);
  @$pb.TagNumber(246)
  PgBoolean ensureBoolean() => $_ensure(245);

  @$pb.TagNumber(247)
  PgString get string => $_getN(246);
  @$pb.TagNumber(247)
  set string(PgString v) { setField(247, v); }
  @$pb.TagNumber(247)
  $core.bool hasString() => $_has(246);
  @$pb.TagNumber(247)
  void clearString() => clearField(247);
  @$pb.TagNumber(247)
  PgString ensureString() => $_ensure(246);

  @$pb.TagNumber(248)
  PgBitString get bitString => $_getN(247);
  @$pb.TagNumber(248)
  set bitString(PgBitString v) { setField(248, v); }
  @$pb.TagNumber(248)
  $core.bool hasBitString() => $_has(247);
  @$pb.TagNumber(248)
  void clearBitString() => clearField(248);
  @$pb.TagNumber(248)
  PgBitString ensureBitString() => $_ensure(247);

  @$pb.TagNumber(249)
  List_ get list => $_getN(248);
  @$pb.TagNumber(249)
  set list(List_ v) { setField(249, v); }
  @$pb.TagNumber(249)
  $core.bool hasList() => $_has(248);
  @$pb.TagNumber(249)
  void clearList() => clearField(249);
  @$pb.TagNumber(249)
  List_ ensureList() => $_ensure(248);

  @$pb.TagNumber(250)
  IntList get intList => $_getN(249);
  @$pb.TagNumber(250)
  set intList(IntList v) { setField(250, v); }
  @$pb.TagNumber(250)
  $core.bool hasIntList() => $_has(249);
  @$pb.TagNumber(250)
  void clearIntList() => clearField(250);
  @$pb.TagNumber(250)
  IntList ensureIntList() => $_ensure(249);

  @$pb.TagNumber(251)
  OidList get oidList => $_getN(250);
  @$pb.TagNumber(251)
  set oidList(OidList v) { setField(251, v); }
  @$pb.TagNumber(251)
  $core.bool hasOidList() => $_has(250);
  @$pb.TagNumber(251)
  void clearOidList() => clearField(251);
  @$pb.TagNumber(251)
  OidList ensureOidList() => $_ensure(250);

  @$pb.TagNumber(252)
  A_Const get aConst => $_getN(251);
  @$pb.TagNumber(252)
  set aConst(A_Const v) { setField(252, v); }
  @$pb.TagNumber(252)
  $core.bool hasAConst() => $_has(251);
  @$pb.TagNumber(252)
  void clearAConst() => clearField(252);
  @$pb.TagNumber(252)
  A_Const ensureAConst() => $_ensure(251);
}

class PgInteger extends $pb.GeneratedMessage {
  factory PgInteger({
    $core.int? ival,
  }) {
    final $result = create();
    if (ival != null) {
      $result.ival = ival;
    }
    return $result;
  }
  PgInteger._() : super();
  factory PgInteger.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PgInteger.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Integer', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'ival', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PgInteger clone() => PgInteger()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PgInteger copyWith(void Function(PgInteger) updates) => super.copyWith((message) => updates(message as PgInteger)) as PgInteger;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PgInteger create() => PgInteger._();
  PgInteger createEmptyInstance() => create();
  static $pb.PbList<PgInteger> createRepeated() => $pb.PbList<PgInteger>();
  @$core.pragma('dart2js:noInline')
  static PgInteger getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PgInteger>(create);
  static PgInteger? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get ival => $_getIZ(0);
  @$pb.TagNumber(1)
  set ival($core.int v) { $_setSignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasIval() => $_has(0);
  @$pb.TagNumber(1)
  void clearIval() => clearField(1);
}

class PgFloat extends $pb.GeneratedMessage {
  factory PgFloat({
    $core.String? fval,
  }) {
    final $result = create();
    if (fval != null) {
      $result.fval = fval;
    }
    return $result;
  }
  PgFloat._() : super();
  factory PgFloat.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PgFloat.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Float', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'fval')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PgFloat clone() => PgFloat()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PgFloat copyWith(void Function(PgFloat) updates) => super.copyWith((message) => updates(message as PgFloat)) as PgFloat;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PgFloat create() => PgFloat._();
  PgFloat createEmptyInstance() => create();
  static $pb.PbList<PgFloat> createRepeated() => $pb.PbList<PgFloat>();
  @$core.pragma('dart2js:noInline')
  static PgFloat getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PgFloat>(create);
  static PgFloat? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get fval => $_getSZ(0);
  @$pb.TagNumber(1)
  set fval($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasFval() => $_has(0);
  @$pb.TagNumber(1)
  void clearFval() => clearField(1);
}

class PgBoolean extends $pb.GeneratedMessage {
  factory PgBoolean({
    $core.bool? boolval,
  }) {
    final $result = create();
    if (boolval != null) {
      $result.boolval = boolval;
    }
    return $result;
  }
  PgBoolean._() : super();
  factory PgBoolean.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PgBoolean.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Boolean', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'boolval')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PgBoolean clone() => PgBoolean()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PgBoolean copyWith(void Function(PgBoolean) updates) => super.copyWith((message) => updates(message as PgBoolean)) as PgBoolean;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PgBoolean create() => PgBoolean._();
  PgBoolean createEmptyInstance() => create();
  static $pb.PbList<PgBoolean> createRepeated() => $pb.PbList<PgBoolean>();
  @$core.pragma('dart2js:noInline')
  static PgBoolean getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PgBoolean>(create);
  static PgBoolean? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get boolval => $_getBF(0);
  @$pb.TagNumber(1)
  set boolval($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasBoolval() => $_has(0);
  @$pb.TagNumber(1)
  void clearBoolval() => clearField(1);
}

class PgString extends $pb.GeneratedMessage {
  factory PgString({
    $core.String? sval,
  }) {
    final $result = create();
    if (sval != null) {
      $result.sval = sval;
    }
    return $result;
  }
  PgString._() : super();
  factory PgString.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PgString.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'String', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'sval')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PgString clone() => PgString()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PgString copyWith(void Function(PgString) updates) => super.copyWith((message) => updates(message as PgString)) as PgString;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PgString create() => PgString._();
  PgString createEmptyInstance() => create();
  static $pb.PbList<PgString> createRepeated() => $pb.PbList<PgString>();
  @$core.pragma('dart2js:noInline')
  static PgString getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PgString>(create);
  static PgString? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get sval => $_getSZ(0);
  @$pb.TagNumber(1)
  set sval($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasSval() => $_has(0);
  @$pb.TagNumber(1)
  void clearSval() => clearField(1);
}

class PgBitString extends $pb.GeneratedMessage {
  factory PgBitString({
    $core.String? bsval,
  }) {
    final $result = create();
    if (bsval != null) {
      $result.bsval = bsval;
    }
    return $result;
  }
  PgBitString._() : super();
  factory PgBitString.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PgBitString.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'BitString', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'bsval')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PgBitString clone() => PgBitString()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PgBitString copyWith(void Function(PgBitString) updates) => super.copyWith((message) => updates(message as PgBitString)) as PgBitString;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PgBitString create() => PgBitString._();
  PgBitString createEmptyInstance() => create();
  static $pb.PbList<PgBitString> createRepeated() => $pb.PbList<PgBitString>();
  @$core.pragma('dart2js:noInline')
  static PgBitString getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PgBitString>(create);
  static PgBitString? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get bsval => $_getSZ(0);
  @$pb.TagNumber(1)
  set bsval($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasBsval() => $_has(0);
  @$pb.TagNumber(1)
  void clearBsval() => clearField(1);
}

class List_ extends $pb.GeneratedMessage {
  factory List_({
    $core.Iterable<Node>? items,
  }) {
    final $result = create();
    if (items != null) {
      $result.items.addAll(items);
    }
    return $result;
  }
  List_._() : super();
  factory List_.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory List_.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'List', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'items', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  List_ clone() => List_()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  List_ copyWith(void Function(List_) updates) => super.copyWith((message) => updates(message as List_)) as List_;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static List_ create() => List_._();
  List_ createEmptyInstance() => create();
  static $pb.PbList<List_> createRepeated() => $pb.PbList<List_>();
  @$core.pragma('dart2js:noInline')
  static List_ getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<List_>(create);
  static List_? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get items => $_getList(0);
}

class OidList extends $pb.GeneratedMessage {
  factory OidList({
    $core.Iterable<Node>? items,
  }) {
    final $result = create();
    if (items != null) {
      $result.items.addAll(items);
    }
    return $result;
  }
  OidList._() : super();
  factory OidList.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory OidList.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'OidList', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'items', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  OidList clone() => OidList()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  OidList copyWith(void Function(OidList) updates) => super.copyWith((message) => updates(message as OidList)) as OidList;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static OidList create() => OidList._();
  OidList createEmptyInstance() => create();
  static $pb.PbList<OidList> createRepeated() => $pb.PbList<OidList>();
  @$core.pragma('dart2js:noInline')
  static OidList getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<OidList>(create);
  static OidList? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get items => $_getList(0);
}

class IntList extends $pb.GeneratedMessage {
  factory IntList({
    $core.Iterable<Node>? items,
  }) {
    final $result = create();
    if (items != null) {
      $result.items.addAll(items);
    }
    return $result;
  }
  IntList._() : super();
  factory IntList.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory IntList.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'IntList', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'items', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  IntList clone() => IntList()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  IntList copyWith(void Function(IntList) updates) => super.copyWith((message) => updates(message as IntList)) as IntList;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static IntList create() => IntList._();
  IntList createEmptyInstance() => create();
  static $pb.PbList<IntList> createRepeated() => $pb.PbList<IntList>();
  @$core.pragma('dart2js:noInline')
  static IntList getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<IntList>(create);
  static IntList? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get items => $_getList(0);
}

enum A_Const_Val {
  ival, 
  fval, 
  boolval, 
  sval, 
  bsval, 
  notSet
}

class A_Const extends $pb.GeneratedMessage {
  factory A_Const({
    PgInteger? ival,
    PgFloat? fval,
    PgBoolean? boolval,
    PgString? sval,
    PgBitString? bsval,
    $core.bool? isnull,
    $core.int? location,
  }) {
    final $result = create();
    if (ival != null) {
      $result.ival = ival;
    }
    if (fval != null) {
      $result.fval = fval;
    }
    if (boolval != null) {
      $result.boolval = boolval;
    }
    if (sval != null) {
      $result.sval = sval;
    }
    if (bsval != null) {
      $result.bsval = bsval;
    }
    if (isnull != null) {
      $result.isnull = isnull;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  A_Const._() : super();
  factory A_Const.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory A_Const.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static const $core.Map<$core.int, A_Const_Val> _A_Const_ValByTag = {
    1 : A_Const_Val.ival,
    2 : A_Const_Val.fval,
    3 : A_Const_Val.boolval,
    4 : A_Const_Val.sval,
    5 : A_Const_Val.bsval,
    0 : A_Const_Val.notSet
  };
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'A_Const', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..oo(0, [1, 2, 3, 4, 5])
    ..aOM<PgInteger>(1, _omitFieldNames ? '' : 'ival', subBuilder: PgInteger.create)
    ..aOM<PgFloat>(2, _omitFieldNames ? '' : 'fval', subBuilder: PgFloat.create)
    ..aOM<PgBoolean>(3, _omitFieldNames ? '' : 'boolval', subBuilder: PgBoolean.create)
    ..aOM<PgString>(4, _omitFieldNames ? '' : 'sval', subBuilder: PgString.create)
    ..aOM<PgBitString>(5, _omitFieldNames ? '' : 'bsval', subBuilder: PgBitString.create)
    ..aOB(10, _omitFieldNames ? '' : 'isnull')
    ..a<$core.int>(11, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  A_Const clone() => A_Const()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  A_Const copyWith(void Function(A_Const) updates) => super.copyWith((message) => updates(message as A_Const)) as A_Const;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static A_Const create() => A_Const._();
  A_Const createEmptyInstance() => create();
  static $pb.PbList<A_Const> createRepeated() => $pb.PbList<A_Const>();
  @$core.pragma('dart2js:noInline')
  static A_Const getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<A_Const>(create);
  static A_Const? _defaultInstance;

  A_Const_Val whichVal() => _A_Const_ValByTag[$_whichOneof(0)]!;
  void clearVal() => clearField($_whichOneof(0));

  @$pb.TagNumber(1)
  PgInteger get ival => $_getN(0);
  @$pb.TagNumber(1)
  set ival(PgInteger v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasIval() => $_has(0);
  @$pb.TagNumber(1)
  void clearIval() => clearField(1);
  @$pb.TagNumber(1)
  PgInteger ensureIval() => $_ensure(0);

  @$pb.TagNumber(2)
  PgFloat get fval => $_getN(1);
  @$pb.TagNumber(2)
  set fval(PgFloat v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasFval() => $_has(1);
  @$pb.TagNumber(2)
  void clearFval() => clearField(2);
  @$pb.TagNumber(2)
  PgFloat ensureFval() => $_ensure(1);

  @$pb.TagNumber(3)
  PgBoolean get boolval => $_getN(2);
  @$pb.TagNumber(3)
  set boolval(PgBoolean v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBoolval() => $_has(2);
  @$pb.TagNumber(3)
  void clearBoolval() => clearField(3);
  @$pb.TagNumber(3)
  PgBoolean ensureBoolval() => $_ensure(2);

  @$pb.TagNumber(4)
  PgString get sval => $_getN(3);
  @$pb.TagNumber(4)
  set sval(PgString v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasSval() => $_has(3);
  @$pb.TagNumber(4)
  void clearSval() => clearField(4);
  @$pb.TagNumber(4)
  PgString ensureSval() => $_ensure(3);

  @$pb.TagNumber(5)
  PgBitString get bsval => $_getN(4);
  @$pb.TagNumber(5)
  set bsval(PgBitString v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasBsval() => $_has(4);
  @$pb.TagNumber(5)
  void clearBsval() => clearField(5);
  @$pb.TagNumber(5)
  PgBitString ensureBsval() => $_ensure(4);

  @$pb.TagNumber(10)
  $core.bool get isnull => $_getBF(5);
  @$pb.TagNumber(10)
  set isnull($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(10)
  $core.bool hasIsnull() => $_has(5);
  @$pb.TagNumber(10)
  void clearIsnull() => clearField(10);

  @$pb.TagNumber(11)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(11)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(11)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(11)
  void clearLocation() => clearField(11);
}

class Alias extends $pb.GeneratedMessage {
  factory Alias({
    $core.String? aliasname,
    $core.Iterable<Node>? colnames,
  }) {
    final $result = create();
    if (aliasname != null) {
      $result.aliasname = aliasname;
    }
    if (colnames != null) {
      $result.colnames.addAll(colnames);
    }
    return $result;
  }
  Alias._() : super();
  factory Alias.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Alias.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Alias', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'aliasname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'colnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Alias clone() => Alias()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Alias copyWith(void Function(Alias) updates) => super.copyWith((message) => updates(message as Alias)) as Alias;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Alias create() => Alias._();
  Alias createEmptyInstance() => create();
  static $pb.PbList<Alias> createRepeated() => $pb.PbList<Alias>();
  @$core.pragma('dart2js:noInline')
  static Alias getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Alias>(create);
  static Alias? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get aliasname => $_getSZ(0);
  @$pb.TagNumber(1)
  set aliasname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasAliasname() => $_has(0);
  @$pb.TagNumber(1)
  void clearAliasname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get colnames => $_getList(1);
}

class RangeVar extends $pb.GeneratedMessage {
  factory RangeVar({
    $core.String? catalogname,
    $core.String? schemaname,
    $core.String? relname,
    $core.bool? inh,
    $core.String? relpersistence,
    Alias? alias,
    $core.int? location,
  }) {
    final $result = create();
    if (catalogname != null) {
      $result.catalogname = catalogname;
    }
    if (schemaname != null) {
      $result.schemaname = schemaname;
    }
    if (relname != null) {
      $result.relname = relname;
    }
    if (inh != null) {
      $result.inh = inh;
    }
    if (relpersistence != null) {
      $result.relpersistence = relpersistence;
    }
    if (alias != null) {
      $result.alias = alias;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  RangeVar._() : super();
  factory RangeVar.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeVar.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeVar', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'catalogname')
    ..aOS(2, _omitFieldNames ? '' : 'schemaname')
    ..aOS(3, _omitFieldNames ? '' : 'relname')
    ..aOB(4, _omitFieldNames ? '' : 'inh')
    ..aOS(5, _omitFieldNames ? '' : 'relpersistence')
    ..aOM<Alias>(6, _omitFieldNames ? '' : 'alias', subBuilder: Alias.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeVar clone() => RangeVar()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeVar copyWith(void Function(RangeVar) updates) => super.copyWith((message) => updates(message as RangeVar)) as RangeVar;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeVar create() => RangeVar._();
  RangeVar createEmptyInstance() => create();
  static $pb.PbList<RangeVar> createRepeated() => $pb.PbList<RangeVar>();
  @$core.pragma('dart2js:noInline')
  static RangeVar getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeVar>(create);
  static RangeVar? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get catalogname => $_getSZ(0);
  @$pb.TagNumber(1)
  set catalogname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasCatalogname() => $_has(0);
  @$pb.TagNumber(1)
  void clearCatalogname() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get schemaname => $_getSZ(1);
  @$pb.TagNumber(2)
  set schemaname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasSchemaname() => $_has(1);
  @$pb.TagNumber(2)
  void clearSchemaname() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get relname => $_getSZ(2);
  @$pb.TagNumber(3)
  set relname($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasRelname() => $_has(2);
  @$pb.TagNumber(3)
  void clearRelname() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get inh => $_getBF(3);
  @$pb.TagNumber(4)
  set inh($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasInh() => $_has(3);
  @$pb.TagNumber(4)
  void clearInh() => clearField(4);

  @$pb.TagNumber(5)
  $core.String get relpersistence => $_getSZ(4);
  @$pb.TagNumber(5)
  set relpersistence($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasRelpersistence() => $_has(4);
  @$pb.TagNumber(5)
  void clearRelpersistence() => clearField(5);

  @$pb.TagNumber(6)
  Alias get alias => $_getN(5);
  @$pb.TagNumber(6)
  set alias(Alias v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasAlias() => $_has(5);
  @$pb.TagNumber(6)
  void clearAlias() => clearField(6);
  @$pb.TagNumber(6)
  Alias ensureAlias() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class TableFunc extends $pb.GeneratedMessage {
  factory TableFunc({
    $core.Iterable<Node>? nsUris,
    $core.Iterable<Node>? nsNames,
    Node? docexpr,
    Node? rowexpr,
    $core.Iterable<Node>? colnames,
    $core.Iterable<Node>? coltypes,
    $core.Iterable<Node>? coltypmods,
    $core.Iterable<Node>? colcollations,
    $core.Iterable<Node>? colexprs,
    $core.Iterable<Node>? coldefexprs,
    $core.Iterable<$fixnum.Int64>? notnulls,
    $core.int? ordinalitycol,
    $core.int? location,
  }) {
    final $result = create();
    if (nsUris != null) {
      $result.nsUris.addAll(nsUris);
    }
    if (nsNames != null) {
      $result.nsNames.addAll(nsNames);
    }
    if (docexpr != null) {
      $result.docexpr = docexpr;
    }
    if (rowexpr != null) {
      $result.rowexpr = rowexpr;
    }
    if (colnames != null) {
      $result.colnames.addAll(colnames);
    }
    if (coltypes != null) {
      $result.coltypes.addAll(coltypes);
    }
    if (coltypmods != null) {
      $result.coltypmods.addAll(coltypmods);
    }
    if (colcollations != null) {
      $result.colcollations.addAll(colcollations);
    }
    if (colexprs != null) {
      $result.colexprs.addAll(colexprs);
    }
    if (coldefexprs != null) {
      $result.coldefexprs.addAll(coldefexprs);
    }
    if (notnulls != null) {
      $result.notnulls.addAll(notnulls);
    }
    if (ordinalitycol != null) {
      $result.ordinalitycol = ordinalitycol;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  TableFunc._() : super();
  factory TableFunc.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TableFunc.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TableFunc', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'ns_uris', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'ns_names', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'docexpr', subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'rowexpr', subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'colnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'coltypes', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(7, _omitFieldNames ? '' : 'coltypmods', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(8, _omitFieldNames ? '' : 'colcollations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(9, _omitFieldNames ? '' : 'colexprs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(10, _omitFieldNames ? '' : 'coldefexprs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..p<$fixnum.Int64>(11, _omitFieldNames ? '' : 'notnulls', $pb.PbFieldType.KU6)
    ..a<$core.int>(12, _omitFieldNames ? '' : 'ordinalitycol', $pb.PbFieldType.O3)
    ..a<$core.int>(13, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TableFunc clone() => TableFunc()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TableFunc copyWith(void Function(TableFunc) updates) => super.copyWith((message) => updates(message as TableFunc)) as TableFunc;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TableFunc create() => TableFunc._();
  TableFunc createEmptyInstance() => create();
  static $pb.PbList<TableFunc> createRepeated() => $pb.PbList<TableFunc>();
  @$core.pragma('dart2js:noInline')
  static TableFunc getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TableFunc>(create);
  static TableFunc? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get nsUris => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get nsNames => $_getList(1);

  @$pb.TagNumber(3)
  Node get docexpr => $_getN(2);
  @$pb.TagNumber(3)
  set docexpr(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasDocexpr() => $_has(2);
  @$pb.TagNumber(3)
  void clearDocexpr() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureDocexpr() => $_ensure(2);

  @$pb.TagNumber(4)
  Node get rowexpr => $_getN(3);
  @$pb.TagNumber(4)
  set rowexpr(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasRowexpr() => $_has(3);
  @$pb.TagNumber(4)
  void clearRowexpr() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureRowexpr() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get colnames => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get coltypes => $_getList(5);

  @$pb.TagNumber(7)
  $core.List<Node> get coltypmods => $_getList(6);

  @$pb.TagNumber(8)
  $core.List<Node> get colcollations => $_getList(7);

  @$pb.TagNumber(9)
  $core.List<Node> get colexprs => $_getList(8);

  @$pb.TagNumber(10)
  $core.List<Node> get coldefexprs => $_getList(9);

  @$pb.TagNumber(11)
  $core.List<$fixnum.Int64> get notnulls => $_getList(10);

  @$pb.TagNumber(12)
  $core.int get ordinalitycol => $_getIZ(11);
  @$pb.TagNumber(12)
  set ordinalitycol($core.int v) { $_setSignedInt32(11, v); }
  @$pb.TagNumber(12)
  $core.bool hasOrdinalitycol() => $_has(11);
  @$pb.TagNumber(12)
  void clearOrdinalitycol() => clearField(12);

  @$pb.TagNumber(13)
  $core.int get location => $_getIZ(12);
  @$pb.TagNumber(13)
  set location($core.int v) { $_setSignedInt32(12, v); }
  @$pb.TagNumber(13)
  $core.bool hasLocation() => $_has(12);
  @$pb.TagNumber(13)
  void clearLocation() => clearField(13);
}

class IntoClause extends $pb.GeneratedMessage {
  factory IntoClause({
    RangeVar? rel,
    $core.Iterable<Node>? colNames,
    $core.String? accessMethod,
    $core.Iterable<Node>? options,
    OnCommitAction? onCommit,
    $core.String? tableSpaceName,
    Node? viewQuery,
    $core.bool? skipData,
  }) {
    final $result = create();
    if (rel != null) {
      $result.rel = rel;
    }
    if (colNames != null) {
      $result.colNames.addAll(colNames);
    }
    if (accessMethod != null) {
      $result.accessMethod = accessMethod;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (onCommit != null) {
      $result.onCommit = onCommit;
    }
    if (tableSpaceName != null) {
      $result.tableSpaceName = tableSpaceName;
    }
    if (viewQuery != null) {
      $result.viewQuery = viewQuery;
    }
    if (skipData != null) {
      $result.skipData = skipData;
    }
    return $result;
  }
  IntoClause._() : super();
  factory IntoClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory IntoClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'IntoClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'rel', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'colNames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'accessMethod')
    ..pc<Node>(4, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<OnCommitAction>(5, _omitFieldNames ? '' : 'onCommit', $pb.PbFieldType.OE, defaultOrMaker: OnCommitAction.ON_COMMIT_ACTION_UNDEFINED, valueOf: OnCommitAction.valueOf, enumValues: OnCommitAction.values)
    ..aOS(6, _omitFieldNames ? '' : 'tableSpaceName')
    ..aOM<Node>(7, _omitFieldNames ? '' : 'viewQuery', subBuilder: Node.create)
    ..aOB(8, _omitFieldNames ? '' : 'skipData')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  IntoClause clone() => IntoClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  IntoClause copyWith(void Function(IntoClause) updates) => super.copyWith((message) => updates(message as IntoClause)) as IntoClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static IntoClause create() => IntoClause._();
  IntoClause createEmptyInstance() => create();
  static $pb.PbList<IntoClause> createRepeated() => $pb.PbList<IntoClause>();
  @$core.pragma('dart2js:noInline')
  static IntoClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<IntoClause>(create);
  static IntoClause? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get rel => $_getN(0);
  @$pb.TagNumber(1)
  set rel(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRel() => $_has(0);
  @$pb.TagNumber(1)
  void clearRel() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRel() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get colNames => $_getList(1);

  @$pb.TagNumber(3)
  $core.String get accessMethod => $_getSZ(2);
  @$pb.TagNumber(3)
  set accessMethod($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAccessMethod() => $_has(2);
  @$pb.TagNumber(3)
  void clearAccessMethod() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get options => $_getList(3);

  @$pb.TagNumber(5)
  OnCommitAction get onCommit => $_getN(4);
  @$pb.TagNumber(5)
  set onCommit(OnCommitAction v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasOnCommit() => $_has(4);
  @$pb.TagNumber(5)
  void clearOnCommit() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get tableSpaceName => $_getSZ(5);
  @$pb.TagNumber(6)
  set tableSpaceName($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasTableSpaceName() => $_has(5);
  @$pb.TagNumber(6)
  void clearTableSpaceName() => clearField(6);

  @$pb.TagNumber(7)
  Node get viewQuery => $_getN(6);
  @$pb.TagNumber(7)
  set viewQuery(Node v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasViewQuery() => $_has(6);
  @$pb.TagNumber(7)
  void clearViewQuery() => clearField(7);
  @$pb.TagNumber(7)
  Node ensureViewQuery() => $_ensure(6);

  @$pb.TagNumber(8)
  $core.bool get skipData => $_getBF(7);
  @$pb.TagNumber(8)
  set skipData($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasSkipData() => $_has(7);
  @$pb.TagNumber(8)
  void clearSkipData() => clearField(8);
}

class Var extends $pb.GeneratedMessage {
  factory Var({
    Node? xpr,
    $core.int? varno,
    $core.int? varattno,
    $core.int? vartype,
    $core.int? vartypmod,
    $core.int? varcollid,
    $core.Iterable<$fixnum.Int64>? varnullingrels,
    $core.int? varlevelsup,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (varno != null) {
      $result.varno = varno;
    }
    if (varattno != null) {
      $result.varattno = varattno;
    }
    if (vartype != null) {
      $result.vartype = vartype;
    }
    if (vartypmod != null) {
      $result.vartypmod = vartypmod;
    }
    if (varcollid != null) {
      $result.varcollid = varcollid;
    }
    if (varnullingrels != null) {
      $result.varnullingrels.addAll(varnullingrels);
    }
    if (varlevelsup != null) {
      $result.varlevelsup = varlevelsup;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  Var._() : super();
  factory Var.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Var.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Var', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'varno', $pb.PbFieldType.O3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'varattno', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'vartype', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'vartypmod', $pb.PbFieldType.O3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'varcollid', $pb.PbFieldType.OU3)
    ..p<$fixnum.Int64>(7, _omitFieldNames ? '' : 'varnullingrels', $pb.PbFieldType.KU6)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'varlevelsup', $pb.PbFieldType.OU3)
    ..a<$core.int>(9, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Var clone() => Var()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Var copyWith(void Function(Var) updates) => super.copyWith((message) => updates(message as Var)) as Var;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Var create() => Var._();
  Var createEmptyInstance() => create();
  static $pb.PbList<Var> createRepeated() => $pb.PbList<Var>();
  @$core.pragma('dart2js:noInline')
  static Var getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Var>(create);
  static Var? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get varno => $_getIZ(1);
  @$pb.TagNumber(2)
  set varno($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasVarno() => $_has(1);
  @$pb.TagNumber(2)
  void clearVarno() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get varattno => $_getIZ(2);
  @$pb.TagNumber(3)
  set varattno($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasVarattno() => $_has(2);
  @$pb.TagNumber(3)
  void clearVarattno() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get vartype => $_getIZ(3);
  @$pb.TagNumber(4)
  set vartype($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasVartype() => $_has(3);
  @$pb.TagNumber(4)
  void clearVartype() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get vartypmod => $_getIZ(4);
  @$pb.TagNumber(5)
  set vartypmod($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasVartypmod() => $_has(4);
  @$pb.TagNumber(5)
  void clearVartypmod() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get varcollid => $_getIZ(5);
  @$pb.TagNumber(6)
  set varcollid($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasVarcollid() => $_has(5);
  @$pb.TagNumber(6)
  void clearVarcollid() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<$fixnum.Int64> get varnullingrels => $_getList(6);

  @$pb.TagNumber(8)
  $core.int get varlevelsup => $_getIZ(7);
  @$pb.TagNumber(8)
  set varlevelsup($core.int v) { $_setUnsignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasVarlevelsup() => $_has(7);
  @$pb.TagNumber(8)
  void clearVarlevelsup() => clearField(8);

  @$pb.TagNumber(9)
  $core.int get location => $_getIZ(8);
  @$pb.TagNumber(9)
  set location($core.int v) { $_setSignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasLocation() => $_has(8);
  @$pb.TagNumber(9)
  void clearLocation() => clearField(9);
}

class Param extends $pb.GeneratedMessage {
  factory Param({
    Node? xpr,
    ParamKind? paramkind,
    $core.int? paramid,
    $core.int? paramtype,
    $core.int? paramtypmod,
    $core.int? paramcollid,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (paramkind != null) {
      $result.paramkind = paramkind;
    }
    if (paramid != null) {
      $result.paramid = paramid;
    }
    if (paramtype != null) {
      $result.paramtype = paramtype;
    }
    if (paramtypmod != null) {
      $result.paramtypmod = paramtypmod;
    }
    if (paramcollid != null) {
      $result.paramcollid = paramcollid;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  Param._() : super();
  factory Param.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Param.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Param', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..e<ParamKind>(2, _omitFieldNames ? '' : 'paramkind', $pb.PbFieldType.OE, defaultOrMaker: ParamKind.PARAM_KIND_UNDEFINED, valueOf: ParamKind.valueOf, enumValues: ParamKind.values)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'paramid', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'paramtype', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'paramtypmod', $pb.PbFieldType.O3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'paramcollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Param clone() => Param()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Param copyWith(void Function(Param) updates) => super.copyWith((message) => updates(message as Param)) as Param;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Param create() => Param._();
  Param createEmptyInstance() => create();
  static $pb.PbList<Param> createRepeated() => $pb.PbList<Param>();
  @$core.pragma('dart2js:noInline')
  static Param getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Param>(create);
  static Param? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  ParamKind get paramkind => $_getN(1);
  @$pb.TagNumber(2)
  set paramkind(ParamKind v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasParamkind() => $_has(1);
  @$pb.TagNumber(2)
  void clearParamkind() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get paramid => $_getIZ(2);
  @$pb.TagNumber(3)
  set paramid($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasParamid() => $_has(2);
  @$pb.TagNumber(3)
  void clearParamid() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get paramtype => $_getIZ(3);
  @$pb.TagNumber(4)
  set paramtype($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasParamtype() => $_has(3);
  @$pb.TagNumber(4)
  void clearParamtype() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get paramtypmod => $_getIZ(4);
  @$pb.TagNumber(5)
  set paramtypmod($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasParamtypmod() => $_has(4);
  @$pb.TagNumber(5)
  void clearParamtypmod() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get paramcollid => $_getIZ(5);
  @$pb.TagNumber(6)
  set paramcollid($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasParamcollid() => $_has(5);
  @$pb.TagNumber(6)
  void clearParamcollid() => clearField(6);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class Aggref extends $pb.GeneratedMessage {
  factory Aggref({
    Node? xpr,
    $core.int? aggfnoid,
    $core.int? aggtype,
    $core.int? aggcollid,
    $core.int? inputcollid,
    $core.Iterable<Node>? aggargtypes,
    $core.Iterable<Node>? aggdirectargs,
    $core.Iterable<Node>? args,
    $core.Iterable<Node>? aggorder,
    $core.Iterable<Node>? aggdistinct,
    Node? aggfilter,
    $core.bool? aggstar,
    $core.bool? aggvariadic,
    $core.String? aggkind,
    $core.int? agglevelsup,
    AggSplit? aggsplit,
    $core.int? aggno,
    $core.int? aggtransno,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (aggfnoid != null) {
      $result.aggfnoid = aggfnoid;
    }
    if (aggtype != null) {
      $result.aggtype = aggtype;
    }
    if (aggcollid != null) {
      $result.aggcollid = aggcollid;
    }
    if (inputcollid != null) {
      $result.inputcollid = inputcollid;
    }
    if (aggargtypes != null) {
      $result.aggargtypes.addAll(aggargtypes);
    }
    if (aggdirectargs != null) {
      $result.aggdirectargs.addAll(aggdirectargs);
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (aggorder != null) {
      $result.aggorder.addAll(aggorder);
    }
    if (aggdistinct != null) {
      $result.aggdistinct.addAll(aggdistinct);
    }
    if (aggfilter != null) {
      $result.aggfilter = aggfilter;
    }
    if (aggstar != null) {
      $result.aggstar = aggstar;
    }
    if (aggvariadic != null) {
      $result.aggvariadic = aggvariadic;
    }
    if (aggkind != null) {
      $result.aggkind = aggkind;
    }
    if (agglevelsup != null) {
      $result.agglevelsup = agglevelsup;
    }
    if (aggsplit != null) {
      $result.aggsplit = aggsplit;
    }
    if (aggno != null) {
      $result.aggno = aggno;
    }
    if (aggtransno != null) {
      $result.aggtransno = aggtransno;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  Aggref._() : super();
  factory Aggref.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Aggref.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Aggref', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'aggfnoid', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'aggtype', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'aggcollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'inputcollid', $pb.PbFieldType.OU3)
    ..pc<Node>(6, _omitFieldNames ? '' : 'aggargtypes', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(7, _omitFieldNames ? '' : 'aggdirectargs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(8, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(9, _omitFieldNames ? '' : 'aggorder', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(10, _omitFieldNames ? '' : 'aggdistinct', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(11, _omitFieldNames ? '' : 'aggfilter', subBuilder: Node.create)
    ..aOB(12, _omitFieldNames ? '' : 'aggstar')
    ..aOB(13, _omitFieldNames ? '' : 'aggvariadic')
    ..aOS(14, _omitFieldNames ? '' : 'aggkind')
    ..a<$core.int>(15, _omitFieldNames ? '' : 'agglevelsup', $pb.PbFieldType.OU3)
    ..e<AggSplit>(16, _omitFieldNames ? '' : 'aggsplit', $pb.PbFieldType.OE, defaultOrMaker: AggSplit.AGG_SPLIT_UNDEFINED, valueOf: AggSplit.valueOf, enumValues: AggSplit.values)
    ..a<$core.int>(17, _omitFieldNames ? '' : 'aggno', $pb.PbFieldType.O3)
    ..a<$core.int>(18, _omitFieldNames ? '' : 'aggtransno', $pb.PbFieldType.O3)
    ..a<$core.int>(19, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Aggref clone() => Aggref()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Aggref copyWith(void Function(Aggref) updates) => super.copyWith((message) => updates(message as Aggref)) as Aggref;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Aggref create() => Aggref._();
  Aggref createEmptyInstance() => create();
  static $pb.PbList<Aggref> createRepeated() => $pb.PbList<Aggref>();
  @$core.pragma('dart2js:noInline')
  static Aggref getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Aggref>(create);
  static Aggref? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get aggfnoid => $_getIZ(1);
  @$pb.TagNumber(2)
  set aggfnoid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasAggfnoid() => $_has(1);
  @$pb.TagNumber(2)
  void clearAggfnoid() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get aggtype => $_getIZ(2);
  @$pb.TagNumber(3)
  set aggtype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAggtype() => $_has(2);
  @$pb.TagNumber(3)
  void clearAggtype() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get aggcollid => $_getIZ(3);
  @$pb.TagNumber(4)
  set aggcollid($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasAggcollid() => $_has(3);
  @$pb.TagNumber(4)
  void clearAggcollid() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get inputcollid => $_getIZ(4);
  @$pb.TagNumber(5)
  set inputcollid($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasInputcollid() => $_has(4);
  @$pb.TagNumber(5)
  void clearInputcollid() => clearField(5);

  @$pb.TagNumber(6)
  $core.List<Node> get aggargtypes => $_getList(5);

  @$pb.TagNumber(7)
  $core.List<Node> get aggdirectargs => $_getList(6);

  @$pb.TagNumber(8)
  $core.List<Node> get args => $_getList(7);

  @$pb.TagNumber(9)
  $core.List<Node> get aggorder => $_getList(8);

  @$pb.TagNumber(10)
  $core.List<Node> get aggdistinct => $_getList(9);

  @$pb.TagNumber(11)
  Node get aggfilter => $_getN(10);
  @$pb.TagNumber(11)
  set aggfilter(Node v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasAggfilter() => $_has(10);
  @$pb.TagNumber(11)
  void clearAggfilter() => clearField(11);
  @$pb.TagNumber(11)
  Node ensureAggfilter() => $_ensure(10);

  @$pb.TagNumber(12)
  $core.bool get aggstar => $_getBF(11);
  @$pb.TagNumber(12)
  set aggstar($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(12)
  $core.bool hasAggstar() => $_has(11);
  @$pb.TagNumber(12)
  void clearAggstar() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get aggvariadic => $_getBF(12);
  @$pb.TagNumber(13)
  set aggvariadic($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(13)
  $core.bool hasAggvariadic() => $_has(12);
  @$pb.TagNumber(13)
  void clearAggvariadic() => clearField(13);

  @$pb.TagNumber(14)
  $core.String get aggkind => $_getSZ(13);
  @$pb.TagNumber(14)
  set aggkind($core.String v) { $_setString(13, v); }
  @$pb.TagNumber(14)
  $core.bool hasAggkind() => $_has(13);
  @$pb.TagNumber(14)
  void clearAggkind() => clearField(14);

  @$pb.TagNumber(15)
  $core.int get agglevelsup => $_getIZ(14);
  @$pb.TagNumber(15)
  set agglevelsup($core.int v) { $_setUnsignedInt32(14, v); }
  @$pb.TagNumber(15)
  $core.bool hasAgglevelsup() => $_has(14);
  @$pb.TagNumber(15)
  void clearAgglevelsup() => clearField(15);

  @$pb.TagNumber(16)
  AggSplit get aggsplit => $_getN(15);
  @$pb.TagNumber(16)
  set aggsplit(AggSplit v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasAggsplit() => $_has(15);
  @$pb.TagNumber(16)
  void clearAggsplit() => clearField(16);

  @$pb.TagNumber(17)
  $core.int get aggno => $_getIZ(16);
  @$pb.TagNumber(17)
  set aggno($core.int v) { $_setSignedInt32(16, v); }
  @$pb.TagNumber(17)
  $core.bool hasAggno() => $_has(16);
  @$pb.TagNumber(17)
  void clearAggno() => clearField(17);

  @$pb.TagNumber(18)
  $core.int get aggtransno => $_getIZ(17);
  @$pb.TagNumber(18)
  set aggtransno($core.int v) { $_setSignedInt32(17, v); }
  @$pb.TagNumber(18)
  $core.bool hasAggtransno() => $_has(17);
  @$pb.TagNumber(18)
  void clearAggtransno() => clearField(18);

  @$pb.TagNumber(19)
  $core.int get location => $_getIZ(18);
  @$pb.TagNumber(19)
  set location($core.int v) { $_setSignedInt32(18, v); }
  @$pb.TagNumber(19)
  $core.bool hasLocation() => $_has(18);
  @$pb.TagNumber(19)
  void clearLocation() => clearField(19);
}

class GroupingFunc extends $pb.GeneratedMessage {
  factory GroupingFunc({
    Node? xpr,
    $core.Iterable<Node>? args,
    $core.Iterable<Node>? refs,
    $core.int? agglevelsup,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (refs != null) {
      $result.refs.addAll(refs);
    }
    if (agglevelsup != null) {
      $result.agglevelsup = agglevelsup;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  GroupingFunc._() : super();
  factory GroupingFunc.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory GroupingFunc.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'GroupingFunc', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'refs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'agglevelsup', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  GroupingFunc clone() => GroupingFunc()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  GroupingFunc copyWith(void Function(GroupingFunc) updates) => super.copyWith((message) => updates(message as GroupingFunc)) as GroupingFunc;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static GroupingFunc create() => GroupingFunc._();
  GroupingFunc createEmptyInstance() => create();
  static $pb.PbList<GroupingFunc> createRepeated() => $pb.PbList<GroupingFunc>();
  @$core.pragma('dart2js:noInline')
  static GroupingFunc getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<GroupingFunc>(create);
  static GroupingFunc? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get args => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get refs => $_getList(2);

  @$pb.TagNumber(4)
  $core.int get agglevelsup => $_getIZ(3);
  @$pb.TagNumber(4)
  set agglevelsup($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasAgglevelsup() => $_has(3);
  @$pb.TagNumber(4)
  void clearAgglevelsup() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class WindowFunc extends $pb.GeneratedMessage {
  factory WindowFunc({
    Node? xpr,
    $core.int? winfnoid,
    $core.int? wintype,
    $core.int? wincollid,
    $core.int? inputcollid,
    $core.Iterable<Node>? args,
    Node? aggfilter,
    $core.int? winref,
    $core.bool? winstar,
    $core.bool? winagg,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (winfnoid != null) {
      $result.winfnoid = winfnoid;
    }
    if (wintype != null) {
      $result.wintype = wintype;
    }
    if (wincollid != null) {
      $result.wincollid = wincollid;
    }
    if (inputcollid != null) {
      $result.inputcollid = inputcollid;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (aggfilter != null) {
      $result.aggfilter = aggfilter;
    }
    if (winref != null) {
      $result.winref = winref;
    }
    if (winstar != null) {
      $result.winstar = winstar;
    }
    if (winagg != null) {
      $result.winagg = winagg;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  WindowFunc._() : super();
  factory WindowFunc.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory WindowFunc.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'WindowFunc', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'winfnoid', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'wintype', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'wincollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'inputcollid', $pb.PbFieldType.OU3)
    ..pc<Node>(6, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(7, _omitFieldNames ? '' : 'aggfilter', subBuilder: Node.create)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'winref', $pb.PbFieldType.OU3)
    ..aOB(9, _omitFieldNames ? '' : 'winstar')
    ..aOB(10, _omitFieldNames ? '' : 'winagg')
    ..a<$core.int>(11, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  WindowFunc clone() => WindowFunc()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  WindowFunc copyWith(void Function(WindowFunc) updates) => super.copyWith((message) => updates(message as WindowFunc)) as WindowFunc;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static WindowFunc create() => WindowFunc._();
  WindowFunc createEmptyInstance() => create();
  static $pb.PbList<WindowFunc> createRepeated() => $pb.PbList<WindowFunc>();
  @$core.pragma('dart2js:noInline')
  static WindowFunc getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<WindowFunc>(create);
  static WindowFunc? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get winfnoid => $_getIZ(1);
  @$pb.TagNumber(2)
  set winfnoid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasWinfnoid() => $_has(1);
  @$pb.TagNumber(2)
  void clearWinfnoid() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get wintype => $_getIZ(2);
  @$pb.TagNumber(3)
  set wintype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasWintype() => $_has(2);
  @$pb.TagNumber(3)
  void clearWintype() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get wincollid => $_getIZ(3);
  @$pb.TagNumber(4)
  set wincollid($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasWincollid() => $_has(3);
  @$pb.TagNumber(4)
  void clearWincollid() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get inputcollid => $_getIZ(4);
  @$pb.TagNumber(5)
  set inputcollid($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasInputcollid() => $_has(4);
  @$pb.TagNumber(5)
  void clearInputcollid() => clearField(5);

  @$pb.TagNumber(6)
  $core.List<Node> get args => $_getList(5);

  @$pb.TagNumber(7)
  Node get aggfilter => $_getN(6);
  @$pb.TagNumber(7)
  set aggfilter(Node v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasAggfilter() => $_has(6);
  @$pb.TagNumber(7)
  void clearAggfilter() => clearField(7);
  @$pb.TagNumber(7)
  Node ensureAggfilter() => $_ensure(6);

  @$pb.TagNumber(8)
  $core.int get winref => $_getIZ(7);
  @$pb.TagNumber(8)
  set winref($core.int v) { $_setUnsignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasWinref() => $_has(7);
  @$pb.TagNumber(8)
  void clearWinref() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get winstar => $_getBF(8);
  @$pb.TagNumber(9)
  set winstar($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasWinstar() => $_has(8);
  @$pb.TagNumber(9)
  void clearWinstar() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get winagg => $_getBF(9);
  @$pb.TagNumber(10)
  set winagg($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasWinagg() => $_has(9);
  @$pb.TagNumber(10)
  void clearWinagg() => clearField(10);

  @$pb.TagNumber(11)
  $core.int get location => $_getIZ(10);
  @$pb.TagNumber(11)
  set location($core.int v) { $_setSignedInt32(10, v); }
  @$pb.TagNumber(11)
  $core.bool hasLocation() => $_has(10);
  @$pb.TagNumber(11)
  void clearLocation() => clearField(11);
}

class SubscriptingRef extends $pb.GeneratedMessage {
  factory SubscriptingRef({
    Node? xpr,
    $core.int? refcontainertype,
    $core.int? refelemtype,
    $core.int? refrestype,
    $core.int? reftypmod,
    $core.int? refcollid,
    $core.Iterable<Node>? refupperindexpr,
    $core.Iterable<Node>? reflowerindexpr,
    Node? refexpr,
    Node? refassgnexpr,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (refcontainertype != null) {
      $result.refcontainertype = refcontainertype;
    }
    if (refelemtype != null) {
      $result.refelemtype = refelemtype;
    }
    if (refrestype != null) {
      $result.refrestype = refrestype;
    }
    if (reftypmod != null) {
      $result.reftypmod = reftypmod;
    }
    if (refcollid != null) {
      $result.refcollid = refcollid;
    }
    if (refupperindexpr != null) {
      $result.refupperindexpr.addAll(refupperindexpr);
    }
    if (reflowerindexpr != null) {
      $result.reflowerindexpr.addAll(reflowerindexpr);
    }
    if (refexpr != null) {
      $result.refexpr = refexpr;
    }
    if (refassgnexpr != null) {
      $result.refassgnexpr = refassgnexpr;
    }
    return $result;
  }
  SubscriptingRef._() : super();
  factory SubscriptingRef.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SubscriptingRef.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SubscriptingRef', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'refcontainertype', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'refelemtype', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'refrestype', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'reftypmod', $pb.PbFieldType.O3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'refcollid', $pb.PbFieldType.OU3)
    ..pc<Node>(7, _omitFieldNames ? '' : 'refupperindexpr', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(8, _omitFieldNames ? '' : 'reflowerindexpr', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(9, _omitFieldNames ? '' : 'refexpr', subBuilder: Node.create)
    ..aOM<Node>(10, _omitFieldNames ? '' : 'refassgnexpr', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SubscriptingRef clone() => SubscriptingRef()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SubscriptingRef copyWith(void Function(SubscriptingRef) updates) => super.copyWith((message) => updates(message as SubscriptingRef)) as SubscriptingRef;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SubscriptingRef create() => SubscriptingRef._();
  SubscriptingRef createEmptyInstance() => create();
  static $pb.PbList<SubscriptingRef> createRepeated() => $pb.PbList<SubscriptingRef>();
  @$core.pragma('dart2js:noInline')
  static SubscriptingRef getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SubscriptingRef>(create);
  static SubscriptingRef? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get refcontainertype => $_getIZ(1);
  @$pb.TagNumber(2)
  set refcontainertype($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRefcontainertype() => $_has(1);
  @$pb.TagNumber(2)
  void clearRefcontainertype() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get refelemtype => $_getIZ(2);
  @$pb.TagNumber(3)
  set refelemtype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasRefelemtype() => $_has(2);
  @$pb.TagNumber(3)
  void clearRefelemtype() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get refrestype => $_getIZ(3);
  @$pb.TagNumber(4)
  set refrestype($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasRefrestype() => $_has(3);
  @$pb.TagNumber(4)
  void clearRefrestype() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get reftypmod => $_getIZ(4);
  @$pb.TagNumber(5)
  set reftypmod($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasReftypmod() => $_has(4);
  @$pb.TagNumber(5)
  void clearReftypmod() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get refcollid => $_getIZ(5);
  @$pb.TagNumber(6)
  set refcollid($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasRefcollid() => $_has(5);
  @$pb.TagNumber(6)
  void clearRefcollid() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<Node> get refupperindexpr => $_getList(6);

  @$pb.TagNumber(8)
  $core.List<Node> get reflowerindexpr => $_getList(7);

  @$pb.TagNumber(9)
  Node get refexpr => $_getN(8);
  @$pb.TagNumber(9)
  set refexpr(Node v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasRefexpr() => $_has(8);
  @$pb.TagNumber(9)
  void clearRefexpr() => clearField(9);
  @$pb.TagNumber(9)
  Node ensureRefexpr() => $_ensure(8);

  @$pb.TagNumber(10)
  Node get refassgnexpr => $_getN(9);
  @$pb.TagNumber(10)
  set refassgnexpr(Node v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasRefassgnexpr() => $_has(9);
  @$pb.TagNumber(10)
  void clearRefassgnexpr() => clearField(10);
  @$pb.TagNumber(10)
  Node ensureRefassgnexpr() => $_ensure(9);
}

class FuncExpr extends $pb.GeneratedMessage {
  factory FuncExpr({
    Node? xpr,
    $core.int? funcid,
    $core.int? funcresulttype,
    $core.bool? funcretset,
    $core.bool? funcvariadic,
    CoercionForm? funcformat,
    $core.int? funccollid,
    $core.int? inputcollid,
    $core.Iterable<Node>? args,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (funcid != null) {
      $result.funcid = funcid;
    }
    if (funcresulttype != null) {
      $result.funcresulttype = funcresulttype;
    }
    if (funcretset != null) {
      $result.funcretset = funcretset;
    }
    if (funcvariadic != null) {
      $result.funcvariadic = funcvariadic;
    }
    if (funcformat != null) {
      $result.funcformat = funcformat;
    }
    if (funccollid != null) {
      $result.funccollid = funccollid;
    }
    if (inputcollid != null) {
      $result.inputcollid = inputcollid;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  FuncExpr._() : super();
  factory FuncExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FuncExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FuncExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'funcid', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'funcresulttype', $pb.PbFieldType.OU3)
    ..aOB(4, _omitFieldNames ? '' : 'funcretset')
    ..aOB(5, _omitFieldNames ? '' : 'funcvariadic')
    ..e<CoercionForm>(6, _omitFieldNames ? '' : 'funcformat', $pb.PbFieldType.OE, defaultOrMaker: CoercionForm.COERCION_FORM_UNDEFINED, valueOf: CoercionForm.valueOf, enumValues: CoercionForm.values)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'funccollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'inputcollid', $pb.PbFieldType.OU3)
    ..pc<Node>(9, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FuncExpr clone() => FuncExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FuncExpr copyWith(void Function(FuncExpr) updates) => super.copyWith((message) => updates(message as FuncExpr)) as FuncExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FuncExpr create() => FuncExpr._();
  FuncExpr createEmptyInstance() => create();
  static $pb.PbList<FuncExpr> createRepeated() => $pb.PbList<FuncExpr>();
  @$core.pragma('dart2js:noInline')
  static FuncExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FuncExpr>(create);
  static FuncExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get funcid => $_getIZ(1);
  @$pb.TagNumber(2)
  set funcid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasFuncid() => $_has(1);
  @$pb.TagNumber(2)
  void clearFuncid() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get funcresulttype => $_getIZ(2);
  @$pb.TagNumber(3)
  set funcresulttype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasFuncresulttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearFuncresulttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get funcretset => $_getBF(3);
  @$pb.TagNumber(4)
  set funcretset($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasFuncretset() => $_has(3);
  @$pb.TagNumber(4)
  void clearFuncretset() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get funcvariadic => $_getBF(4);
  @$pb.TagNumber(5)
  set funcvariadic($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasFuncvariadic() => $_has(4);
  @$pb.TagNumber(5)
  void clearFuncvariadic() => clearField(5);

  @$pb.TagNumber(6)
  CoercionForm get funcformat => $_getN(5);
  @$pb.TagNumber(6)
  set funcformat(CoercionForm v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasFuncformat() => $_has(5);
  @$pb.TagNumber(6)
  void clearFuncformat() => clearField(6);

  @$pb.TagNumber(7)
  $core.int get funccollid => $_getIZ(6);
  @$pb.TagNumber(7)
  set funccollid($core.int v) { $_setUnsignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasFunccollid() => $_has(6);
  @$pb.TagNumber(7)
  void clearFunccollid() => clearField(7);

  @$pb.TagNumber(8)
  $core.int get inputcollid => $_getIZ(7);
  @$pb.TagNumber(8)
  set inputcollid($core.int v) { $_setUnsignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasInputcollid() => $_has(7);
  @$pb.TagNumber(8)
  void clearInputcollid() => clearField(8);

  @$pb.TagNumber(9)
  $core.List<Node> get args => $_getList(8);

  @$pb.TagNumber(10)
  $core.int get location => $_getIZ(9);
  @$pb.TagNumber(10)
  set location($core.int v) { $_setSignedInt32(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasLocation() => $_has(9);
  @$pb.TagNumber(10)
  void clearLocation() => clearField(10);
}

class NamedArgExpr extends $pb.GeneratedMessage {
  factory NamedArgExpr({
    Node? xpr,
    Node? arg,
    $core.String? name,
    $core.int? argnumber,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (name != null) {
      $result.name = name;
    }
    if (argnumber != null) {
      $result.argnumber = argnumber;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  NamedArgExpr._() : super();
  factory NamedArgExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory NamedArgExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'NamedArgExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'name')
    ..a<$core.int>(4, _omitFieldNames ? '' : 'argnumber', $pb.PbFieldType.O3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  NamedArgExpr clone() => NamedArgExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  NamedArgExpr copyWith(void Function(NamedArgExpr) updates) => super.copyWith((message) => updates(message as NamedArgExpr)) as NamedArgExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static NamedArgExpr create() => NamedArgExpr._();
  NamedArgExpr createEmptyInstance() => create();
  static $pb.PbList<NamedArgExpr> createRepeated() => $pb.PbList<NamedArgExpr>();
  @$core.pragma('dart2js:noInline')
  static NamedArgExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<NamedArgExpr>(create);
  static NamedArgExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get name => $_getSZ(2);
  @$pb.TagNumber(3)
  set name($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasName() => $_has(2);
  @$pb.TagNumber(3)
  void clearName() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get argnumber => $_getIZ(3);
  @$pb.TagNumber(4)
  set argnumber($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasArgnumber() => $_has(3);
  @$pb.TagNumber(4)
  void clearArgnumber() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class OpExpr extends $pb.GeneratedMessage {
  factory OpExpr({
    Node? xpr,
    $core.int? opno,
    $core.int? opresulttype,
    $core.bool? opretset,
    $core.int? opcollid,
    $core.int? inputcollid,
    $core.Iterable<Node>? args,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (opno != null) {
      $result.opno = opno;
    }
    if (opresulttype != null) {
      $result.opresulttype = opresulttype;
    }
    if (opretset != null) {
      $result.opretset = opretset;
    }
    if (opcollid != null) {
      $result.opcollid = opcollid;
    }
    if (inputcollid != null) {
      $result.inputcollid = inputcollid;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  OpExpr._() : super();
  factory OpExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory OpExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'OpExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'opno', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'opresulttype', $pb.PbFieldType.OU3)
    ..aOB(4, _omitFieldNames ? '' : 'opretset')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'opcollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'inputcollid', $pb.PbFieldType.OU3)
    ..pc<Node>(7, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  OpExpr clone() => OpExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  OpExpr copyWith(void Function(OpExpr) updates) => super.copyWith((message) => updates(message as OpExpr)) as OpExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static OpExpr create() => OpExpr._();
  OpExpr createEmptyInstance() => create();
  static $pb.PbList<OpExpr> createRepeated() => $pb.PbList<OpExpr>();
  @$core.pragma('dart2js:noInline')
  static OpExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<OpExpr>(create);
  static OpExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get opno => $_getIZ(1);
  @$pb.TagNumber(2)
  set opno($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOpno() => $_has(1);
  @$pb.TagNumber(2)
  void clearOpno() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get opresulttype => $_getIZ(2);
  @$pb.TagNumber(3)
  set opresulttype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasOpresulttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearOpresulttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get opretset => $_getBF(3);
  @$pb.TagNumber(4)
  set opretset($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasOpretset() => $_has(3);
  @$pb.TagNumber(4)
  void clearOpretset() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get opcollid => $_getIZ(4);
  @$pb.TagNumber(5)
  set opcollid($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasOpcollid() => $_has(4);
  @$pb.TagNumber(5)
  void clearOpcollid() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get inputcollid => $_getIZ(5);
  @$pb.TagNumber(6)
  set inputcollid($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasInputcollid() => $_has(5);
  @$pb.TagNumber(6)
  void clearInputcollid() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<Node> get args => $_getList(6);

  @$pb.TagNumber(8)
  $core.int get location => $_getIZ(7);
  @$pb.TagNumber(8)
  set location($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasLocation() => $_has(7);
  @$pb.TagNumber(8)
  void clearLocation() => clearField(8);
}

class DistinctExpr extends $pb.GeneratedMessage {
  factory DistinctExpr({
    Node? xpr,
    $core.int? opno,
    $core.int? opresulttype,
    $core.bool? opretset,
    $core.int? opcollid,
    $core.int? inputcollid,
    $core.Iterable<Node>? args,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (opno != null) {
      $result.opno = opno;
    }
    if (opresulttype != null) {
      $result.opresulttype = opresulttype;
    }
    if (opretset != null) {
      $result.opretset = opretset;
    }
    if (opcollid != null) {
      $result.opcollid = opcollid;
    }
    if (inputcollid != null) {
      $result.inputcollid = inputcollid;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  DistinctExpr._() : super();
  factory DistinctExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DistinctExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DistinctExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'opno', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'opresulttype', $pb.PbFieldType.OU3)
    ..aOB(4, _omitFieldNames ? '' : 'opretset')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'opcollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'inputcollid', $pb.PbFieldType.OU3)
    ..pc<Node>(7, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DistinctExpr clone() => DistinctExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DistinctExpr copyWith(void Function(DistinctExpr) updates) => super.copyWith((message) => updates(message as DistinctExpr)) as DistinctExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DistinctExpr create() => DistinctExpr._();
  DistinctExpr createEmptyInstance() => create();
  static $pb.PbList<DistinctExpr> createRepeated() => $pb.PbList<DistinctExpr>();
  @$core.pragma('dart2js:noInline')
  static DistinctExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DistinctExpr>(create);
  static DistinctExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get opno => $_getIZ(1);
  @$pb.TagNumber(2)
  set opno($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOpno() => $_has(1);
  @$pb.TagNumber(2)
  void clearOpno() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get opresulttype => $_getIZ(2);
  @$pb.TagNumber(3)
  set opresulttype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasOpresulttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearOpresulttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get opretset => $_getBF(3);
  @$pb.TagNumber(4)
  set opretset($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasOpretset() => $_has(3);
  @$pb.TagNumber(4)
  void clearOpretset() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get opcollid => $_getIZ(4);
  @$pb.TagNumber(5)
  set opcollid($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasOpcollid() => $_has(4);
  @$pb.TagNumber(5)
  void clearOpcollid() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get inputcollid => $_getIZ(5);
  @$pb.TagNumber(6)
  set inputcollid($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasInputcollid() => $_has(5);
  @$pb.TagNumber(6)
  void clearInputcollid() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<Node> get args => $_getList(6);

  @$pb.TagNumber(8)
  $core.int get location => $_getIZ(7);
  @$pb.TagNumber(8)
  set location($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasLocation() => $_has(7);
  @$pb.TagNumber(8)
  void clearLocation() => clearField(8);
}

class NullIfExpr extends $pb.GeneratedMessage {
  factory NullIfExpr({
    Node? xpr,
    $core.int? opno,
    $core.int? opresulttype,
    $core.bool? opretset,
    $core.int? opcollid,
    $core.int? inputcollid,
    $core.Iterable<Node>? args,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (opno != null) {
      $result.opno = opno;
    }
    if (opresulttype != null) {
      $result.opresulttype = opresulttype;
    }
    if (opretset != null) {
      $result.opretset = opretset;
    }
    if (opcollid != null) {
      $result.opcollid = opcollid;
    }
    if (inputcollid != null) {
      $result.inputcollid = inputcollid;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  NullIfExpr._() : super();
  factory NullIfExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory NullIfExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'NullIfExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'opno', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'opresulttype', $pb.PbFieldType.OU3)
    ..aOB(4, _omitFieldNames ? '' : 'opretset')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'opcollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'inputcollid', $pb.PbFieldType.OU3)
    ..pc<Node>(7, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  NullIfExpr clone() => NullIfExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  NullIfExpr copyWith(void Function(NullIfExpr) updates) => super.copyWith((message) => updates(message as NullIfExpr)) as NullIfExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static NullIfExpr create() => NullIfExpr._();
  NullIfExpr createEmptyInstance() => create();
  static $pb.PbList<NullIfExpr> createRepeated() => $pb.PbList<NullIfExpr>();
  @$core.pragma('dart2js:noInline')
  static NullIfExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<NullIfExpr>(create);
  static NullIfExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get opno => $_getIZ(1);
  @$pb.TagNumber(2)
  set opno($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOpno() => $_has(1);
  @$pb.TagNumber(2)
  void clearOpno() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get opresulttype => $_getIZ(2);
  @$pb.TagNumber(3)
  set opresulttype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasOpresulttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearOpresulttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get opretset => $_getBF(3);
  @$pb.TagNumber(4)
  set opretset($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasOpretset() => $_has(3);
  @$pb.TagNumber(4)
  void clearOpretset() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get opcollid => $_getIZ(4);
  @$pb.TagNumber(5)
  set opcollid($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasOpcollid() => $_has(4);
  @$pb.TagNumber(5)
  void clearOpcollid() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get inputcollid => $_getIZ(5);
  @$pb.TagNumber(6)
  set inputcollid($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasInputcollid() => $_has(5);
  @$pb.TagNumber(6)
  void clearInputcollid() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<Node> get args => $_getList(6);

  @$pb.TagNumber(8)
  $core.int get location => $_getIZ(7);
  @$pb.TagNumber(8)
  set location($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasLocation() => $_has(7);
  @$pb.TagNumber(8)
  void clearLocation() => clearField(8);
}

class ScalarArrayOpExpr extends $pb.GeneratedMessage {
  factory ScalarArrayOpExpr({
    Node? xpr,
    $core.int? opno,
    $core.bool? useOr,
    $core.int? inputcollid,
    $core.Iterable<Node>? args,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (opno != null) {
      $result.opno = opno;
    }
    if (useOr != null) {
      $result.useOr = useOr;
    }
    if (inputcollid != null) {
      $result.inputcollid = inputcollid;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  ScalarArrayOpExpr._() : super();
  factory ScalarArrayOpExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ScalarArrayOpExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ScalarArrayOpExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'opno', $pb.PbFieldType.OU3)
    ..aOB(3, _omitFieldNames ? '' : 'useOr')
    ..a<$core.int>(4, _omitFieldNames ? '' : 'inputcollid', $pb.PbFieldType.OU3)
    ..pc<Node>(5, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ScalarArrayOpExpr clone() => ScalarArrayOpExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ScalarArrayOpExpr copyWith(void Function(ScalarArrayOpExpr) updates) => super.copyWith((message) => updates(message as ScalarArrayOpExpr)) as ScalarArrayOpExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ScalarArrayOpExpr create() => ScalarArrayOpExpr._();
  ScalarArrayOpExpr createEmptyInstance() => create();
  static $pb.PbList<ScalarArrayOpExpr> createRepeated() => $pb.PbList<ScalarArrayOpExpr>();
  @$core.pragma('dart2js:noInline')
  static ScalarArrayOpExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ScalarArrayOpExpr>(create);
  static ScalarArrayOpExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get opno => $_getIZ(1);
  @$pb.TagNumber(2)
  set opno($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOpno() => $_has(1);
  @$pb.TagNumber(2)
  void clearOpno() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get useOr => $_getBF(2);
  @$pb.TagNumber(3)
  set useOr($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasUseOr() => $_has(2);
  @$pb.TagNumber(3)
  void clearUseOr() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get inputcollid => $_getIZ(3);
  @$pb.TagNumber(4)
  set inputcollid($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasInputcollid() => $_has(3);
  @$pb.TagNumber(4)
  void clearInputcollid() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get args => $_getList(4);

  @$pb.TagNumber(6)
  $core.int get location => $_getIZ(5);
  @$pb.TagNumber(6)
  set location($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasLocation() => $_has(5);
  @$pb.TagNumber(6)
  void clearLocation() => clearField(6);
}

class BoolExpr extends $pb.GeneratedMessage {
  factory BoolExpr({
    Node? xpr,
    BoolExprType? boolop,
    $core.Iterable<Node>? args,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (boolop != null) {
      $result.boolop = boolop;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  BoolExpr._() : super();
  factory BoolExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory BoolExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'BoolExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..e<BoolExprType>(2, _omitFieldNames ? '' : 'boolop', $pb.PbFieldType.OE, defaultOrMaker: BoolExprType.BOOL_EXPR_TYPE_UNDEFINED, valueOf: BoolExprType.valueOf, enumValues: BoolExprType.values)
    ..pc<Node>(3, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  BoolExpr clone() => BoolExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  BoolExpr copyWith(void Function(BoolExpr) updates) => super.copyWith((message) => updates(message as BoolExpr)) as BoolExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static BoolExpr create() => BoolExpr._();
  BoolExpr createEmptyInstance() => create();
  static $pb.PbList<BoolExpr> createRepeated() => $pb.PbList<BoolExpr>();
  @$core.pragma('dart2js:noInline')
  static BoolExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<BoolExpr>(create);
  static BoolExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  BoolExprType get boolop => $_getN(1);
  @$pb.TagNumber(2)
  set boolop(BoolExprType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasBoolop() => $_has(1);
  @$pb.TagNumber(2)
  void clearBoolop() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get args => $_getList(2);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class SubLink extends $pb.GeneratedMessage {
  factory SubLink({
    Node? xpr,
    SubLinkType? subLinkType,
    $core.int? subLinkId,
    Node? testexpr,
    $core.Iterable<Node>? operName,
    Node? subselect,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (subLinkType != null) {
      $result.subLinkType = subLinkType;
    }
    if (subLinkId != null) {
      $result.subLinkId = subLinkId;
    }
    if (testexpr != null) {
      $result.testexpr = testexpr;
    }
    if (operName != null) {
      $result.operName.addAll(operName);
    }
    if (subselect != null) {
      $result.subselect = subselect;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  SubLink._() : super();
  factory SubLink.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SubLink.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SubLink', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..e<SubLinkType>(2, _omitFieldNames ? '' : 'subLinkType', $pb.PbFieldType.OE, defaultOrMaker: SubLinkType.SUB_LINK_TYPE_UNDEFINED, valueOf: SubLinkType.valueOf, enumValues: SubLinkType.values)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'subLinkId', $pb.PbFieldType.O3)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'testexpr', subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'operName', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(6, _omitFieldNames ? '' : 'subselect', subBuilder: Node.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SubLink clone() => SubLink()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SubLink copyWith(void Function(SubLink) updates) => super.copyWith((message) => updates(message as SubLink)) as SubLink;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SubLink create() => SubLink._();
  SubLink createEmptyInstance() => create();
  static $pb.PbList<SubLink> createRepeated() => $pb.PbList<SubLink>();
  @$core.pragma('dart2js:noInline')
  static SubLink getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SubLink>(create);
  static SubLink? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  SubLinkType get subLinkType => $_getN(1);
  @$pb.TagNumber(2)
  set subLinkType(SubLinkType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasSubLinkType() => $_has(1);
  @$pb.TagNumber(2)
  void clearSubLinkType() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get subLinkId => $_getIZ(2);
  @$pb.TagNumber(3)
  set subLinkId($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasSubLinkId() => $_has(2);
  @$pb.TagNumber(3)
  void clearSubLinkId() => clearField(3);

  @$pb.TagNumber(4)
  Node get testexpr => $_getN(3);
  @$pb.TagNumber(4)
  set testexpr(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasTestexpr() => $_has(3);
  @$pb.TagNumber(4)
  void clearTestexpr() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureTestexpr() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get operName => $_getList(4);

  @$pb.TagNumber(6)
  Node get subselect => $_getN(5);
  @$pb.TagNumber(6)
  set subselect(Node v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasSubselect() => $_has(5);
  @$pb.TagNumber(6)
  void clearSubselect() => clearField(6);
  @$pb.TagNumber(6)
  Node ensureSubselect() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class SubPlan extends $pb.GeneratedMessage {
  factory SubPlan({
    Node? xpr,
    SubLinkType? subLinkType,
    Node? testexpr,
    $core.Iterable<Node>? paramIds,
    $core.int? planId,
    $core.String? planName,
    $core.int? firstColType,
    $core.int? firstColTypmod,
    $core.int? firstColCollation,
    $core.bool? useHashTable,
    $core.bool? unknownEqFalse,
    $core.bool? parallelSafe,
    $core.Iterable<Node>? setParam,
    $core.Iterable<Node>? parParam,
    $core.Iterable<Node>? args,
    $core.double? startupCost,
    $core.double? perCallCost,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (subLinkType != null) {
      $result.subLinkType = subLinkType;
    }
    if (testexpr != null) {
      $result.testexpr = testexpr;
    }
    if (paramIds != null) {
      $result.paramIds.addAll(paramIds);
    }
    if (planId != null) {
      $result.planId = planId;
    }
    if (planName != null) {
      $result.planName = planName;
    }
    if (firstColType != null) {
      $result.firstColType = firstColType;
    }
    if (firstColTypmod != null) {
      $result.firstColTypmod = firstColTypmod;
    }
    if (firstColCollation != null) {
      $result.firstColCollation = firstColCollation;
    }
    if (useHashTable != null) {
      $result.useHashTable = useHashTable;
    }
    if (unknownEqFalse != null) {
      $result.unknownEqFalse = unknownEqFalse;
    }
    if (parallelSafe != null) {
      $result.parallelSafe = parallelSafe;
    }
    if (setParam != null) {
      $result.setParam.addAll(setParam);
    }
    if (parParam != null) {
      $result.parParam.addAll(parParam);
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (startupCost != null) {
      $result.startupCost = startupCost;
    }
    if (perCallCost != null) {
      $result.perCallCost = perCallCost;
    }
    return $result;
  }
  SubPlan._() : super();
  factory SubPlan.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SubPlan.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SubPlan', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..e<SubLinkType>(2, _omitFieldNames ? '' : 'subLinkType', $pb.PbFieldType.OE, defaultOrMaker: SubLinkType.SUB_LINK_TYPE_UNDEFINED, valueOf: SubLinkType.valueOf, enumValues: SubLinkType.values)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'testexpr', subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'paramIds', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'plan_id', $pb.PbFieldType.O3)
    ..aOS(6, _omitFieldNames ? '' : 'plan_name')
    ..a<$core.int>(7, _omitFieldNames ? '' : 'firstColType', $pb.PbFieldType.OU3)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'firstColTypmod', $pb.PbFieldType.O3)
    ..a<$core.int>(9, _omitFieldNames ? '' : 'firstColCollation', $pb.PbFieldType.OU3)
    ..aOB(10, _omitFieldNames ? '' : 'useHashTable')
    ..aOB(11, _omitFieldNames ? '' : 'unknownEqFalse')
    ..aOB(12, _omitFieldNames ? '' : 'parallel_safe')
    ..pc<Node>(13, _omitFieldNames ? '' : 'setParam', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(14, _omitFieldNames ? '' : 'parParam', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(15, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.double>(16, _omitFieldNames ? '' : 'startup_cost', $pb.PbFieldType.OD)
    ..a<$core.double>(17, _omitFieldNames ? '' : 'per_call_cost', $pb.PbFieldType.OD)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SubPlan clone() => SubPlan()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SubPlan copyWith(void Function(SubPlan) updates) => super.copyWith((message) => updates(message as SubPlan)) as SubPlan;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SubPlan create() => SubPlan._();
  SubPlan createEmptyInstance() => create();
  static $pb.PbList<SubPlan> createRepeated() => $pb.PbList<SubPlan>();
  @$core.pragma('dart2js:noInline')
  static SubPlan getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SubPlan>(create);
  static SubPlan? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  SubLinkType get subLinkType => $_getN(1);
  @$pb.TagNumber(2)
  set subLinkType(SubLinkType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasSubLinkType() => $_has(1);
  @$pb.TagNumber(2)
  void clearSubLinkType() => clearField(2);

  @$pb.TagNumber(3)
  Node get testexpr => $_getN(2);
  @$pb.TagNumber(3)
  set testexpr(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTestexpr() => $_has(2);
  @$pb.TagNumber(3)
  void clearTestexpr() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureTestexpr() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.List<Node> get paramIds => $_getList(3);

  @$pb.TagNumber(5)
  $core.int get planId => $_getIZ(4);
  @$pb.TagNumber(5)
  set planId($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasPlanId() => $_has(4);
  @$pb.TagNumber(5)
  void clearPlanId() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get planName => $_getSZ(5);
  @$pb.TagNumber(6)
  set planName($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasPlanName() => $_has(5);
  @$pb.TagNumber(6)
  void clearPlanName() => clearField(6);

  @$pb.TagNumber(7)
  $core.int get firstColType => $_getIZ(6);
  @$pb.TagNumber(7)
  set firstColType($core.int v) { $_setUnsignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasFirstColType() => $_has(6);
  @$pb.TagNumber(7)
  void clearFirstColType() => clearField(7);

  @$pb.TagNumber(8)
  $core.int get firstColTypmod => $_getIZ(7);
  @$pb.TagNumber(8)
  set firstColTypmod($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasFirstColTypmod() => $_has(7);
  @$pb.TagNumber(8)
  void clearFirstColTypmod() => clearField(8);

  @$pb.TagNumber(9)
  $core.int get firstColCollation => $_getIZ(8);
  @$pb.TagNumber(9)
  set firstColCollation($core.int v) { $_setUnsignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasFirstColCollation() => $_has(8);
  @$pb.TagNumber(9)
  void clearFirstColCollation() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get useHashTable => $_getBF(9);
  @$pb.TagNumber(10)
  set useHashTable($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasUseHashTable() => $_has(9);
  @$pb.TagNumber(10)
  void clearUseHashTable() => clearField(10);

  @$pb.TagNumber(11)
  $core.bool get unknownEqFalse => $_getBF(10);
  @$pb.TagNumber(11)
  set unknownEqFalse($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(11)
  $core.bool hasUnknownEqFalse() => $_has(10);
  @$pb.TagNumber(11)
  void clearUnknownEqFalse() => clearField(11);

  @$pb.TagNumber(12)
  $core.bool get parallelSafe => $_getBF(11);
  @$pb.TagNumber(12)
  set parallelSafe($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(12)
  $core.bool hasParallelSafe() => $_has(11);
  @$pb.TagNumber(12)
  void clearParallelSafe() => clearField(12);

  @$pb.TagNumber(13)
  $core.List<Node> get setParam => $_getList(12);

  @$pb.TagNumber(14)
  $core.List<Node> get parParam => $_getList(13);

  @$pb.TagNumber(15)
  $core.List<Node> get args => $_getList(14);

  @$pb.TagNumber(16)
  $core.double get startupCost => $_getN(15);
  @$pb.TagNumber(16)
  set startupCost($core.double v) { $_setDouble(15, v); }
  @$pb.TagNumber(16)
  $core.bool hasStartupCost() => $_has(15);
  @$pb.TagNumber(16)
  void clearStartupCost() => clearField(16);

  @$pb.TagNumber(17)
  $core.double get perCallCost => $_getN(16);
  @$pb.TagNumber(17)
  set perCallCost($core.double v) { $_setDouble(16, v); }
  @$pb.TagNumber(17)
  $core.bool hasPerCallCost() => $_has(16);
  @$pb.TagNumber(17)
  void clearPerCallCost() => clearField(17);
}

class AlternativeSubPlan extends $pb.GeneratedMessage {
  factory AlternativeSubPlan({
    Node? xpr,
    $core.Iterable<Node>? subplans,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (subplans != null) {
      $result.subplans.addAll(subplans);
    }
    return $result;
  }
  AlternativeSubPlan._() : super();
  factory AlternativeSubPlan.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlternativeSubPlan.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlternativeSubPlan', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'subplans', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlternativeSubPlan clone() => AlternativeSubPlan()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlternativeSubPlan copyWith(void Function(AlternativeSubPlan) updates) => super.copyWith((message) => updates(message as AlternativeSubPlan)) as AlternativeSubPlan;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlternativeSubPlan create() => AlternativeSubPlan._();
  AlternativeSubPlan createEmptyInstance() => create();
  static $pb.PbList<AlternativeSubPlan> createRepeated() => $pb.PbList<AlternativeSubPlan>();
  @$core.pragma('dart2js:noInline')
  static AlternativeSubPlan getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlternativeSubPlan>(create);
  static AlternativeSubPlan? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get subplans => $_getList(1);
}

class FieldSelect extends $pb.GeneratedMessage {
  factory FieldSelect({
    Node? xpr,
    Node? arg,
    $core.int? fieldnum,
    $core.int? resulttype,
    $core.int? resulttypmod,
    $core.int? resultcollid,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (fieldnum != null) {
      $result.fieldnum = fieldnum;
    }
    if (resulttype != null) {
      $result.resulttype = resulttype;
    }
    if (resulttypmod != null) {
      $result.resulttypmod = resulttypmod;
    }
    if (resultcollid != null) {
      $result.resultcollid = resultcollid;
    }
    return $result;
  }
  FieldSelect._() : super();
  factory FieldSelect.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FieldSelect.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FieldSelect', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'fieldnum', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'resulttype', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'resulttypmod', $pb.PbFieldType.O3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'resultcollid', $pb.PbFieldType.OU3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FieldSelect clone() => FieldSelect()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FieldSelect copyWith(void Function(FieldSelect) updates) => super.copyWith((message) => updates(message as FieldSelect)) as FieldSelect;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FieldSelect create() => FieldSelect._();
  FieldSelect createEmptyInstance() => create();
  static $pb.PbList<FieldSelect> createRepeated() => $pb.PbList<FieldSelect>();
  @$core.pragma('dart2js:noInline')
  static FieldSelect getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FieldSelect>(create);
  static FieldSelect? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get fieldnum => $_getIZ(2);
  @$pb.TagNumber(3)
  set fieldnum($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasFieldnum() => $_has(2);
  @$pb.TagNumber(3)
  void clearFieldnum() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get resulttype => $_getIZ(3);
  @$pb.TagNumber(4)
  set resulttype($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasResulttype() => $_has(3);
  @$pb.TagNumber(4)
  void clearResulttype() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get resulttypmod => $_getIZ(4);
  @$pb.TagNumber(5)
  set resulttypmod($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasResulttypmod() => $_has(4);
  @$pb.TagNumber(5)
  void clearResulttypmod() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get resultcollid => $_getIZ(5);
  @$pb.TagNumber(6)
  set resultcollid($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasResultcollid() => $_has(5);
  @$pb.TagNumber(6)
  void clearResultcollid() => clearField(6);
}

class FieldStore extends $pb.GeneratedMessage {
  factory FieldStore({
    Node? xpr,
    Node? arg,
    $core.Iterable<Node>? newvals,
    $core.Iterable<Node>? fieldnums,
    $core.int? resulttype,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (newvals != null) {
      $result.newvals.addAll(newvals);
    }
    if (fieldnums != null) {
      $result.fieldnums.addAll(fieldnums);
    }
    if (resulttype != null) {
      $result.resulttype = resulttype;
    }
    return $result;
  }
  FieldStore._() : super();
  factory FieldStore.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FieldStore.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FieldStore', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'newvals', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'fieldnums', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'resulttype', $pb.PbFieldType.OU3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FieldStore clone() => FieldStore()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FieldStore copyWith(void Function(FieldStore) updates) => super.copyWith((message) => updates(message as FieldStore)) as FieldStore;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FieldStore create() => FieldStore._();
  FieldStore createEmptyInstance() => create();
  static $pb.PbList<FieldStore> createRepeated() => $pb.PbList<FieldStore>();
  @$core.pragma('dart2js:noInline')
  static FieldStore getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FieldStore>(create);
  static FieldStore? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get newvals => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get fieldnums => $_getList(3);

  @$pb.TagNumber(5)
  $core.int get resulttype => $_getIZ(4);
  @$pb.TagNumber(5)
  set resulttype($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasResulttype() => $_has(4);
  @$pb.TagNumber(5)
  void clearResulttype() => clearField(5);
}

class RelabelType extends $pb.GeneratedMessage {
  factory RelabelType({
    Node? xpr,
    Node? arg,
    $core.int? resulttype,
    $core.int? resulttypmod,
    $core.int? resultcollid,
    CoercionForm? relabelformat,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (resulttype != null) {
      $result.resulttype = resulttype;
    }
    if (resulttypmod != null) {
      $result.resulttypmod = resulttypmod;
    }
    if (resultcollid != null) {
      $result.resultcollid = resultcollid;
    }
    if (relabelformat != null) {
      $result.relabelformat = relabelformat;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  RelabelType._() : super();
  factory RelabelType.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RelabelType.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RelabelType', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'resulttype', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'resulttypmod', $pb.PbFieldType.O3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'resultcollid', $pb.PbFieldType.OU3)
    ..e<CoercionForm>(6, _omitFieldNames ? '' : 'relabelformat', $pb.PbFieldType.OE, defaultOrMaker: CoercionForm.COERCION_FORM_UNDEFINED, valueOf: CoercionForm.valueOf, enumValues: CoercionForm.values)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RelabelType clone() => RelabelType()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RelabelType copyWith(void Function(RelabelType) updates) => super.copyWith((message) => updates(message as RelabelType)) as RelabelType;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RelabelType create() => RelabelType._();
  RelabelType createEmptyInstance() => create();
  static $pb.PbList<RelabelType> createRepeated() => $pb.PbList<RelabelType>();
  @$core.pragma('dart2js:noInline')
  static RelabelType getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RelabelType>(create);
  static RelabelType? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get resulttype => $_getIZ(2);
  @$pb.TagNumber(3)
  set resulttype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasResulttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearResulttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get resulttypmod => $_getIZ(3);
  @$pb.TagNumber(4)
  set resulttypmod($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasResulttypmod() => $_has(3);
  @$pb.TagNumber(4)
  void clearResulttypmod() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get resultcollid => $_getIZ(4);
  @$pb.TagNumber(5)
  set resultcollid($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasResultcollid() => $_has(4);
  @$pb.TagNumber(5)
  void clearResultcollid() => clearField(5);

  @$pb.TagNumber(6)
  CoercionForm get relabelformat => $_getN(5);
  @$pb.TagNumber(6)
  set relabelformat(CoercionForm v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasRelabelformat() => $_has(5);
  @$pb.TagNumber(6)
  void clearRelabelformat() => clearField(6);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class CoerceViaIO extends $pb.GeneratedMessage {
  factory CoerceViaIO({
    Node? xpr,
    Node? arg,
    $core.int? resulttype,
    $core.int? resultcollid,
    CoercionForm? coerceformat,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (resulttype != null) {
      $result.resulttype = resulttype;
    }
    if (resultcollid != null) {
      $result.resultcollid = resultcollid;
    }
    if (coerceformat != null) {
      $result.coerceformat = coerceformat;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CoerceViaIO._() : super();
  factory CoerceViaIO.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CoerceViaIO.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CoerceViaIO', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'resulttype', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'resultcollid', $pb.PbFieldType.OU3)
    ..e<CoercionForm>(5, _omitFieldNames ? '' : 'coerceformat', $pb.PbFieldType.OE, defaultOrMaker: CoercionForm.COERCION_FORM_UNDEFINED, valueOf: CoercionForm.valueOf, enumValues: CoercionForm.values)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CoerceViaIO clone() => CoerceViaIO()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CoerceViaIO copyWith(void Function(CoerceViaIO) updates) => super.copyWith((message) => updates(message as CoerceViaIO)) as CoerceViaIO;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CoerceViaIO create() => CoerceViaIO._();
  CoerceViaIO createEmptyInstance() => create();
  static $pb.PbList<CoerceViaIO> createRepeated() => $pb.PbList<CoerceViaIO>();
  @$core.pragma('dart2js:noInline')
  static CoerceViaIO getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CoerceViaIO>(create);
  static CoerceViaIO? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get resulttype => $_getIZ(2);
  @$pb.TagNumber(3)
  set resulttype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasResulttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearResulttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get resultcollid => $_getIZ(3);
  @$pb.TagNumber(4)
  set resultcollid($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasResultcollid() => $_has(3);
  @$pb.TagNumber(4)
  void clearResultcollid() => clearField(4);

  @$pb.TagNumber(5)
  CoercionForm get coerceformat => $_getN(4);
  @$pb.TagNumber(5)
  set coerceformat(CoercionForm v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasCoerceformat() => $_has(4);
  @$pb.TagNumber(5)
  void clearCoerceformat() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get location => $_getIZ(5);
  @$pb.TagNumber(6)
  set location($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasLocation() => $_has(5);
  @$pb.TagNumber(6)
  void clearLocation() => clearField(6);
}

class ArrayCoerceExpr extends $pb.GeneratedMessage {
  factory ArrayCoerceExpr({
    Node? xpr,
    Node? arg,
    Node? elemexpr,
    $core.int? resulttype,
    $core.int? resulttypmod,
    $core.int? resultcollid,
    CoercionForm? coerceformat,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (elemexpr != null) {
      $result.elemexpr = elemexpr;
    }
    if (resulttype != null) {
      $result.resulttype = resulttype;
    }
    if (resulttypmod != null) {
      $result.resulttypmod = resulttypmod;
    }
    if (resultcollid != null) {
      $result.resultcollid = resultcollid;
    }
    if (coerceformat != null) {
      $result.coerceformat = coerceformat;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  ArrayCoerceExpr._() : super();
  factory ArrayCoerceExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ArrayCoerceExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ArrayCoerceExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'elemexpr', subBuilder: Node.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'resulttype', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'resulttypmod', $pb.PbFieldType.O3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'resultcollid', $pb.PbFieldType.OU3)
    ..e<CoercionForm>(7, _omitFieldNames ? '' : 'coerceformat', $pb.PbFieldType.OE, defaultOrMaker: CoercionForm.COERCION_FORM_UNDEFINED, valueOf: CoercionForm.valueOf, enumValues: CoercionForm.values)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ArrayCoerceExpr clone() => ArrayCoerceExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ArrayCoerceExpr copyWith(void Function(ArrayCoerceExpr) updates) => super.copyWith((message) => updates(message as ArrayCoerceExpr)) as ArrayCoerceExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ArrayCoerceExpr create() => ArrayCoerceExpr._();
  ArrayCoerceExpr createEmptyInstance() => create();
  static $pb.PbList<ArrayCoerceExpr> createRepeated() => $pb.PbList<ArrayCoerceExpr>();
  @$core.pragma('dart2js:noInline')
  static ArrayCoerceExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ArrayCoerceExpr>(create);
  static ArrayCoerceExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  Node get elemexpr => $_getN(2);
  @$pb.TagNumber(3)
  set elemexpr(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasElemexpr() => $_has(2);
  @$pb.TagNumber(3)
  void clearElemexpr() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureElemexpr() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.int get resulttype => $_getIZ(3);
  @$pb.TagNumber(4)
  set resulttype($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasResulttype() => $_has(3);
  @$pb.TagNumber(4)
  void clearResulttype() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get resulttypmod => $_getIZ(4);
  @$pb.TagNumber(5)
  set resulttypmod($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasResulttypmod() => $_has(4);
  @$pb.TagNumber(5)
  void clearResulttypmod() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get resultcollid => $_getIZ(5);
  @$pb.TagNumber(6)
  set resultcollid($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasResultcollid() => $_has(5);
  @$pb.TagNumber(6)
  void clearResultcollid() => clearField(6);

  @$pb.TagNumber(7)
  CoercionForm get coerceformat => $_getN(6);
  @$pb.TagNumber(7)
  set coerceformat(CoercionForm v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasCoerceformat() => $_has(6);
  @$pb.TagNumber(7)
  void clearCoerceformat() => clearField(7);

  @$pb.TagNumber(8)
  $core.int get location => $_getIZ(7);
  @$pb.TagNumber(8)
  set location($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasLocation() => $_has(7);
  @$pb.TagNumber(8)
  void clearLocation() => clearField(8);
}

class ConvertRowtypeExpr extends $pb.GeneratedMessage {
  factory ConvertRowtypeExpr({
    Node? xpr,
    Node? arg,
    $core.int? resulttype,
    CoercionForm? convertformat,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (resulttype != null) {
      $result.resulttype = resulttype;
    }
    if (convertformat != null) {
      $result.convertformat = convertformat;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  ConvertRowtypeExpr._() : super();
  factory ConvertRowtypeExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ConvertRowtypeExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ConvertRowtypeExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'resulttype', $pb.PbFieldType.OU3)
    ..e<CoercionForm>(4, _omitFieldNames ? '' : 'convertformat', $pb.PbFieldType.OE, defaultOrMaker: CoercionForm.COERCION_FORM_UNDEFINED, valueOf: CoercionForm.valueOf, enumValues: CoercionForm.values)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ConvertRowtypeExpr clone() => ConvertRowtypeExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ConvertRowtypeExpr copyWith(void Function(ConvertRowtypeExpr) updates) => super.copyWith((message) => updates(message as ConvertRowtypeExpr)) as ConvertRowtypeExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ConvertRowtypeExpr create() => ConvertRowtypeExpr._();
  ConvertRowtypeExpr createEmptyInstance() => create();
  static $pb.PbList<ConvertRowtypeExpr> createRepeated() => $pb.PbList<ConvertRowtypeExpr>();
  @$core.pragma('dart2js:noInline')
  static ConvertRowtypeExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ConvertRowtypeExpr>(create);
  static ConvertRowtypeExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get resulttype => $_getIZ(2);
  @$pb.TagNumber(3)
  set resulttype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasResulttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearResulttype() => clearField(3);

  @$pb.TagNumber(4)
  CoercionForm get convertformat => $_getN(3);
  @$pb.TagNumber(4)
  set convertformat(CoercionForm v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasConvertformat() => $_has(3);
  @$pb.TagNumber(4)
  void clearConvertformat() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class CollateExpr extends $pb.GeneratedMessage {
  factory CollateExpr({
    Node? xpr,
    Node? arg,
    $core.int? collOid,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (collOid != null) {
      $result.collOid = collOid;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CollateExpr._() : super();
  factory CollateExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CollateExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CollateExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'collOid', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CollateExpr clone() => CollateExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CollateExpr copyWith(void Function(CollateExpr) updates) => super.copyWith((message) => updates(message as CollateExpr)) as CollateExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CollateExpr create() => CollateExpr._();
  CollateExpr createEmptyInstance() => create();
  static $pb.PbList<CollateExpr> createRepeated() => $pb.PbList<CollateExpr>();
  @$core.pragma('dart2js:noInline')
  static CollateExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CollateExpr>(create);
  static CollateExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get collOid => $_getIZ(2);
  @$pb.TagNumber(3)
  set collOid($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasCollOid() => $_has(2);
  @$pb.TagNumber(3)
  void clearCollOid() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class CaseExpr extends $pb.GeneratedMessage {
  factory CaseExpr({
    Node? xpr,
    $core.int? casetype,
    $core.int? casecollid,
    Node? arg,
    $core.Iterable<Node>? args,
    Node? defresult,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (casetype != null) {
      $result.casetype = casetype;
    }
    if (casecollid != null) {
      $result.casecollid = casecollid;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (defresult != null) {
      $result.defresult = defresult;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CaseExpr._() : super();
  factory CaseExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CaseExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CaseExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'casetype', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'casecollid', $pb.PbFieldType.OU3)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(6, _omitFieldNames ? '' : 'defresult', subBuilder: Node.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CaseExpr clone() => CaseExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CaseExpr copyWith(void Function(CaseExpr) updates) => super.copyWith((message) => updates(message as CaseExpr)) as CaseExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CaseExpr create() => CaseExpr._();
  CaseExpr createEmptyInstance() => create();
  static $pb.PbList<CaseExpr> createRepeated() => $pb.PbList<CaseExpr>();
  @$core.pragma('dart2js:noInline')
  static CaseExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CaseExpr>(create);
  static CaseExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get casetype => $_getIZ(1);
  @$pb.TagNumber(2)
  set casetype($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasCasetype() => $_has(1);
  @$pb.TagNumber(2)
  void clearCasetype() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get casecollid => $_getIZ(2);
  @$pb.TagNumber(3)
  set casecollid($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasCasecollid() => $_has(2);
  @$pb.TagNumber(3)
  void clearCasecollid() => clearField(3);

  @$pb.TagNumber(4)
  Node get arg => $_getN(3);
  @$pb.TagNumber(4)
  set arg(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasArg() => $_has(3);
  @$pb.TagNumber(4)
  void clearArg() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureArg() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get args => $_getList(4);

  @$pb.TagNumber(6)
  Node get defresult => $_getN(5);
  @$pb.TagNumber(6)
  set defresult(Node v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasDefresult() => $_has(5);
  @$pb.TagNumber(6)
  void clearDefresult() => clearField(6);
  @$pb.TagNumber(6)
  Node ensureDefresult() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class CaseWhen extends $pb.GeneratedMessage {
  factory CaseWhen({
    Node? xpr,
    Node? expr,
    Node? result,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (expr != null) {
      $result.expr = expr;
    }
    if (result != null) {
      $result.result = result;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CaseWhen._() : super();
  factory CaseWhen.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CaseWhen.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CaseWhen', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'expr', subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'result', subBuilder: Node.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CaseWhen clone() => CaseWhen()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CaseWhen copyWith(void Function(CaseWhen) updates) => super.copyWith((message) => updates(message as CaseWhen)) as CaseWhen;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CaseWhen create() => CaseWhen._();
  CaseWhen createEmptyInstance() => create();
  static $pb.PbList<CaseWhen> createRepeated() => $pb.PbList<CaseWhen>();
  @$core.pragma('dart2js:noInline')
  static CaseWhen getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CaseWhen>(create);
  static CaseWhen? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get expr => $_getN(1);
  @$pb.TagNumber(2)
  set expr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasExpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearExpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureExpr() => $_ensure(1);

  @$pb.TagNumber(3)
  Node get result => $_getN(2);
  @$pb.TagNumber(3)
  set result(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasResult() => $_has(2);
  @$pb.TagNumber(3)
  void clearResult() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureResult() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class CaseTestExpr extends $pb.GeneratedMessage {
  factory CaseTestExpr({
    Node? xpr,
    $core.int? typeId,
    $core.int? typeMod,
    $core.int? collation,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (typeId != null) {
      $result.typeId = typeId;
    }
    if (typeMod != null) {
      $result.typeMod = typeMod;
    }
    if (collation != null) {
      $result.collation = collation;
    }
    return $result;
  }
  CaseTestExpr._() : super();
  factory CaseTestExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CaseTestExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CaseTestExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'typeId', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'typeMod', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'collation', $pb.PbFieldType.OU3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CaseTestExpr clone() => CaseTestExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CaseTestExpr copyWith(void Function(CaseTestExpr) updates) => super.copyWith((message) => updates(message as CaseTestExpr)) as CaseTestExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CaseTestExpr create() => CaseTestExpr._();
  CaseTestExpr createEmptyInstance() => create();
  static $pb.PbList<CaseTestExpr> createRepeated() => $pb.PbList<CaseTestExpr>();
  @$core.pragma('dart2js:noInline')
  static CaseTestExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CaseTestExpr>(create);
  static CaseTestExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get typeId => $_getIZ(1);
  @$pb.TagNumber(2)
  set typeId($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeId() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeId() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get typeMod => $_getIZ(2);
  @$pb.TagNumber(3)
  set typeMod($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasTypeMod() => $_has(2);
  @$pb.TagNumber(3)
  void clearTypeMod() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get collation => $_getIZ(3);
  @$pb.TagNumber(4)
  set collation($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasCollation() => $_has(3);
  @$pb.TagNumber(4)
  void clearCollation() => clearField(4);
}

class ArrayExpr extends $pb.GeneratedMessage {
  factory ArrayExpr({
    Node? xpr,
    $core.int? arrayTypeid,
    $core.int? arrayCollid,
    $core.int? elementTypeid,
    $core.Iterable<Node>? elements,
    $core.bool? multidims,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arrayTypeid != null) {
      $result.arrayTypeid = arrayTypeid;
    }
    if (arrayCollid != null) {
      $result.arrayCollid = arrayCollid;
    }
    if (elementTypeid != null) {
      $result.elementTypeid = elementTypeid;
    }
    if (elements != null) {
      $result.elements.addAll(elements);
    }
    if (multidims != null) {
      $result.multidims = multidims;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  ArrayExpr._() : super();
  factory ArrayExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ArrayExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ArrayExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'array_typeid', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'array_collid', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'element_typeid', $pb.PbFieldType.OU3)
    ..pc<Node>(5, _omitFieldNames ? '' : 'elements', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(6, _omitFieldNames ? '' : 'multidims')
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ArrayExpr clone() => ArrayExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ArrayExpr copyWith(void Function(ArrayExpr) updates) => super.copyWith((message) => updates(message as ArrayExpr)) as ArrayExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ArrayExpr create() => ArrayExpr._();
  ArrayExpr createEmptyInstance() => create();
  static $pb.PbList<ArrayExpr> createRepeated() => $pb.PbList<ArrayExpr>();
  @$core.pragma('dart2js:noInline')
  static ArrayExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ArrayExpr>(create);
  static ArrayExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get arrayTypeid => $_getIZ(1);
  @$pb.TagNumber(2)
  set arrayTypeid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasArrayTypeid() => $_has(1);
  @$pb.TagNumber(2)
  void clearArrayTypeid() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get arrayCollid => $_getIZ(2);
  @$pb.TagNumber(3)
  set arrayCollid($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasArrayCollid() => $_has(2);
  @$pb.TagNumber(3)
  void clearArrayCollid() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get elementTypeid => $_getIZ(3);
  @$pb.TagNumber(4)
  set elementTypeid($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasElementTypeid() => $_has(3);
  @$pb.TagNumber(4)
  void clearElementTypeid() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get elements => $_getList(4);

  @$pb.TagNumber(6)
  $core.bool get multidims => $_getBF(5);
  @$pb.TagNumber(6)
  set multidims($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasMultidims() => $_has(5);
  @$pb.TagNumber(6)
  void clearMultidims() => clearField(6);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class RowExpr extends $pb.GeneratedMessage {
  factory RowExpr({
    Node? xpr,
    $core.Iterable<Node>? args,
    $core.int? rowTypeid,
    CoercionForm? rowFormat,
    $core.Iterable<Node>? colnames,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (rowTypeid != null) {
      $result.rowTypeid = rowTypeid;
    }
    if (rowFormat != null) {
      $result.rowFormat = rowFormat;
    }
    if (colnames != null) {
      $result.colnames.addAll(colnames);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  RowExpr._() : super();
  factory RowExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RowExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RowExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'row_typeid', $pb.PbFieldType.OU3)
    ..e<CoercionForm>(4, _omitFieldNames ? '' : 'row_format', $pb.PbFieldType.OE, defaultOrMaker: CoercionForm.COERCION_FORM_UNDEFINED, valueOf: CoercionForm.valueOf, enumValues: CoercionForm.values)
    ..pc<Node>(5, _omitFieldNames ? '' : 'colnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RowExpr clone() => RowExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RowExpr copyWith(void Function(RowExpr) updates) => super.copyWith((message) => updates(message as RowExpr)) as RowExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RowExpr create() => RowExpr._();
  RowExpr createEmptyInstance() => create();
  static $pb.PbList<RowExpr> createRepeated() => $pb.PbList<RowExpr>();
  @$core.pragma('dart2js:noInline')
  static RowExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RowExpr>(create);
  static RowExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get args => $_getList(1);

  @$pb.TagNumber(3)
  $core.int get rowTypeid => $_getIZ(2);
  @$pb.TagNumber(3)
  set rowTypeid($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasRowTypeid() => $_has(2);
  @$pb.TagNumber(3)
  void clearRowTypeid() => clearField(3);

  @$pb.TagNumber(4)
  CoercionForm get rowFormat => $_getN(3);
  @$pb.TagNumber(4)
  set rowFormat(CoercionForm v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasRowFormat() => $_has(3);
  @$pb.TagNumber(4)
  void clearRowFormat() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get colnames => $_getList(4);

  @$pb.TagNumber(6)
  $core.int get location => $_getIZ(5);
  @$pb.TagNumber(6)
  set location($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasLocation() => $_has(5);
  @$pb.TagNumber(6)
  void clearLocation() => clearField(6);
}

class RowCompareExpr extends $pb.GeneratedMessage {
  factory RowCompareExpr({
    Node? xpr,
    RowCompareType? rctype,
    $core.Iterable<Node>? opnos,
    $core.Iterable<Node>? opfamilies,
    $core.Iterable<Node>? inputcollids,
    $core.Iterable<Node>? largs,
    $core.Iterable<Node>? rargs,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (rctype != null) {
      $result.rctype = rctype;
    }
    if (opnos != null) {
      $result.opnos.addAll(opnos);
    }
    if (opfamilies != null) {
      $result.opfamilies.addAll(opfamilies);
    }
    if (inputcollids != null) {
      $result.inputcollids.addAll(inputcollids);
    }
    if (largs != null) {
      $result.largs.addAll(largs);
    }
    if (rargs != null) {
      $result.rargs.addAll(rargs);
    }
    return $result;
  }
  RowCompareExpr._() : super();
  factory RowCompareExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RowCompareExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RowCompareExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..e<RowCompareType>(2, _omitFieldNames ? '' : 'rctype', $pb.PbFieldType.OE, defaultOrMaker: RowCompareType.ROW_COMPARE_TYPE_UNDEFINED, valueOf: RowCompareType.valueOf, enumValues: RowCompareType.values)
    ..pc<Node>(3, _omitFieldNames ? '' : 'opnos', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'opfamilies', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'inputcollids', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'largs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(7, _omitFieldNames ? '' : 'rargs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RowCompareExpr clone() => RowCompareExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RowCompareExpr copyWith(void Function(RowCompareExpr) updates) => super.copyWith((message) => updates(message as RowCompareExpr)) as RowCompareExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RowCompareExpr create() => RowCompareExpr._();
  RowCompareExpr createEmptyInstance() => create();
  static $pb.PbList<RowCompareExpr> createRepeated() => $pb.PbList<RowCompareExpr>();
  @$core.pragma('dart2js:noInline')
  static RowCompareExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RowCompareExpr>(create);
  static RowCompareExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  RowCompareType get rctype => $_getN(1);
  @$pb.TagNumber(2)
  set rctype(RowCompareType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRctype() => $_has(1);
  @$pb.TagNumber(2)
  void clearRctype() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get opnos => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get opfamilies => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get inputcollids => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get largs => $_getList(5);

  @$pb.TagNumber(7)
  $core.List<Node> get rargs => $_getList(6);
}

class CoalesceExpr extends $pb.GeneratedMessage {
  factory CoalesceExpr({
    Node? xpr,
    $core.int? coalescetype,
    $core.int? coalescecollid,
    $core.Iterable<Node>? args,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (coalescetype != null) {
      $result.coalescetype = coalescetype;
    }
    if (coalescecollid != null) {
      $result.coalescecollid = coalescecollid;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CoalesceExpr._() : super();
  factory CoalesceExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CoalesceExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CoalesceExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'coalescetype', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'coalescecollid', $pb.PbFieldType.OU3)
    ..pc<Node>(4, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CoalesceExpr clone() => CoalesceExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CoalesceExpr copyWith(void Function(CoalesceExpr) updates) => super.copyWith((message) => updates(message as CoalesceExpr)) as CoalesceExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CoalesceExpr create() => CoalesceExpr._();
  CoalesceExpr createEmptyInstance() => create();
  static $pb.PbList<CoalesceExpr> createRepeated() => $pb.PbList<CoalesceExpr>();
  @$core.pragma('dart2js:noInline')
  static CoalesceExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CoalesceExpr>(create);
  static CoalesceExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get coalescetype => $_getIZ(1);
  @$pb.TagNumber(2)
  set coalescetype($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasCoalescetype() => $_has(1);
  @$pb.TagNumber(2)
  void clearCoalescetype() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get coalescecollid => $_getIZ(2);
  @$pb.TagNumber(3)
  set coalescecollid($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasCoalescecollid() => $_has(2);
  @$pb.TagNumber(3)
  void clearCoalescecollid() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get args => $_getList(3);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class MinMaxExpr extends $pb.GeneratedMessage {
  factory MinMaxExpr({
    Node? xpr,
    $core.int? minmaxtype,
    $core.int? minmaxcollid,
    $core.int? inputcollid,
    MinMaxOp? op,
    $core.Iterable<Node>? args,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (minmaxtype != null) {
      $result.minmaxtype = minmaxtype;
    }
    if (minmaxcollid != null) {
      $result.minmaxcollid = minmaxcollid;
    }
    if (inputcollid != null) {
      $result.inputcollid = inputcollid;
    }
    if (op != null) {
      $result.op = op;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  MinMaxExpr._() : super();
  factory MinMaxExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MinMaxExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MinMaxExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'minmaxtype', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'minmaxcollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'inputcollid', $pb.PbFieldType.OU3)
    ..e<MinMaxOp>(5, _omitFieldNames ? '' : 'op', $pb.PbFieldType.OE, defaultOrMaker: MinMaxOp.MIN_MAX_OP_UNDEFINED, valueOf: MinMaxOp.valueOf, enumValues: MinMaxOp.values)
    ..pc<Node>(6, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MinMaxExpr clone() => MinMaxExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MinMaxExpr copyWith(void Function(MinMaxExpr) updates) => super.copyWith((message) => updates(message as MinMaxExpr)) as MinMaxExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MinMaxExpr create() => MinMaxExpr._();
  MinMaxExpr createEmptyInstance() => create();
  static $pb.PbList<MinMaxExpr> createRepeated() => $pb.PbList<MinMaxExpr>();
  @$core.pragma('dart2js:noInline')
  static MinMaxExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MinMaxExpr>(create);
  static MinMaxExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get minmaxtype => $_getIZ(1);
  @$pb.TagNumber(2)
  set minmaxtype($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasMinmaxtype() => $_has(1);
  @$pb.TagNumber(2)
  void clearMinmaxtype() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get minmaxcollid => $_getIZ(2);
  @$pb.TagNumber(3)
  set minmaxcollid($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasMinmaxcollid() => $_has(2);
  @$pb.TagNumber(3)
  void clearMinmaxcollid() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get inputcollid => $_getIZ(3);
  @$pb.TagNumber(4)
  set inputcollid($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasInputcollid() => $_has(3);
  @$pb.TagNumber(4)
  void clearInputcollid() => clearField(4);

  @$pb.TagNumber(5)
  MinMaxOp get op => $_getN(4);
  @$pb.TagNumber(5)
  set op(MinMaxOp v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasOp() => $_has(4);
  @$pb.TagNumber(5)
  void clearOp() => clearField(5);

  @$pb.TagNumber(6)
  $core.List<Node> get args => $_getList(5);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class SQLValueFunction extends $pb.GeneratedMessage {
  factory SQLValueFunction({
    Node? xpr,
    SQLValueFunctionOp? op,
    $core.int? type,
    $core.int? typmod,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (op != null) {
      $result.op = op;
    }
    if (type != null) {
      $result.type = type;
    }
    if (typmod != null) {
      $result.typmod = typmod;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  SQLValueFunction._() : super();
  factory SQLValueFunction.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SQLValueFunction.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SQLValueFunction', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..e<SQLValueFunctionOp>(2, _omitFieldNames ? '' : 'op', $pb.PbFieldType.OE, defaultOrMaker: SQLValueFunctionOp.SQLVALUE_FUNCTION_OP_UNDEFINED, valueOf: SQLValueFunctionOp.valueOf, enumValues: SQLValueFunctionOp.values)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'type', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'typmod', $pb.PbFieldType.O3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SQLValueFunction clone() => SQLValueFunction()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SQLValueFunction copyWith(void Function(SQLValueFunction) updates) => super.copyWith((message) => updates(message as SQLValueFunction)) as SQLValueFunction;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SQLValueFunction create() => SQLValueFunction._();
  SQLValueFunction createEmptyInstance() => create();
  static $pb.PbList<SQLValueFunction> createRepeated() => $pb.PbList<SQLValueFunction>();
  @$core.pragma('dart2js:noInline')
  static SQLValueFunction getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SQLValueFunction>(create);
  static SQLValueFunction? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  SQLValueFunctionOp get op => $_getN(1);
  @$pb.TagNumber(2)
  set op(SQLValueFunctionOp v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasOp() => $_has(1);
  @$pb.TagNumber(2)
  void clearOp() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get type => $_getIZ(2);
  @$pb.TagNumber(3)
  set type($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasType() => $_has(2);
  @$pb.TagNumber(3)
  void clearType() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get typmod => $_getIZ(3);
  @$pb.TagNumber(4)
  set typmod($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasTypmod() => $_has(3);
  @$pb.TagNumber(4)
  void clearTypmod() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class XmlExpr extends $pb.GeneratedMessage {
  factory XmlExpr({
    Node? xpr,
    XmlExprOp? op,
    $core.String? name,
    $core.Iterable<Node>? namedArgs,
    $core.Iterable<Node>? argNames,
    $core.Iterable<Node>? args,
    XmlOptionType? xmloption,
    $core.bool? indent,
    $core.int? type,
    $core.int? typmod,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (op != null) {
      $result.op = op;
    }
    if (name != null) {
      $result.name = name;
    }
    if (namedArgs != null) {
      $result.namedArgs.addAll(namedArgs);
    }
    if (argNames != null) {
      $result.argNames.addAll(argNames);
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (xmloption != null) {
      $result.xmloption = xmloption;
    }
    if (indent != null) {
      $result.indent = indent;
    }
    if (type != null) {
      $result.type = type;
    }
    if (typmod != null) {
      $result.typmod = typmod;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  XmlExpr._() : super();
  factory XmlExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory XmlExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'XmlExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..e<XmlExprOp>(2, _omitFieldNames ? '' : 'op', $pb.PbFieldType.OE, defaultOrMaker: XmlExprOp.XML_EXPR_OP_UNDEFINED, valueOf: XmlExprOp.valueOf, enumValues: XmlExprOp.values)
    ..aOS(3, _omitFieldNames ? '' : 'name')
    ..pc<Node>(4, _omitFieldNames ? '' : 'named_args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'arg_names', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<XmlOptionType>(7, _omitFieldNames ? '' : 'xmloption', $pb.PbFieldType.OE, defaultOrMaker: XmlOptionType.XML_OPTION_TYPE_UNDEFINED, valueOf: XmlOptionType.valueOf, enumValues: XmlOptionType.values)
    ..aOB(8, _omitFieldNames ? '' : 'indent')
    ..a<$core.int>(9, _omitFieldNames ? '' : 'type', $pb.PbFieldType.OU3)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'typmod', $pb.PbFieldType.O3)
    ..a<$core.int>(11, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  XmlExpr clone() => XmlExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  XmlExpr copyWith(void Function(XmlExpr) updates) => super.copyWith((message) => updates(message as XmlExpr)) as XmlExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static XmlExpr create() => XmlExpr._();
  XmlExpr createEmptyInstance() => create();
  static $pb.PbList<XmlExpr> createRepeated() => $pb.PbList<XmlExpr>();
  @$core.pragma('dart2js:noInline')
  static XmlExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<XmlExpr>(create);
  static XmlExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  XmlExprOp get op => $_getN(1);
  @$pb.TagNumber(2)
  set op(XmlExprOp v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasOp() => $_has(1);
  @$pb.TagNumber(2)
  void clearOp() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get name => $_getSZ(2);
  @$pb.TagNumber(3)
  set name($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasName() => $_has(2);
  @$pb.TagNumber(3)
  void clearName() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get namedArgs => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get argNames => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get args => $_getList(5);

  @$pb.TagNumber(7)
  XmlOptionType get xmloption => $_getN(6);
  @$pb.TagNumber(7)
  set xmloption(XmlOptionType v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasXmloption() => $_has(6);
  @$pb.TagNumber(7)
  void clearXmloption() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get indent => $_getBF(7);
  @$pb.TagNumber(8)
  set indent($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasIndent() => $_has(7);
  @$pb.TagNumber(8)
  void clearIndent() => clearField(8);

  @$pb.TagNumber(9)
  $core.int get type => $_getIZ(8);
  @$pb.TagNumber(9)
  set type($core.int v) { $_setUnsignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasType() => $_has(8);
  @$pb.TagNumber(9)
  void clearType() => clearField(9);

  @$pb.TagNumber(10)
  $core.int get typmod => $_getIZ(9);
  @$pb.TagNumber(10)
  set typmod($core.int v) { $_setSignedInt32(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasTypmod() => $_has(9);
  @$pb.TagNumber(10)
  void clearTypmod() => clearField(10);

  @$pb.TagNumber(11)
  $core.int get location => $_getIZ(10);
  @$pb.TagNumber(11)
  set location($core.int v) { $_setSignedInt32(10, v); }
  @$pb.TagNumber(11)
  $core.bool hasLocation() => $_has(10);
  @$pb.TagNumber(11)
  void clearLocation() => clearField(11);
}

class JsonFormat extends $pb.GeneratedMessage {
  factory JsonFormat({
    JsonFormatType? formatType,
    JsonEncoding? encoding,
    $core.int? location,
  }) {
    final $result = create();
    if (formatType != null) {
      $result.formatType = formatType;
    }
    if (encoding != null) {
      $result.encoding = encoding;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  JsonFormat._() : super();
  factory JsonFormat.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonFormat.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonFormat', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<JsonFormatType>(1, _omitFieldNames ? '' : 'format_type', $pb.PbFieldType.OE, defaultOrMaker: JsonFormatType.JSON_FORMAT_TYPE_UNDEFINED, valueOf: JsonFormatType.valueOf, enumValues: JsonFormatType.values)
    ..e<JsonEncoding>(2, _omitFieldNames ? '' : 'encoding', $pb.PbFieldType.OE, defaultOrMaker: JsonEncoding.JSON_ENCODING_UNDEFINED, valueOf: JsonEncoding.valueOf, enumValues: JsonEncoding.values)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonFormat clone() => JsonFormat()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonFormat copyWith(void Function(JsonFormat) updates) => super.copyWith((message) => updates(message as JsonFormat)) as JsonFormat;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonFormat create() => JsonFormat._();
  JsonFormat createEmptyInstance() => create();
  static $pb.PbList<JsonFormat> createRepeated() => $pb.PbList<JsonFormat>();
  @$core.pragma('dart2js:noInline')
  static JsonFormat getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonFormat>(create);
  static JsonFormat? _defaultInstance;

  @$pb.TagNumber(1)
  JsonFormatType get formatType => $_getN(0);
  @$pb.TagNumber(1)
  set formatType(JsonFormatType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasFormatType() => $_has(0);
  @$pb.TagNumber(1)
  void clearFormatType() => clearField(1);

  @$pb.TagNumber(2)
  JsonEncoding get encoding => $_getN(1);
  @$pb.TagNumber(2)
  set encoding(JsonEncoding v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasEncoding() => $_has(1);
  @$pb.TagNumber(2)
  void clearEncoding() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get location => $_getIZ(2);
  @$pb.TagNumber(3)
  set location($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);
}

class JsonReturning extends $pb.GeneratedMessage {
  factory JsonReturning({
    JsonFormat? format,
    $core.int? typid,
    $core.int? typmod,
  }) {
    final $result = create();
    if (format != null) {
      $result.format = format;
    }
    if (typid != null) {
      $result.typid = typid;
    }
    if (typmod != null) {
      $result.typmod = typmod;
    }
    return $result;
  }
  JsonReturning._() : super();
  factory JsonReturning.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonReturning.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonReturning', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<JsonFormat>(1, _omitFieldNames ? '' : 'format', subBuilder: JsonFormat.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'typid', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'typmod', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonReturning clone() => JsonReturning()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonReturning copyWith(void Function(JsonReturning) updates) => super.copyWith((message) => updates(message as JsonReturning)) as JsonReturning;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonReturning create() => JsonReturning._();
  JsonReturning createEmptyInstance() => create();
  static $pb.PbList<JsonReturning> createRepeated() => $pb.PbList<JsonReturning>();
  @$core.pragma('dart2js:noInline')
  static JsonReturning getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonReturning>(create);
  static JsonReturning? _defaultInstance;

  @$pb.TagNumber(1)
  JsonFormat get format => $_getN(0);
  @$pb.TagNumber(1)
  set format(JsonFormat v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasFormat() => $_has(0);
  @$pb.TagNumber(1)
  void clearFormat() => clearField(1);
  @$pb.TagNumber(1)
  JsonFormat ensureFormat() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get typid => $_getIZ(1);
  @$pb.TagNumber(2)
  set typid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypid() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypid() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get typmod => $_getIZ(2);
  @$pb.TagNumber(3)
  set typmod($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasTypmod() => $_has(2);
  @$pb.TagNumber(3)
  void clearTypmod() => clearField(3);
}

class JsonValueExpr extends $pb.GeneratedMessage {
  factory JsonValueExpr({
    Node? rawExpr,
    Node? formattedExpr,
    JsonFormat? format,
  }) {
    final $result = create();
    if (rawExpr != null) {
      $result.rawExpr = rawExpr;
    }
    if (formattedExpr != null) {
      $result.formattedExpr = formattedExpr;
    }
    if (format != null) {
      $result.format = format;
    }
    return $result;
  }
  JsonValueExpr._() : super();
  factory JsonValueExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonValueExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonValueExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'raw_expr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'formatted_expr', subBuilder: Node.create)
    ..aOM<JsonFormat>(3, _omitFieldNames ? '' : 'format', subBuilder: JsonFormat.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonValueExpr clone() => JsonValueExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonValueExpr copyWith(void Function(JsonValueExpr) updates) => super.copyWith((message) => updates(message as JsonValueExpr)) as JsonValueExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonValueExpr create() => JsonValueExpr._();
  JsonValueExpr createEmptyInstance() => create();
  static $pb.PbList<JsonValueExpr> createRepeated() => $pb.PbList<JsonValueExpr>();
  @$core.pragma('dart2js:noInline')
  static JsonValueExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonValueExpr>(create);
  static JsonValueExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get rawExpr => $_getN(0);
  @$pb.TagNumber(1)
  set rawExpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRawExpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearRawExpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureRawExpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get formattedExpr => $_getN(1);
  @$pb.TagNumber(2)
  set formattedExpr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasFormattedExpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearFormattedExpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureFormattedExpr() => $_ensure(1);

  @$pb.TagNumber(3)
  JsonFormat get format => $_getN(2);
  @$pb.TagNumber(3)
  set format(JsonFormat v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasFormat() => $_has(2);
  @$pb.TagNumber(3)
  void clearFormat() => clearField(3);
  @$pb.TagNumber(3)
  JsonFormat ensureFormat() => $_ensure(2);
}

class JsonConstructorExpr extends $pb.GeneratedMessage {
  factory JsonConstructorExpr({
    Node? xpr,
    JsonConstructorType? type,
    $core.Iterable<Node>? args,
    Node? func,
    Node? coercion,
    JsonReturning? returning,
    $core.bool? absentOnNull,
    $core.bool? unique,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (type != null) {
      $result.type = type;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (func != null) {
      $result.func = func;
    }
    if (coercion != null) {
      $result.coercion = coercion;
    }
    if (returning != null) {
      $result.returning = returning;
    }
    if (absentOnNull != null) {
      $result.absentOnNull = absentOnNull;
    }
    if (unique != null) {
      $result.unique = unique;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  JsonConstructorExpr._() : super();
  factory JsonConstructorExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonConstructorExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonConstructorExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..e<JsonConstructorType>(2, _omitFieldNames ? '' : 'type', $pb.PbFieldType.OE, defaultOrMaker: JsonConstructorType.JSON_CONSTRUCTOR_TYPE_UNDEFINED, valueOf: JsonConstructorType.valueOf, enumValues: JsonConstructorType.values)
    ..pc<Node>(3, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'func', subBuilder: Node.create)
    ..aOM<Node>(5, _omitFieldNames ? '' : 'coercion', subBuilder: Node.create)
    ..aOM<JsonReturning>(6, _omitFieldNames ? '' : 'returning', subBuilder: JsonReturning.create)
    ..aOB(7, _omitFieldNames ? '' : 'absent_on_null')
    ..aOB(8, _omitFieldNames ? '' : 'unique')
    ..a<$core.int>(9, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonConstructorExpr clone() => JsonConstructorExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonConstructorExpr copyWith(void Function(JsonConstructorExpr) updates) => super.copyWith((message) => updates(message as JsonConstructorExpr)) as JsonConstructorExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonConstructorExpr create() => JsonConstructorExpr._();
  JsonConstructorExpr createEmptyInstance() => create();
  static $pb.PbList<JsonConstructorExpr> createRepeated() => $pb.PbList<JsonConstructorExpr>();
  @$core.pragma('dart2js:noInline')
  static JsonConstructorExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonConstructorExpr>(create);
  static JsonConstructorExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  JsonConstructorType get type => $_getN(1);
  @$pb.TagNumber(2)
  set type(JsonConstructorType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasType() => $_has(1);
  @$pb.TagNumber(2)
  void clearType() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get args => $_getList(2);

  @$pb.TagNumber(4)
  Node get func => $_getN(3);
  @$pb.TagNumber(4)
  set func(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasFunc() => $_has(3);
  @$pb.TagNumber(4)
  void clearFunc() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureFunc() => $_ensure(3);

  @$pb.TagNumber(5)
  Node get coercion => $_getN(4);
  @$pb.TagNumber(5)
  set coercion(Node v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasCoercion() => $_has(4);
  @$pb.TagNumber(5)
  void clearCoercion() => clearField(5);
  @$pb.TagNumber(5)
  Node ensureCoercion() => $_ensure(4);

  @$pb.TagNumber(6)
  JsonReturning get returning => $_getN(5);
  @$pb.TagNumber(6)
  set returning(JsonReturning v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasReturning() => $_has(5);
  @$pb.TagNumber(6)
  void clearReturning() => clearField(6);
  @$pb.TagNumber(6)
  JsonReturning ensureReturning() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.bool get absentOnNull => $_getBF(6);
  @$pb.TagNumber(7)
  set absentOnNull($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasAbsentOnNull() => $_has(6);
  @$pb.TagNumber(7)
  void clearAbsentOnNull() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get unique => $_getBF(7);
  @$pb.TagNumber(8)
  set unique($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasUnique() => $_has(7);
  @$pb.TagNumber(8)
  void clearUnique() => clearField(8);

  @$pb.TagNumber(9)
  $core.int get location => $_getIZ(8);
  @$pb.TagNumber(9)
  set location($core.int v) { $_setSignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasLocation() => $_has(8);
  @$pb.TagNumber(9)
  void clearLocation() => clearField(9);
}

class JsonIsPredicate extends $pb.GeneratedMessage {
  factory JsonIsPredicate({
    Node? expr,
    JsonFormat? format,
    JsonValueType? itemType,
    $core.bool? uniqueKeys,
    $core.int? location,
  }) {
    final $result = create();
    if (expr != null) {
      $result.expr = expr;
    }
    if (format != null) {
      $result.format = format;
    }
    if (itemType != null) {
      $result.itemType = itemType;
    }
    if (uniqueKeys != null) {
      $result.uniqueKeys = uniqueKeys;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  JsonIsPredicate._() : super();
  factory JsonIsPredicate.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonIsPredicate.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonIsPredicate', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'expr', subBuilder: Node.create)
    ..aOM<JsonFormat>(2, _omitFieldNames ? '' : 'format', subBuilder: JsonFormat.create)
    ..e<JsonValueType>(3, _omitFieldNames ? '' : 'item_type', $pb.PbFieldType.OE, defaultOrMaker: JsonValueType.JSON_VALUE_TYPE_UNDEFINED, valueOf: JsonValueType.valueOf, enumValues: JsonValueType.values)
    ..aOB(4, _omitFieldNames ? '' : 'unique_keys')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonIsPredicate clone() => JsonIsPredicate()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonIsPredicate copyWith(void Function(JsonIsPredicate) updates) => super.copyWith((message) => updates(message as JsonIsPredicate)) as JsonIsPredicate;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonIsPredicate create() => JsonIsPredicate._();
  JsonIsPredicate createEmptyInstance() => create();
  static $pb.PbList<JsonIsPredicate> createRepeated() => $pb.PbList<JsonIsPredicate>();
  @$core.pragma('dart2js:noInline')
  static JsonIsPredicate getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonIsPredicate>(create);
  static JsonIsPredicate? _defaultInstance;

  @$pb.TagNumber(1)
  Node get expr => $_getN(0);
  @$pb.TagNumber(1)
  set expr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasExpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearExpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureExpr() => $_ensure(0);

  @$pb.TagNumber(2)
  JsonFormat get format => $_getN(1);
  @$pb.TagNumber(2)
  set format(JsonFormat v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasFormat() => $_has(1);
  @$pb.TagNumber(2)
  void clearFormat() => clearField(2);
  @$pb.TagNumber(2)
  JsonFormat ensureFormat() => $_ensure(1);

  @$pb.TagNumber(3)
  JsonValueType get itemType => $_getN(2);
  @$pb.TagNumber(3)
  set itemType(JsonValueType v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasItemType() => $_has(2);
  @$pb.TagNumber(3)
  void clearItemType() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get uniqueKeys => $_getBF(3);
  @$pb.TagNumber(4)
  set uniqueKeys($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasUniqueKeys() => $_has(3);
  @$pb.TagNumber(4)
  void clearUniqueKeys() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class NullTest extends $pb.GeneratedMessage {
  factory NullTest({
    Node? xpr,
    Node? arg,
    NullTestType? nulltesttype,
    $core.bool? argisrow,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (nulltesttype != null) {
      $result.nulltesttype = nulltesttype;
    }
    if (argisrow != null) {
      $result.argisrow = argisrow;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  NullTest._() : super();
  factory NullTest.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory NullTest.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'NullTest', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..e<NullTestType>(3, _omitFieldNames ? '' : 'nulltesttype', $pb.PbFieldType.OE, defaultOrMaker: NullTestType.NULL_TEST_TYPE_UNDEFINED, valueOf: NullTestType.valueOf, enumValues: NullTestType.values)
    ..aOB(4, _omitFieldNames ? '' : 'argisrow')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  NullTest clone() => NullTest()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  NullTest copyWith(void Function(NullTest) updates) => super.copyWith((message) => updates(message as NullTest)) as NullTest;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static NullTest create() => NullTest._();
  NullTest createEmptyInstance() => create();
  static $pb.PbList<NullTest> createRepeated() => $pb.PbList<NullTest>();
  @$core.pragma('dart2js:noInline')
  static NullTest getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<NullTest>(create);
  static NullTest? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  NullTestType get nulltesttype => $_getN(2);
  @$pb.TagNumber(3)
  set nulltesttype(NullTestType v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasNulltesttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearNulltesttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get argisrow => $_getBF(3);
  @$pb.TagNumber(4)
  set argisrow($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasArgisrow() => $_has(3);
  @$pb.TagNumber(4)
  void clearArgisrow() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class BooleanTest extends $pb.GeneratedMessage {
  factory BooleanTest({
    Node? xpr,
    Node? arg,
    BoolTestType? booltesttype,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (booltesttype != null) {
      $result.booltesttype = booltesttype;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  BooleanTest._() : super();
  factory BooleanTest.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory BooleanTest.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'BooleanTest', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..e<BoolTestType>(3, _omitFieldNames ? '' : 'booltesttype', $pb.PbFieldType.OE, defaultOrMaker: BoolTestType.BOOL_TEST_TYPE_UNDEFINED, valueOf: BoolTestType.valueOf, enumValues: BoolTestType.values)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  BooleanTest clone() => BooleanTest()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  BooleanTest copyWith(void Function(BooleanTest) updates) => super.copyWith((message) => updates(message as BooleanTest)) as BooleanTest;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static BooleanTest create() => BooleanTest._();
  BooleanTest createEmptyInstance() => create();
  static $pb.PbList<BooleanTest> createRepeated() => $pb.PbList<BooleanTest>();
  @$core.pragma('dart2js:noInline')
  static BooleanTest getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<BooleanTest>(create);
  static BooleanTest? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  BoolTestType get booltesttype => $_getN(2);
  @$pb.TagNumber(3)
  set booltesttype(BoolTestType v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBooltesttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearBooltesttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class CoerceToDomain extends $pb.GeneratedMessage {
  factory CoerceToDomain({
    Node? xpr,
    Node? arg,
    $core.int? resulttype,
    $core.int? resulttypmod,
    $core.int? resultcollid,
    CoercionForm? coercionformat,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (resulttype != null) {
      $result.resulttype = resulttype;
    }
    if (resulttypmod != null) {
      $result.resulttypmod = resulttypmod;
    }
    if (resultcollid != null) {
      $result.resultcollid = resultcollid;
    }
    if (coercionformat != null) {
      $result.coercionformat = coercionformat;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CoerceToDomain._() : super();
  factory CoerceToDomain.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CoerceToDomain.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CoerceToDomain', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'resulttype', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'resulttypmod', $pb.PbFieldType.O3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'resultcollid', $pb.PbFieldType.OU3)
    ..e<CoercionForm>(6, _omitFieldNames ? '' : 'coercionformat', $pb.PbFieldType.OE, defaultOrMaker: CoercionForm.COERCION_FORM_UNDEFINED, valueOf: CoercionForm.valueOf, enumValues: CoercionForm.values)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CoerceToDomain clone() => CoerceToDomain()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CoerceToDomain copyWith(void Function(CoerceToDomain) updates) => super.copyWith((message) => updates(message as CoerceToDomain)) as CoerceToDomain;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CoerceToDomain create() => CoerceToDomain._();
  CoerceToDomain createEmptyInstance() => create();
  static $pb.PbList<CoerceToDomain> createRepeated() => $pb.PbList<CoerceToDomain>();
  @$core.pragma('dart2js:noInline')
  static CoerceToDomain getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CoerceToDomain>(create);
  static CoerceToDomain? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get resulttype => $_getIZ(2);
  @$pb.TagNumber(3)
  set resulttype($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasResulttype() => $_has(2);
  @$pb.TagNumber(3)
  void clearResulttype() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get resulttypmod => $_getIZ(3);
  @$pb.TagNumber(4)
  set resulttypmod($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasResulttypmod() => $_has(3);
  @$pb.TagNumber(4)
  void clearResulttypmod() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get resultcollid => $_getIZ(4);
  @$pb.TagNumber(5)
  set resultcollid($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasResultcollid() => $_has(4);
  @$pb.TagNumber(5)
  void clearResultcollid() => clearField(5);

  @$pb.TagNumber(6)
  CoercionForm get coercionformat => $_getN(5);
  @$pb.TagNumber(6)
  set coercionformat(CoercionForm v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasCoercionformat() => $_has(5);
  @$pb.TagNumber(6)
  void clearCoercionformat() => clearField(6);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class CoerceToDomainValue extends $pb.GeneratedMessage {
  factory CoerceToDomainValue({
    Node? xpr,
    $core.int? typeId,
    $core.int? typeMod,
    $core.int? collation,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (typeId != null) {
      $result.typeId = typeId;
    }
    if (typeMod != null) {
      $result.typeMod = typeMod;
    }
    if (collation != null) {
      $result.collation = collation;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CoerceToDomainValue._() : super();
  factory CoerceToDomainValue.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CoerceToDomainValue.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CoerceToDomainValue', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'typeId', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'typeMod', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'collation', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CoerceToDomainValue clone() => CoerceToDomainValue()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CoerceToDomainValue copyWith(void Function(CoerceToDomainValue) updates) => super.copyWith((message) => updates(message as CoerceToDomainValue)) as CoerceToDomainValue;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CoerceToDomainValue create() => CoerceToDomainValue._();
  CoerceToDomainValue createEmptyInstance() => create();
  static $pb.PbList<CoerceToDomainValue> createRepeated() => $pb.PbList<CoerceToDomainValue>();
  @$core.pragma('dart2js:noInline')
  static CoerceToDomainValue getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CoerceToDomainValue>(create);
  static CoerceToDomainValue? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get typeId => $_getIZ(1);
  @$pb.TagNumber(2)
  set typeId($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeId() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeId() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get typeMod => $_getIZ(2);
  @$pb.TagNumber(3)
  set typeMod($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasTypeMod() => $_has(2);
  @$pb.TagNumber(3)
  void clearTypeMod() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get collation => $_getIZ(3);
  @$pb.TagNumber(4)
  set collation($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasCollation() => $_has(3);
  @$pb.TagNumber(4)
  void clearCollation() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class SetToDefault extends $pb.GeneratedMessage {
  factory SetToDefault({
    Node? xpr,
    $core.int? typeId,
    $core.int? typeMod,
    $core.int? collation,
    $core.int? location,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (typeId != null) {
      $result.typeId = typeId;
    }
    if (typeMod != null) {
      $result.typeMod = typeMod;
    }
    if (collation != null) {
      $result.collation = collation;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  SetToDefault._() : super();
  factory SetToDefault.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SetToDefault.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SetToDefault', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'typeId', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'typeMod', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'collation', $pb.PbFieldType.OU3)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SetToDefault clone() => SetToDefault()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SetToDefault copyWith(void Function(SetToDefault) updates) => super.copyWith((message) => updates(message as SetToDefault)) as SetToDefault;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SetToDefault create() => SetToDefault._();
  SetToDefault createEmptyInstance() => create();
  static $pb.PbList<SetToDefault> createRepeated() => $pb.PbList<SetToDefault>();
  @$core.pragma('dart2js:noInline')
  static SetToDefault getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SetToDefault>(create);
  static SetToDefault? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get typeId => $_getIZ(1);
  @$pb.TagNumber(2)
  set typeId($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeId() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeId() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get typeMod => $_getIZ(2);
  @$pb.TagNumber(3)
  set typeMod($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasTypeMod() => $_has(2);
  @$pb.TagNumber(3)
  void clearTypeMod() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get collation => $_getIZ(3);
  @$pb.TagNumber(4)
  set collation($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasCollation() => $_has(3);
  @$pb.TagNumber(4)
  void clearCollation() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class CurrentOfExpr extends $pb.GeneratedMessage {
  factory CurrentOfExpr({
    Node? xpr,
    $core.int? cvarno,
    $core.String? cursorName,
    $core.int? cursorParam,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (cvarno != null) {
      $result.cvarno = cvarno;
    }
    if (cursorName != null) {
      $result.cursorName = cursorName;
    }
    if (cursorParam != null) {
      $result.cursorParam = cursorParam;
    }
    return $result;
  }
  CurrentOfExpr._() : super();
  factory CurrentOfExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CurrentOfExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CurrentOfExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'cvarno', $pb.PbFieldType.OU3)
    ..aOS(3, _omitFieldNames ? '' : 'cursor_name')
    ..a<$core.int>(4, _omitFieldNames ? '' : 'cursor_param', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CurrentOfExpr clone() => CurrentOfExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CurrentOfExpr copyWith(void Function(CurrentOfExpr) updates) => super.copyWith((message) => updates(message as CurrentOfExpr)) as CurrentOfExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CurrentOfExpr create() => CurrentOfExpr._();
  CurrentOfExpr createEmptyInstance() => create();
  static $pb.PbList<CurrentOfExpr> createRepeated() => $pb.PbList<CurrentOfExpr>();
  @$core.pragma('dart2js:noInline')
  static CurrentOfExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CurrentOfExpr>(create);
  static CurrentOfExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get cvarno => $_getIZ(1);
  @$pb.TagNumber(2)
  set cvarno($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasCvarno() => $_has(1);
  @$pb.TagNumber(2)
  void clearCvarno() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get cursorName => $_getSZ(2);
  @$pb.TagNumber(3)
  set cursorName($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasCursorName() => $_has(2);
  @$pb.TagNumber(3)
  void clearCursorName() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get cursorParam => $_getIZ(3);
  @$pb.TagNumber(4)
  set cursorParam($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasCursorParam() => $_has(3);
  @$pb.TagNumber(4)
  void clearCursorParam() => clearField(4);
}

class NextValueExpr extends $pb.GeneratedMessage {
  factory NextValueExpr({
    Node? xpr,
    $core.int? seqid,
    $core.int? typeId,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (seqid != null) {
      $result.seqid = seqid;
    }
    if (typeId != null) {
      $result.typeId = typeId;
    }
    return $result;
  }
  NextValueExpr._() : super();
  factory NextValueExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory NextValueExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'NextValueExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'seqid', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'typeId', $pb.PbFieldType.OU3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  NextValueExpr clone() => NextValueExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  NextValueExpr copyWith(void Function(NextValueExpr) updates) => super.copyWith((message) => updates(message as NextValueExpr)) as NextValueExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static NextValueExpr create() => NextValueExpr._();
  NextValueExpr createEmptyInstance() => create();
  static $pb.PbList<NextValueExpr> createRepeated() => $pb.PbList<NextValueExpr>();
  @$core.pragma('dart2js:noInline')
  static NextValueExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<NextValueExpr>(create);
  static NextValueExpr? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get seqid => $_getIZ(1);
  @$pb.TagNumber(2)
  set seqid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasSeqid() => $_has(1);
  @$pb.TagNumber(2)
  void clearSeqid() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get typeId => $_getIZ(2);
  @$pb.TagNumber(3)
  set typeId($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasTypeId() => $_has(2);
  @$pb.TagNumber(3)
  void clearTypeId() => clearField(3);
}

class InferenceElem extends $pb.GeneratedMessage {
  factory InferenceElem({
    Node? xpr,
    Node? expr,
    $core.int? infercollid,
    $core.int? inferopclass,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (expr != null) {
      $result.expr = expr;
    }
    if (infercollid != null) {
      $result.infercollid = infercollid;
    }
    if (inferopclass != null) {
      $result.inferopclass = inferopclass;
    }
    return $result;
  }
  InferenceElem._() : super();
  factory InferenceElem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory InferenceElem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'InferenceElem', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'expr', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'infercollid', $pb.PbFieldType.OU3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'inferopclass', $pb.PbFieldType.OU3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  InferenceElem clone() => InferenceElem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  InferenceElem copyWith(void Function(InferenceElem) updates) => super.copyWith((message) => updates(message as InferenceElem)) as InferenceElem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static InferenceElem create() => InferenceElem._();
  InferenceElem createEmptyInstance() => create();
  static $pb.PbList<InferenceElem> createRepeated() => $pb.PbList<InferenceElem>();
  @$core.pragma('dart2js:noInline')
  static InferenceElem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<InferenceElem>(create);
  static InferenceElem? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get expr => $_getN(1);
  @$pb.TagNumber(2)
  set expr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasExpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearExpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureExpr() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get infercollid => $_getIZ(2);
  @$pb.TagNumber(3)
  set infercollid($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasInfercollid() => $_has(2);
  @$pb.TagNumber(3)
  void clearInfercollid() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get inferopclass => $_getIZ(3);
  @$pb.TagNumber(4)
  set inferopclass($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasInferopclass() => $_has(3);
  @$pb.TagNumber(4)
  void clearInferopclass() => clearField(4);
}

class TargetEntry extends $pb.GeneratedMessage {
  factory TargetEntry({
    Node? xpr,
    Node? expr,
    $core.int? resno,
    $core.String? resname,
    $core.int? ressortgroupref,
    $core.int? resorigtbl,
    $core.int? resorigcol,
    $core.bool? resjunk,
  }) {
    final $result = create();
    if (xpr != null) {
      $result.xpr = xpr;
    }
    if (expr != null) {
      $result.expr = expr;
    }
    if (resno != null) {
      $result.resno = resno;
    }
    if (resname != null) {
      $result.resname = resname;
    }
    if (ressortgroupref != null) {
      $result.ressortgroupref = ressortgroupref;
    }
    if (resorigtbl != null) {
      $result.resorigtbl = resorigtbl;
    }
    if (resorigcol != null) {
      $result.resorigcol = resorigcol;
    }
    if (resjunk != null) {
      $result.resjunk = resjunk;
    }
    return $result;
  }
  TargetEntry._() : super();
  factory TargetEntry.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TargetEntry.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TargetEntry', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'xpr', subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'expr', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'resno', $pb.PbFieldType.O3)
    ..aOS(4, _omitFieldNames ? '' : 'resname')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'ressortgroupref', $pb.PbFieldType.OU3)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'resorigtbl', $pb.PbFieldType.OU3)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'resorigcol', $pb.PbFieldType.O3)
    ..aOB(8, _omitFieldNames ? '' : 'resjunk')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TargetEntry clone() => TargetEntry()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TargetEntry copyWith(void Function(TargetEntry) updates) => super.copyWith((message) => updates(message as TargetEntry)) as TargetEntry;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TargetEntry create() => TargetEntry._();
  TargetEntry createEmptyInstance() => create();
  static $pb.PbList<TargetEntry> createRepeated() => $pb.PbList<TargetEntry>();
  @$core.pragma('dart2js:noInline')
  static TargetEntry getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TargetEntry>(create);
  static TargetEntry? _defaultInstance;

  @$pb.TagNumber(1)
  Node get xpr => $_getN(0);
  @$pb.TagNumber(1)
  set xpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearXpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureXpr() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get expr => $_getN(1);
  @$pb.TagNumber(2)
  set expr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasExpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearExpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureExpr() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get resno => $_getIZ(2);
  @$pb.TagNumber(3)
  set resno($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasResno() => $_has(2);
  @$pb.TagNumber(3)
  void clearResno() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get resname => $_getSZ(3);
  @$pb.TagNumber(4)
  set resname($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasResname() => $_has(3);
  @$pb.TagNumber(4)
  void clearResname() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get ressortgroupref => $_getIZ(4);
  @$pb.TagNumber(5)
  set ressortgroupref($core.int v) { $_setUnsignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasRessortgroupref() => $_has(4);
  @$pb.TagNumber(5)
  void clearRessortgroupref() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get resorigtbl => $_getIZ(5);
  @$pb.TagNumber(6)
  set resorigtbl($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasResorigtbl() => $_has(5);
  @$pb.TagNumber(6)
  void clearResorigtbl() => clearField(6);

  @$pb.TagNumber(7)
  $core.int get resorigcol => $_getIZ(6);
  @$pb.TagNumber(7)
  set resorigcol($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasResorigcol() => $_has(6);
  @$pb.TagNumber(7)
  void clearResorigcol() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get resjunk => $_getBF(7);
  @$pb.TagNumber(8)
  set resjunk($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasResjunk() => $_has(7);
  @$pb.TagNumber(8)
  void clearResjunk() => clearField(8);
}

class RangeTblRef extends $pb.GeneratedMessage {
  factory RangeTblRef({
    $core.int? rtindex,
  }) {
    final $result = create();
    if (rtindex != null) {
      $result.rtindex = rtindex;
    }
    return $result;
  }
  RangeTblRef._() : super();
  factory RangeTblRef.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeTblRef.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeTblRef', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'rtindex', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeTblRef clone() => RangeTblRef()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeTblRef copyWith(void Function(RangeTblRef) updates) => super.copyWith((message) => updates(message as RangeTblRef)) as RangeTblRef;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeTblRef create() => RangeTblRef._();
  RangeTblRef createEmptyInstance() => create();
  static $pb.PbList<RangeTblRef> createRepeated() => $pb.PbList<RangeTblRef>();
  @$core.pragma('dart2js:noInline')
  static RangeTblRef getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeTblRef>(create);
  static RangeTblRef? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get rtindex => $_getIZ(0);
  @$pb.TagNumber(1)
  set rtindex($core.int v) { $_setSignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasRtindex() => $_has(0);
  @$pb.TagNumber(1)
  void clearRtindex() => clearField(1);
}

class JoinExpr extends $pb.GeneratedMessage {
  factory JoinExpr({
    JoinType? jointype,
    $core.bool? isNatural,
    Node? larg,
    Node? rarg,
    $core.Iterable<Node>? usingClause,
    Alias? joinUsingAlias,
    Node? quals,
    Alias? alias,
    $core.int? rtindex,
  }) {
    final $result = create();
    if (jointype != null) {
      $result.jointype = jointype;
    }
    if (isNatural != null) {
      $result.isNatural = isNatural;
    }
    if (larg != null) {
      $result.larg = larg;
    }
    if (rarg != null) {
      $result.rarg = rarg;
    }
    if (usingClause != null) {
      $result.usingClause.addAll(usingClause);
    }
    if (joinUsingAlias != null) {
      $result.joinUsingAlias = joinUsingAlias;
    }
    if (quals != null) {
      $result.quals = quals;
    }
    if (alias != null) {
      $result.alias = alias;
    }
    if (rtindex != null) {
      $result.rtindex = rtindex;
    }
    return $result;
  }
  JoinExpr._() : super();
  factory JoinExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JoinExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JoinExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<JoinType>(1, _omitFieldNames ? '' : 'jointype', $pb.PbFieldType.OE, defaultOrMaker: JoinType.JOIN_TYPE_UNDEFINED, valueOf: JoinType.valueOf, enumValues: JoinType.values)
    ..aOB(2, _omitFieldNames ? '' : 'isNatural')
    ..aOM<Node>(3, _omitFieldNames ? '' : 'larg', subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'rarg', subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'usingClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Alias>(6, _omitFieldNames ? '' : 'join_using_alias', subBuilder: Alias.create)
    ..aOM<Node>(7, _omitFieldNames ? '' : 'quals', subBuilder: Node.create)
    ..aOM<Alias>(8, _omitFieldNames ? '' : 'alias', subBuilder: Alias.create)
    ..a<$core.int>(9, _omitFieldNames ? '' : 'rtindex', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JoinExpr clone() => JoinExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JoinExpr copyWith(void Function(JoinExpr) updates) => super.copyWith((message) => updates(message as JoinExpr)) as JoinExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JoinExpr create() => JoinExpr._();
  JoinExpr createEmptyInstance() => create();
  static $pb.PbList<JoinExpr> createRepeated() => $pb.PbList<JoinExpr>();
  @$core.pragma('dart2js:noInline')
  static JoinExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JoinExpr>(create);
  static JoinExpr? _defaultInstance;

  @$pb.TagNumber(1)
  JoinType get jointype => $_getN(0);
  @$pb.TagNumber(1)
  set jointype(JoinType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasJointype() => $_has(0);
  @$pb.TagNumber(1)
  void clearJointype() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get isNatural => $_getBF(1);
  @$pb.TagNumber(2)
  set isNatural($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasIsNatural() => $_has(1);
  @$pb.TagNumber(2)
  void clearIsNatural() => clearField(2);

  @$pb.TagNumber(3)
  Node get larg => $_getN(2);
  @$pb.TagNumber(3)
  set larg(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLarg() => $_has(2);
  @$pb.TagNumber(3)
  void clearLarg() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureLarg() => $_ensure(2);

  @$pb.TagNumber(4)
  Node get rarg => $_getN(3);
  @$pb.TagNumber(4)
  set rarg(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasRarg() => $_has(3);
  @$pb.TagNumber(4)
  void clearRarg() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureRarg() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get usingClause => $_getList(4);

  @$pb.TagNumber(6)
  Alias get joinUsingAlias => $_getN(5);
  @$pb.TagNumber(6)
  set joinUsingAlias(Alias v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasJoinUsingAlias() => $_has(5);
  @$pb.TagNumber(6)
  void clearJoinUsingAlias() => clearField(6);
  @$pb.TagNumber(6)
  Alias ensureJoinUsingAlias() => $_ensure(5);

  @$pb.TagNumber(7)
  Node get quals => $_getN(6);
  @$pb.TagNumber(7)
  set quals(Node v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasQuals() => $_has(6);
  @$pb.TagNumber(7)
  void clearQuals() => clearField(7);
  @$pb.TagNumber(7)
  Node ensureQuals() => $_ensure(6);

  @$pb.TagNumber(8)
  Alias get alias => $_getN(7);
  @$pb.TagNumber(8)
  set alias(Alias v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasAlias() => $_has(7);
  @$pb.TagNumber(8)
  void clearAlias() => clearField(8);
  @$pb.TagNumber(8)
  Alias ensureAlias() => $_ensure(7);

  @$pb.TagNumber(9)
  $core.int get rtindex => $_getIZ(8);
  @$pb.TagNumber(9)
  set rtindex($core.int v) { $_setSignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasRtindex() => $_has(8);
  @$pb.TagNumber(9)
  void clearRtindex() => clearField(9);
}

class FromExpr extends $pb.GeneratedMessage {
  factory FromExpr({
    $core.Iterable<Node>? fromlist,
    Node? quals,
  }) {
    final $result = create();
    if (fromlist != null) {
      $result.fromlist.addAll(fromlist);
    }
    if (quals != null) {
      $result.quals = quals;
    }
    return $result;
  }
  FromExpr._() : super();
  factory FromExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FromExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FromExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'fromlist', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'quals', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FromExpr clone() => FromExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FromExpr copyWith(void Function(FromExpr) updates) => super.copyWith((message) => updates(message as FromExpr)) as FromExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FromExpr create() => FromExpr._();
  FromExpr createEmptyInstance() => create();
  static $pb.PbList<FromExpr> createRepeated() => $pb.PbList<FromExpr>();
  @$core.pragma('dart2js:noInline')
  static FromExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FromExpr>(create);
  static FromExpr? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get fromlist => $_getList(0);

  @$pb.TagNumber(2)
  Node get quals => $_getN(1);
  @$pb.TagNumber(2)
  set quals(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasQuals() => $_has(1);
  @$pb.TagNumber(2)
  void clearQuals() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureQuals() => $_ensure(1);
}

class OnConflictExpr extends $pb.GeneratedMessage {
  factory OnConflictExpr({
    OnConflictAction? action,
    $core.Iterable<Node>? arbiterElems,
    Node? arbiterWhere,
    $core.int? constraint,
    $core.Iterable<Node>? onConflictSet,
    Node? onConflictWhere,
    $core.int? exclRelIndex,
    $core.Iterable<Node>? exclRelTlist,
  }) {
    final $result = create();
    if (action != null) {
      $result.action = action;
    }
    if (arbiterElems != null) {
      $result.arbiterElems.addAll(arbiterElems);
    }
    if (arbiterWhere != null) {
      $result.arbiterWhere = arbiterWhere;
    }
    if (constraint != null) {
      $result.constraint = constraint;
    }
    if (onConflictSet != null) {
      $result.onConflictSet.addAll(onConflictSet);
    }
    if (onConflictWhere != null) {
      $result.onConflictWhere = onConflictWhere;
    }
    if (exclRelIndex != null) {
      $result.exclRelIndex = exclRelIndex;
    }
    if (exclRelTlist != null) {
      $result.exclRelTlist.addAll(exclRelTlist);
    }
    return $result;
  }
  OnConflictExpr._() : super();
  factory OnConflictExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory OnConflictExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'OnConflictExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<OnConflictAction>(1, _omitFieldNames ? '' : 'action', $pb.PbFieldType.OE, defaultOrMaker: OnConflictAction.ON_CONFLICT_ACTION_UNDEFINED, valueOf: OnConflictAction.valueOf, enumValues: OnConflictAction.values)
    ..pc<Node>(2, _omitFieldNames ? '' : 'arbiterElems', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'arbiterWhere', subBuilder: Node.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'constraint', $pb.PbFieldType.OU3)
    ..pc<Node>(5, _omitFieldNames ? '' : 'onConflictSet', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(6, _omitFieldNames ? '' : 'onConflictWhere', subBuilder: Node.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'exclRelIndex', $pb.PbFieldType.O3)
    ..pc<Node>(8, _omitFieldNames ? '' : 'exclRelTlist', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  OnConflictExpr clone() => OnConflictExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  OnConflictExpr copyWith(void Function(OnConflictExpr) updates) => super.copyWith((message) => updates(message as OnConflictExpr)) as OnConflictExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static OnConflictExpr create() => OnConflictExpr._();
  OnConflictExpr createEmptyInstance() => create();
  static $pb.PbList<OnConflictExpr> createRepeated() => $pb.PbList<OnConflictExpr>();
  @$core.pragma('dart2js:noInline')
  static OnConflictExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<OnConflictExpr>(create);
  static OnConflictExpr? _defaultInstance;

  @$pb.TagNumber(1)
  OnConflictAction get action => $_getN(0);
  @$pb.TagNumber(1)
  set action(OnConflictAction v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasAction() => $_has(0);
  @$pb.TagNumber(1)
  void clearAction() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get arbiterElems => $_getList(1);

  @$pb.TagNumber(3)
  Node get arbiterWhere => $_getN(2);
  @$pb.TagNumber(3)
  set arbiterWhere(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasArbiterWhere() => $_has(2);
  @$pb.TagNumber(3)
  void clearArbiterWhere() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureArbiterWhere() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.int get constraint => $_getIZ(3);
  @$pb.TagNumber(4)
  set constraint($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasConstraint() => $_has(3);
  @$pb.TagNumber(4)
  void clearConstraint() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get onConflictSet => $_getList(4);

  @$pb.TagNumber(6)
  Node get onConflictWhere => $_getN(5);
  @$pb.TagNumber(6)
  set onConflictWhere(Node v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasOnConflictWhere() => $_has(5);
  @$pb.TagNumber(6)
  void clearOnConflictWhere() => clearField(6);
  @$pb.TagNumber(6)
  Node ensureOnConflictWhere() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.int get exclRelIndex => $_getIZ(6);
  @$pb.TagNumber(7)
  set exclRelIndex($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasExclRelIndex() => $_has(6);
  @$pb.TagNumber(7)
  void clearExclRelIndex() => clearField(7);

  @$pb.TagNumber(8)
  $core.List<Node> get exclRelTlist => $_getList(7);
}

class Query extends $pb.GeneratedMessage {
  factory Query({
    CmdType? commandType,
    QuerySource? querySource,
    $core.bool? canSetTag,
    Node? utilityStmt,
    $core.int? resultRelation,
    $core.bool? hasAggs,
    $core.bool? hasWindowFuncs,
    $core.bool? hasTargetSrfs,
    $core.bool? hasSubLinks,
    $core.bool? hasDistinctOn,
    $core.bool? hasRecursive,
    $core.bool? hasModifyingCte,
    $core.bool? hasForUpdate,
    $core.bool? hasRowSecurity,
    $core.bool? isReturn,
    $core.Iterable<Node>? cteList,
    $core.Iterable<Node>? rtable,
    $core.Iterable<Node>? rteperminfos,
    FromExpr? jointree,
    $core.Iterable<Node>? mergeActionList,
    $core.bool? mergeUseOuterJoin,
    $core.Iterable<Node>? targetList,
    OverridingKind? override,
    OnConflictExpr? onConflict,
    $core.Iterable<Node>? returningList,
    $core.Iterable<Node>? groupClause,
    $core.bool? groupDistinct,
    $core.Iterable<Node>? groupingSets,
    Node? havingQual,
    $core.Iterable<Node>? windowClause,
    $core.Iterable<Node>? distinctClause,
    $core.Iterable<Node>? sortClause,
    Node? limitOffset,
    Node? limitCount,
    LimitOption? limitOption,
    $core.Iterable<Node>? rowMarks,
    Node? setOperations,
    $core.Iterable<Node>? constraintDeps,
    $core.Iterable<Node>? withCheckOptions,
    $core.int? stmtLocation,
    $core.int? stmtLen,
  }) {
    final $result = create();
    if (commandType != null) {
      $result.commandType = commandType;
    }
    if (querySource != null) {
      $result.querySource = querySource;
    }
    if (canSetTag != null) {
      $result.canSetTag = canSetTag;
    }
    if (utilityStmt != null) {
      $result.utilityStmt = utilityStmt;
    }
    if (resultRelation != null) {
      $result.resultRelation = resultRelation;
    }
    if (hasAggs != null) {
      $result.hasAggs = hasAggs;
    }
    if (hasWindowFuncs != null) {
      $result.hasWindowFuncs = hasWindowFuncs;
    }
    if (hasTargetSrfs != null) {
      $result.hasTargetSrfs = hasTargetSrfs;
    }
    if (hasSubLinks != null) {
      $result.hasSubLinks = hasSubLinks;
    }
    if (hasDistinctOn != null) {
      $result.hasDistinctOn = hasDistinctOn;
    }
    if (hasRecursive != null) {
      $result.hasRecursive = hasRecursive;
    }
    if (hasModifyingCte != null) {
      $result.hasModifyingCte = hasModifyingCte;
    }
    if (hasForUpdate != null) {
      $result.hasForUpdate = hasForUpdate;
    }
    if (hasRowSecurity != null) {
      $result.hasRowSecurity = hasRowSecurity;
    }
    if (isReturn != null) {
      $result.isReturn = isReturn;
    }
    if (cteList != null) {
      $result.cteList.addAll(cteList);
    }
    if (rtable != null) {
      $result.rtable.addAll(rtable);
    }
    if (rteperminfos != null) {
      $result.rteperminfos.addAll(rteperminfos);
    }
    if (jointree != null) {
      $result.jointree = jointree;
    }
    if (mergeActionList != null) {
      $result.mergeActionList.addAll(mergeActionList);
    }
    if (mergeUseOuterJoin != null) {
      $result.mergeUseOuterJoin = mergeUseOuterJoin;
    }
    if (targetList != null) {
      $result.targetList.addAll(targetList);
    }
    if (override != null) {
      $result.override = override;
    }
    if (onConflict != null) {
      $result.onConflict = onConflict;
    }
    if (returningList != null) {
      $result.returningList.addAll(returningList);
    }
    if (groupClause != null) {
      $result.groupClause.addAll(groupClause);
    }
    if (groupDistinct != null) {
      $result.groupDistinct = groupDistinct;
    }
    if (groupingSets != null) {
      $result.groupingSets.addAll(groupingSets);
    }
    if (havingQual != null) {
      $result.havingQual = havingQual;
    }
    if (windowClause != null) {
      $result.windowClause.addAll(windowClause);
    }
    if (distinctClause != null) {
      $result.distinctClause.addAll(distinctClause);
    }
    if (sortClause != null) {
      $result.sortClause.addAll(sortClause);
    }
    if (limitOffset != null) {
      $result.limitOffset = limitOffset;
    }
    if (limitCount != null) {
      $result.limitCount = limitCount;
    }
    if (limitOption != null) {
      $result.limitOption = limitOption;
    }
    if (rowMarks != null) {
      $result.rowMarks.addAll(rowMarks);
    }
    if (setOperations != null) {
      $result.setOperations = setOperations;
    }
    if (constraintDeps != null) {
      $result.constraintDeps.addAll(constraintDeps);
    }
    if (withCheckOptions != null) {
      $result.withCheckOptions.addAll(withCheckOptions);
    }
    if (stmtLocation != null) {
      $result.stmtLocation = stmtLocation;
    }
    if (stmtLen != null) {
      $result.stmtLen = stmtLen;
    }
    return $result;
  }
  Query._() : super();
  factory Query.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Query.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Query', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<CmdType>(1, _omitFieldNames ? '' : 'commandType', $pb.PbFieldType.OE, defaultOrMaker: CmdType.CMD_TYPE_UNDEFINED, valueOf: CmdType.valueOf, enumValues: CmdType.values)
    ..e<QuerySource>(2, _omitFieldNames ? '' : 'querySource', $pb.PbFieldType.OE, defaultOrMaker: QuerySource.QUERY_SOURCE_UNDEFINED, valueOf: QuerySource.valueOf, enumValues: QuerySource.values)
    ..aOB(3, _omitFieldNames ? '' : 'canSetTag')
    ..aOM<Node>(4, _omitFieldNames ? '' : 'utilityStmt', subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'resultRelation', $pb.PbFieldType.O3)
    ..aOB(6, _omitFieldNames ? '' : 'hasAggs')
    ..aOB(7, _omitFieldNames ? '' : 'hasWindowFuncs')
    ..aOB(8, _omitFieldNames ? '' : 'hasTargetSRFs', protoName: 'has_target_srfs')
    ..aOB(9, _omitFieldNames ? '' : 'hasSubLinks')
    ..aOB(10, _omitFieldNames ? '' : 'hasDistinctOn')
    ..aOB(11, _omitFieldNames ? '' : 'hasRecursive')
    ..aOB(12, _omitFieldNames ? '' : 'hasModifyingCTE', protoName: 'has_modifying_cte')
    ..aOB(13, _omitFieldNames ? '' : 'hasForUpdate')
    ..aOB(14, _omitFieldNames ? '' : 'hasRowSecurity')
    ..aOB(15, _omitFieldNames ? '' : 'isReturn')
    ..pc<Node>(16, _omitFieldNames ? '' : 'cteList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(17, _omitFieldNames ? '' : 'rtable', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(18, _omitFieldNames ? '' : 'rteperminfos', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<FromExpr>(19, _omitFieldNames ? '' : 'jointree', subBuilder: FromExpr.create)
    ..pc<Node>(20, _omitFieldNames ? '' : 'mergeActionList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(21, _omitFieldNames ? '' : 'mergeUseOuterJoin')
    ..pc<Node>(22, _omitFieldNames ? '' : 'targetList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<OverridingKind>(23, _omitFieldNames ? '' : 'override', $pb.PbFieldType.OE, defaultOrMaker: OverridingKind.OVERRIDING_KIND_UNDEFINED, valueOf: OverridingKind.valueOf, enumValues: OverridingKind.values)
    ..aOM<OnConflictExpr>(24, _omitFieldNames ? '' : 'onConflict', subBuilder: OnConflictExpr.create)
    ..pc<Node>(25, _omitFieldNames ? '' : 'returningList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(26, _omitFieldNames ? '' : 'groupClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(27, _omitFieldNames ? '' : 'groupDistinct')
    ..pc<Node>(28, _omitFieldNames ? '' : 'groupingSets', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(29, _omitFieldNames ? '' : 'havingQual', subBuilder: Node.create)
    ..pc<Node>(30, _omitFieldNames ? '' : 'windowClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(31, _omitFieldNames ? '' : 'distinctClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(32, _omitFieldNames ? '' : 'sortClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(33, _omitFieldNames ? '' : 'limitOffset', subBuilder: Node.create)
    ..aOM<Node>(34, _omitFieldNames ? '' : 'limitCount', subBuilder: Node.create)
    ..e<LimitOption>(35, _omitFieldNames ? '' : 'limitOption', $pb.PbFieldType.OE, defaultOrMaker: LimitOption.LIMIT_OPTION_UNDEFINED, valueOf: LimitOption.valueOf, enumValues: LimitOption.values)
    ..pc<Node>(36, _omitFieldNames ? '' : 'rowMarks', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(37, _omitFieldNames ? '' : 'setOperations', subBuilder: Node.create)
    ..pc<Node>(38, _omitFieldNames ? '' : 'constraintDeps', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(39, _omitFieldNames ? '' : 'withCheckOptions', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(40, _omitFieldNames ? '' : 'stmt_location', $pb.PbFieldType.O3)
    ..a<$core.int>(41, _omitFieldNames ? '' : 'stmt_len', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Query clone() => Query()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Query copyWith(void Function(Query) updates) => super.copyWith((message) => updates(message as Query)) as Query;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Query create() => Query._();
  Query createEmptyInstance() => create();
  static $pb.PbList<Query> createRepeated() => $pb.PbList<Query>();
  @$core.pragma('dart2js:noInline')
  static Query getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Query>(create);
  static Query? _defaultInstance;

  @$pb.TagNumber(1)
  CmdType get commandType => $_getN(0);
  @$pb.TagNumber(1)
  set commandType(CmdType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasCommandType() => $_has(0);
  @$pb.TagNumber(1)
  void clearCommandType() => clearField(1);

  @$pb.TagNumber(2)
  QuerySource get querySource => $_getN(1);
  @$pb.TagNumber(2)
  set querySource(QuerySource v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasQuerySource() => $_has(1);
  @$pb.TagNumber(2)
  void clearQuerySource() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get canSetTag => $_getBF(2);
  @$pb.TagNumber(3)
  set canSetTag($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasCanSetTag() => $_has(2);
  @$pb.TagNumber(3)
  void clearCanSetTag() => clearField(3);

  @$pb.TagNumber(4)
  Node get utilityStmt => $_getN(3);
  @$pb.TagNumber(4)
  set utilityStmt(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasUtilityStmt() => $_has(3);
  @$pb.TagNumber(4)
  void clearUtilityStmt() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureUtilityStmt() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.int get resultRelation => $_getIZ(4);
  @$pb.TagNumber(5)
  set resultRelation($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasResultRelation() => $_has(4);
  @$pb.TagNumber(5)
  void clearResultRelation() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get hasAggs => $_getBF(5);
  @$pb.TagNumber(6)
  set hasAggs($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasHasAggs() => $_has(5);
  @$pb.TagNumber(6)
  void clearHasAggs() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get hasWindowFuncs => $_getBF(6);
  @$pb.TagNumber(7)
  set hasWindowFuncs($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasHasWindowFuncs() => $_has(6);
  @$pb.TagNumber(7)
  void clearHasWindowFuncs() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get hasTargetSrfs => $_getBF(7);
  @$pb.TagNumber(8)
  set hasTargetSrfs($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasHasTargetSrfs() => $_has(7);
  @$pb.TagNumber(8)
  void clearHasTargetSrfs() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get hasSubLinks => $_getBF(8);
  @$pb.TagNumber(9)
  set hasSubLinks($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasHasSubLinks() => $_has(8);
  @$pb.TagNumber(9)
  void clearHasSubLinks() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get hasDistinctOn => $_getBF(9);
  @$pb.TagNumber(10)
  set hasDistinctOn($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasHasDistinctOn() => $_has(9);
  @$pb.TagNumber(10)
  void clearHasDistinctOn() => clearField(10);

  @$pb.TagNumber(11)
  $core.bool get hasRecursive => $_getBF(10);
  @$pb.TagNumber(11)
  set hasRecursive($core.bool v) { $_setBool(10, v); }
  @$pb.TagNumber(11)
  $core.bool hasHasRecursive() => $_has(10);
  @$pb.TagNumber(11)
  void clearHasRecursive() => clearField(11);

  @$pb.TagNumber(12)
  $core.bool get hasModifyingCte => $_getBF(11);
  @$pb.TagNumber(12)
  set hasModifyingCte($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(12)
  $core.bool hasHasModifyingCte() => $_has(11);
  @$pb.TagNumber(12)
  void clearHasModifyingCte() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get hasForUpdate => $_getBF(12);
  @$pb.TagNumber(13)
  set hasForUpdate($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(13)
  $core.bool hasHasForUpdate() => $_has(12);
  @$pb.TagNumber(13)
  void clearHasForUpdate() => clearField(13);

  @$pb.TagNumber(14)
  $core.bool get hasRowSecurity => $_getBF(13);
  @$pb.TagNumber(14)
  set hasRowSecurity($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(14)
  $core.bool hasHasRowSecurity() => $_has(13);
  @$pb.TagNumber(14)
  void clearHasRowSecurity() => clearField(14);

  @$pb.TagNumber(15)
  $core.bool get isReturn => $_getBF(14);
  @$pb.TagNumber(15)
  set isReturn($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(15)
  $core.bool hasIsReturn() => $_has(14);
  @$pb.TagNumber(15)
  void clearIsReturn() => clearField(15);

  @$pb.TagNumber(16)
  $core.List<Node> get cteList => $_getList(15);

  @$pb.TagNumber(17)
  $core.List<Node> get rtable => $_getList(16);

  @$pb.TagNumber(18)
  $core.List<Node> get rteperminfos => $_getList(17);

  @$pb.TagNumber(19)
  FromExpr get jointree => $_getN(18);
  @$pb.TagNumber(19)
  set jointree(FromExpr v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasJointree() => $_has(18);
  @$pb.TagNumber(19)
  void clearJointree() => clearField(19);
  @$pb.TagNumber(19)
  FromExpr ensureJointree() => $_ensure(18);

  @$pb.TagNumber(20)
  $core.List<Node> get mergeActionList => $_getList(19);

  @$pb.TagNumber(21)
  $core.bool get mergeUseOuterJoin => $_getBF(20);
  @$pb.TagNumber(21)
  set mergeUseOuterJoin($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(21)
  $core.bool hasMergeUseOuterJoin() => $_has(20);
  @$pb.TagNumber(21)
  void clearMergeUseOuterJoin() => clearField(21);

  @$pb.TagNumber(22)
  $core.List<Node> get targetList => $_getList(21);

  @$pb.TagNumber(23)
  OverridingKind get override => $_getN(22);
  @$pb.TagNumber(23)
  set override(OverridingKind v) { setField(23, v); }
  @$pb.TagNumber(23)
  $core.bool hasOverride() => $_has(22);
  @$pb.TagNumber(23)
  void clearOverride() => clearField(23);

  @$pb.TagNumber(24)
  OnConflictExpr get onConflict => $_getN(23);
  @$pb.TagNumber(24)
  set onConflict(OnConflictExpr v) { setField(24, v); }
  @$pb.TagNumber(24)
  $core.bool hasOnConflict() => $_has(23);
  @$pb.TagNumber(24)
  void clearOnConflict() => clearField(24);
  @$pb.TagNumber(24)
  OnConflictExpr ensureOnConflict() => $_ensure(23);

  @$pb.TagNumber(25)
  $core.List<Node> get returningList => $_getList(24);

  @$pb.TagNumber(26)
  $core.List<Node> get groupClause => $_getList(25);

  @$pb.TagNumber(27)
  $core.bool get groupDistinct => $_getBF(26);
  @$pb.TagNumber(27)
  set groupDistinct($core.bool v) { $_setBool(26, v); }
  @$pb.TagNumber(27)
  $core.bool hasGroupDistinct() => $_has(26);
  @$pb.TagNumber(27)
  void clearGroupDistinct() => clearField(27);

  @$pb.TagNumber(28)
  $core.List<Node> get groupingSets => $_getList(27);

  @$pb.TagNumber(29)
  Node get havingQual => $_getN(28);
  @$pb.TagNumber(29)
  set havingQual(Node v) { setField(29, v); }
  @$pb.TagNumber(29)
  $core.bool hasHavingQual() => $_has(28);
  @$pb.TagNumber(29)
  void clearHavingQual() => clearField(29);
  @$pb.TagNumber(29)
  Node ensureHavingQual() => $_ensure(28);

  @$pb.TagNumber(30)
  $core.List<Node> get windowClause => $_getList(29);

  @$pb.TagNumber(31)
  $core.List<Node> get distinctClause => $_getList(30);

  @$pb.TagNumber(32)
  $core.List<Node> get sortClause => $_getList(31);

  @$pb.TagNumber(33)
  Node get limitOffset => $_getN(32);
  @$pb.TagNumber(33)
  set limitOffset(Node v) { setField(33, v); }
  @$pb.TagNumber(33)
  $core.bool hasLimitOffset() => $_has(32);
  @$pb.TagNumber(33)
  void clearLimitOffset() => clearField(33);
  @$pb.TagNumber(33)
  Node ensureLimitOffset() => $_ensure(32);

  @$pb.TagNumber(34)
  Node get limitCount => $_getN(33);
  @$pb.TagNumber(34)
  set limitCount(Node v) { setField(34, v); }
  @$pb.TagNumber(34)
  $core.bool hasLimitCount() => $_has(33);
  @$pb.TagNumber(34)
  void clearLimitCount() => clearField(34);
  @$pb.TagNumber(34)
  Node ensureLimitCount() => $_ensure(33);

  @$pb.TagNumber(35)
  LimitOption get limitOption => $_getN(34);
  @$pb.TagNumber(35)
  set limitOption(LimitOption v) { setField(35, v); }
  @$pb.TagNumber(35)
  $core.bool hasLimitOption() => $_has(34);
  @$pb.TagNumber(35)
  void clearLimitOption() => clearField(35);

  @$pb.TagNumber(36)
  $core.List<Node> get rowMarks => $_getList(35);

  @$pb.TagNumber(37)
  Node get setOperations => $_getN(36);
  @$pb.TagNumber(37)
  set setOperations(Node v) { setField(37, v); }
  @$pb.TagNumber(37)
  $core.bool hasSetOperations() => $_has(36);
  @$pb.TagNumber(37)
  void clearSetOperations() => clearField(37);
  @$pb.TagNumber(37)
  Node ensureSetOperations() => $_ensure(36);

  @$pb.TagNumber(38)
  $core.List<Node> get constraintDeps => $_getList(37);

  @$pb.TagNumber(39)
  $core.List<Node> get withCheckOptions => $_getList(38);

  @$pb.TagNumber(40)
  $core.int get stmtLocation => $_getIZ(39);
  @$pb.TagNumber(40)
  set stmtLocation($core.int v) { $_setSignedInt32(39, v); }
  @$pb.TagNumber(40)
  $core.bool hasStmtLocation() => $_has(39);
  @$pb.TagNumber(40)
  void clearStmtLocation() => clearField(40);

  @$pb.TagNumber(41)
  $core.int get stmtLen => $_getIZ(40);
  @$pb.TagNumber(41)
  set stmtLen($core.int v) { $_setSignedInt32(40, v); }
  @$pb.TagNumber(41)
  $core.bool hasStmtLen() => $_has(40);
  @$pb.TagNumber(41)
  void clearStmtLen() => clearField(41);
}

class TypeName extends $pb.GeneratedMessage {
  factory TypeName({
    $core.Iterable<Node>? names,
    $core.int? typeOid,
    $core.bool? setof,
    $core.bool? pctType,
    $core.Iterable<Node>? typmods,
    $core.int? typemod,
    $core.Iterable<Node>? arrayBounds,
    $core.int? location,
  }) {
    final $result = create();
    if (names != null) {
      $result.names.addAll(names);
    }
    if (typeOid != null) {
      $result.typeOid = typeOid;
    }
    if (setof != null) {
      $result.setof = setof;
    }
    if (pctType != null) {
      $result.pctType = pctType;
    }
    if (typmods != null) {
      $result.typmods.addAll(typmods);
    }
    if (typemod != null) {
      $result.typemod = typemod;
    }
    if (arrayBounds != null) {
      $result.arrayBounds.addAll(arrayBounds);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  TypeName._() : super();
  factory TypeName.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TypeName.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TypeName', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'names', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'typeOid', $pb.PbFieldType.OU3)
    ..aOB(3, _omitFieldNames ? '' : 'setof')
    ..aOB(4, _omitFieldNames ? '' : 'pct_type')
    ..pc<Node>(5, _omitFieldNames ? '' : 'typmods', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'typemod', $pb.PbFieldType.O3)
    ..pc<Node>(7, _omitFieldNames ? '' : 'arrayBounds', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TypeName clone() => TypeName()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TypeName copyWith(void Function(TypeName) updates) => super.copyWith((message) => updates(message as TypeName)) as TypeName;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TypeName create() => TypeName._();
  TypeName createEmptyInstance() => create();
  static $pb.PbList<TypeName> createRepeated() => $pb.PbList<TypeName>();
  @$core.pragma('dart2js:noInline')
  static TypeName getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TypeName>(create);
  static TypeName? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get names => $_getList(0);

  @$pb.TagNumber(2)
  $core.int get typeOid => $_getIZ(1);
  @$pb.TagNumber(2)
  set typeOid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeOid() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeOid() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get setof => $_getBF(2);
  @$pb.TagNumber(3)
  set setof($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasSetof() => $_has(2);
  @$pb.TagNumber(3)
  void clearSetof() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get pctType => $_getBF(3);
  @$pb.TagNumber(4)
  set pctType($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasPctType() => $_has(3);
  @$pb.TagNumber(4)
  void clearPctType() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get typmods => $_getList(4);

  @$pb.TagNumber(6)
  $core.int get typemod => $_getIZ(5);
  @$pb.TagNumber(6)
  set typemod($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasTypemod() => $_has(5);
  @$pb.TagNumber(6)
  void clearTypemod() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<Node> get arrayBounds => $_getList(6);

  @$pb.TagNumber(8)
  $core.int get location => $_getIZ(7);
  @$pb.TagNumber(8)
  set location($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasLocation() => $_has(7);
  @$pb.TagNumber(8)
  void clearLocation() => clearField(8);
}

class ColumnRef extends $pb.GeneratedMessage {
  factory ColumnRef({
    $core.Iterable<Node>? fields,
    $core.int? location,
  }) {
    final $result = create();
    if (fields != null) {
      $result.fields.addAll(fields);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  ColumnRef._() : super();
  factory ColumnRef.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ColumnRef.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ColumnRef', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'fields', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ColumnRef clone() => ColumnRef()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ColumnRef copyWith(void Function(ColumnRef) updates) => super.copyWith((message) => updates(message as ColumnRef)) as ColumnRef;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ColumnRef create() => ColumnRef._();
  ColumnRef createEmptyInstance() => create();
  static $pb.PbList<ColumnRef> createRepeated() => $pb.PbList<ColumnRef>();
  @$core.pragma('dart2js:noInline')
  static ColumnRef getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ColumnRef>(create);
  static ColumnRef? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get fields => $_getList(0);

  @$pb.TagNumber(2)
  $core.int get location => $_getIZ(1);
  @$pb.TagNumber(2)
  set location($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasLocation() => $_has(1);
  @$pb.TagNumber(2)
  void clearLocation() => clearField(2);
}

class ParamRef extends $pb.GeneratedMessage {
  factory ParamRef({
    $core.int? number,
    $core.int? location,
  }) {
    final $result = create();
    if (number != null) {
      $result.number = number;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  ParamRef._() : super();
  factory ParamRef.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ParamRef.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ParamRef', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'number', $pb.PbFieldType.O3)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ParamRef clone() => ParamRef()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ParamRef copyWith(void Function(ParamRef) updates) => super.copyWith((message) => updates(message as ParamRef)) as ParamRef;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ParamRef create() => ParamRef._();
  ParamRef createEmptyInstance() => create();
  static $pb.PbList<ParamRef> createRepeated() => $pb.PbList<ParamRef>();
  @$core.pragma('dart2js:noInline')
  static ParamRef getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ParamRef>(create);
  static ParamRef? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get number => $_getIZ(0);
  @$pb.TagNumber(1)
  set number($core.int v) { $_setSignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasNumber() => $_has(0);
  @$pb.TagNumber(1)
  void clearNumber() => clearField(1);

  @$pb.TagNumber(2)
  $core.int get location => $_getIZ(1);
  @$pb.TagNumber(2)
  set location($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasLocation() => $_has(1);
  @$pb.TagNumber(2)
  void clearLocation() => clearField(2);
}

class A_Expr extends $pb.GeneratedMessage {
  factory A_Expr({
    A_Expr_Kind? kind,
    $core.Iterable<Node>? name,
    Node? lexpr,
    Node? rexpr,
    $core.int? location,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (name != null) {
      $result.name.addAll(name);
    }
    if (lexpr != null) {
      $result.lexpr = lexpr;
    }
    if (rexpr != null) {
      $result.rexpr = rexpr;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  A_Expr._() : super();
  factory A_Expr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory A_Expr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'A_Expr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<A_Expr_Kind>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: A_Expr_Kind.A_EXPR_KIND_UNDEFINED, valueOf: A_Expr_Kind.valueOf, enumValues: A_Expr_Kind.values)
    ..pc<Node>(2, _omitFieldNames ? '' : 'name', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'lexpr', subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'rexpr', subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  A_Expr clone() => A_Expr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  A_Expr copyWith(void Function(A_Expr) updates) => super.copyWith((message) => updates(message as A_Expr)) as A_Expr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static A_Expr create() => A_Expr._();
  A_Expr createEmptyInstance() => create();
  static $pb.PbList<A_Expr> createRepeated() => $pb.PbList<A_Expr>();
  @$core.pragma('dart2js:noInline')
  static A_Expr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<A_Expr>(create);
  static A_Expr? _defaultInstance;

  @$pb.TagNumber(1)
  A_Expr_Kind get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(A_Expr_Kind v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get name => $_getList(1);

  @$pb.TagNumber(3)
  Node get lexpr => $_getN(2);
  @$pb.TagNumber(3)
  set lexpr(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLexpr() => $_has(2);
  @$pb.TagNumber(3)
  void clearLexpr() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureLexpr() => $_ensure(2);

  @$pb.TagNumber(4)
  Node get rexpr => $_getN(3);
  @$pb.TagNumber(4)
  set rexpr(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasRexpr() => $_has(3);
  @$pb.TagNumber(4)
  void clearRexpr() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureRexpr() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class TypeCast extends $pb.GeneratedMessage {
  factory TypeCast({
    Node? arg,
    TypeName? typeName,
    $core.int? location,
  }) {
    final $result = create();
    if (arg != null) {
      $result.arg = arg;
    }
    if (typeName != null) {
      $result.typeName = typeName;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  TypeCast._() : super();
  factory TypeCast.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TypeCast.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TypeCast', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..aOM<TypeName>(2, _omitFieldNames ? '' : 'typeName', subBuilder: TypeName.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TypeCast clone() => TypeCast()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TypeCast copyWith(void Function(TypeCast) updates) => super.copyWith((message) => updates(message as TypeCast)) as TypeCast;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TypeCast create() => TypeCast._();
  TypeCast createEmptyInstance() => create();
  static $pb.PbList<TypeCast> createRepeated() => $pb.PbList<TypeCast>();
  @$core.pragma('dart2js:noInline')
  static TypeCast getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TypeCast>(create);
  static TypeCast? _defaultInstance;

  @$pb.TagNumber(1)
  Node get arg => $_getN(0);
  @$pb.TagNumber(1)
  set arg(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasArg() => $_has(0);
  @$pb.TagNumber(1)
  void clearArg() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureArg() => $_ensure(0);

  @$pb.TagNumber(2)
  TypeName get typeName => $_getN(1);
  @$pb.TagNumber(2)
  set typeName(TypeName v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeName() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeName() => clearField(2);
  @$pb.TagNumber(2)
  TypeName ensureTypeName() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get location => $_getIZ(2);
  @$pb.TagNumber(3)
  set location($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);
}

class CollateClause extends $pb.GeneratedMessage {
  factory CollateClause({
    Node? arg,
    $core.Iterable<Node>? collname,
    $core.int? location,
  }) {
    final $result = create();
    if (arg != null) {
      $result.arg = arg;
    }
    if (collname != null) {
      $result.collname.addAll(collname);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CollateClause._() : super();
  factory CollateClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CollateClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CollateClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'collname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CollateClause clone() => CollateClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CollateClause copyWith(void Function(CollateClause) updates) => super.copyWith((message) => updates(message as CollateClause)) as CollateClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CollateClause create() => CollateClause._();
  CollateClause createEmptyInstance() => create();
  static $pb.PbList<CollateClause> createRepeated() => $pb.PbList<CollateClause>();
  @$core.pragma('dart2js:noInline')
  static CollateClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CollateClause>(create);
  static CollateClause? _defaultInstance;

  @$pb.TagNumber(1)
  Node get arg => $_getN(0);
  @$pb.TagNumber(1)
  set arg(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasArg() => $_has(0);
  @$pb.TagNumber(1)
  void clearArg() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureArg() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get collname => $_getList(1);

  @$pb.TagNumber(3)
  $core.int get location => $_getIZ(2);
  @$pb.TagNumber(3)
  set location($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);
}

class RoleSpec extends $pb.GeneratedMessage {
  factory RoleSpec({
    RoleSpecType? roletype,
    $core.String? rolename,
    $core.int? location,
  }) {
    final $result = create();
    if (roletype != null) {
      $result.roletype = roletype;
    }
    if (rolename != null) {
      $result.rolename = rolename;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  RoleSpec._() : super();
  factory RoleSpec.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RoleSpec.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RoleSpec', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<RoleSpecType>(1, _omitFieldNames ? '' : 'roletype', $pb.PbFieldType.OE, defaultOrMaker: RoleSpecType.ROLE_SPEC_TYPE_UNDEFINED, valueOf: RoleSpecType.valueOf, enumValues: RoleSpecType.values)
    ..aOS(2, _omitFieldNames ? '' : 'rolename')
    ..a<$core.int>(3, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RoleSpec clone() => RoleSpec()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RoleSpec copyWith(void Function(RoleSpec) updates) => super.copyWith((message) => updates(message as RoleSpec)) as RoleSpec;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RoleSpec create() => RoleSpec._();
  RoleSpec createEmptyInstance() => create();
  static $pb.PbList<RoleSpec> createRepeated() => $pb.PbList<RoleSpec>();
  @$core.pragma('dart2js:noInline')
  static RoleSpec getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RoleSpec>(create);
  static RoleSpec? _defaultInstance;

  @$pb.TagNumber(1)
  RoleSpecType get roletype => $_getN(0);
  @$pb.TagNumber(1)
  set roletype(RoleSpecType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRoletype() => $_has(0);
  @$pb.TagNumber(1)
  void clearRoletype() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get rolename => $_getSZ(1);
  @$pb.TagNumber(2)
  set rolename($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRolename() => $_has(1);
  @$pb.TagNumber(2)
  void clearRolename() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get location => $_getIZ(2);
  @$pb.TagNumber(3)
  set location($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);
}

class FuncCall extends $pb.GeneratedMessage {
  factory FuncCall({
    $core.Iterable<Node>? funcname,
    $core.Iterable<Node>? args,
    $core.Iterable<Node>? aggOrder,
    Node? aggFilter,
    WindowDef? over,
    $core.bool? aggWithinGroup,
    $core.bool? aggStar,
    $core.bool? aggDistinct,
    $core.bool? funcVariadic,
    CoercionForm? funcformat,
    $core.int? location,
  }) {
    final $result = create();
    if (funcname != null) {
      $result.funcname.addAll(funcname);
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (aggOrder != null) {
      $result.aggOrder.addAll(aggOrder);
    }
    if (aggFilter != null) {
      $result.aggFilter = aggFilter;
    }
    if (over != null) {
      $result.over = over;
    }
    if (aggWithinGroup != null) {
      $result.aggWithinGroup = aggWithinGroup;
    }
    if (aggStar != null) {
      $result.aggStar = aggStar;
    }
    if (aggDistinct != null) {
      $result.aggDistinct = aggDistinct;
    }
    if (funcVariadic != null) {
      $result.funcVariadic = funcVariadic;
    }
    if (funcformat != null) {
      $result.funcformat = funcformat;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  FuncCall._() : super();
  factory FuncCall.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FuncCall.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FuncCall', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'funcname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'agg_order', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'agg_filter', subBuilder: Node.create)
    ..aOM<WindowDef>(5, _omitFieldNames ? '' : 'over', subBuilder: WindowDef.create)
    ..aOB(6, _omitFieldNames ? '' : 'agg_within_group')
    ..aOB(7, _omitFieldNames ? '' : 'agg_star')
    ..aOB(8, _omitFieldNames ? '' : 'agg_distinct')
    ..aOB(9, _omitFieldNames ? '' : 'func_variadic')
    ..e<CoercionForm>(10, _omitFieldNames ? '' : 'funcformat', $pb.PbFieldType.OE, defaultOrMaker: CoercionForm.COERCION_FORM_UNDEFINED, valueOf: CoercionForm.valueOf, enumValues: CoercionForm.values)
    ..a<$core.int>(11, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FuncCall clone() => FuncCall()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FuncCall copyWith(void Function(FuncCall) updates) => super.copyWith((message) => updates(message as FuncCall)) as FuncCall;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FuncCall create() => FuncCall._();
  FuncCall createEmptyInstance() => create();
  static $pb.PbList<FuncCall> createRepeated() => $pb.PbList<FuncCall>();
  @$core.pragma('dart2js:noInline')
  static FuncCall getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FuncCall>(create);
  static FuncCall? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get funcname => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get args => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get aggOrder => $_getList(2);

  @$pb.TagNumber(4)
  Node get aggFilter => $_getN(3);
  @$pb.TagNumber(4)
  set aggFilter(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasAggFilter() => $_has(3);
  @$pb.TagNumber(4)
  void clearAggFilter() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureAggFilter() => $_ensure(3);

  @$pb.TagNumber(5)
  WindowDef get over => $_getN(4);
  @$pb.TagNumber(5)
  set over(WindowDef v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasOver() => $_has(4);
  @$pb.TagNumber(5)
  void clearOver() => clearField(5);
  @$pb.TagNumber(5)
  WindowDef ensureOver() => $_ensure(4);

  @$pb.TagNumber(6)
  $core.bool get aggWithinGroup => $_getBF(5);
  @$pb.TagNumber(6)
  set aggWithinGroup($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasAggWithinGroup() => $_has(5);
  @$pb.TagNumber(6)
  void clearAggWithinGroup() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get aggStar => $_getBF(6);
  @$pb.TagNumber(7)
  set aggStar($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasAggStar() => $_has(6);
  @$pb.TagNumber(7)
  void clearAggStar() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get aggDistinct => $_getBF(7);
  @$pb.TagNumber(8)
  set aggDistinct($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasAggDistinct() => $_has(7);
  @$pb.TagNumber(8)
  void clearAggDistinct() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get funcVariadic => $_getBF(8);
  @$pb.TagNumber(9)
  set funcVariadic($core.bool v) { $_setBool(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasFuncVariadic() => $_has(8);
  @$pb.TagNumber(9)
  void clearFuncVariadic() => clearField(9);

  @$pb.TagNumber(10)
  CoercionForm get funcformat => $_getN(9);
  @$pb.TagNumber(10)
  set funcformat(CoercionForm v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasFuncformat() => $_has(9);
  @$pb.TagNumber(10)
  void clearFuncformat() => clearField(10);

  @$pb.TagNumber(11)
  $core.int get location => $_getIZ(10);
  @$pb.TagNumber(11)
  set location($core.int v) { $_setSignedInt32(10, v); }
  @$pb.TagNumber(11)
  $core.bool hasLocation() => $_has(10);
  @$pb.TagNumber(11)
  void clearLocation() => clearField(11);
}

class A_Star extends $pb.GeneratedMessage {
  factory A_Star() => create();
  A_Star._() : super();
  factory A_Star.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory A_Star.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'A_Star', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  A_Star clone() => A_Star()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  A_Star copyWith(void Function(A_Star) updates) => super.copyWith((message) => updates(message as A_Star)) as A_Star;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static A_Star create() => A_Star._();
  A_Star createEmptyInstance() => create();
  static $pb.PbList<A_Star> createRepeated() => $pb.PbList<A_Star>();
  @$core.pragma('dart2js:noInline')
  static A_Star getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<A_Star>(create);
  static A_Star? _defaultInstance;
}

class A_Indices extends $pb.GeneratedMessage {
  factory A_Indices({
    $core.bool? isSlice,
    Node? lidx,
    Node? uidx,
  }) {
    final $result = create();
    if (isSlice != null) {
      $result.isSlice = isSlice;
    }
    if (lidx != null) {
      $result.lidx = lidx;
    }
    if (uidx != null) {
      $result.uidx = uidx;
    }
    return $result;
  }
  A_Indices._() : super();
  factory A_Indices.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory A_Indices.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'A_Indices', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'is_slice')
    ..aOM<Node>(2, _omitFieldNames ? '' : 'lidx', subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'uidx', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  A_Indices clone() => A_Indices()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  A_Indices copyWith(void Function(A_Indices) updates) => super.copyWith((message) => updates(message as A_Indices)) as A_Indices;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static A_Indices create() => A_Indices._();
  A_Indices createEmptyInstance() => create();
  static $pb.PbList<A_Indices> createRepeated() => $pb.PbList<A_Indices>();
  @$core.pragma('dart2js:noInline')
  static A_Indices getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<A_Indices>(create);
  static A_Indices? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get isSlice => $_getBF(0);
  @$pb.TagNumber(1)
  set isSlice($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasIsSlice() => $_has(0);
  @$pb.TagNumber(1)
  void clearIsSlice() => clearField(1);

  @$pb.TagNumber(2)
  Node get lidx => $_getN(1);
  @$pb.TagNumber(2)
  set lidx(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasLidx() => $_has(1);
  @$pb.TagNumber(2)
  void clearLidx() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureLidx() => $_ensure(1);

  @$pb.TagNumber(3)
  Node get uidx => $_getN(2);
  @$pb.TagNumber(3)
  set uidx(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasUidx() => $_has(2);
  @$pb.TagNumber(3)
  void clearUidx() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureUidx() => $_ensure(2);
}

class A_Indirection extends $pb.GeneratedMessage {
  factory A_Indirection({
    Node? arg,
    $core.Iterable<Node>? indirection,
  }) {
    final $result = create();
    if (arg != null) {
      $result.arg = arg;
    }
    if (indirection != null) {
      $result.indirection.addAll(indirection);
    }
    return $result;
  }
  A_Indirection._() : super();
  factory A_Indirection.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory A_Indirection.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'A_Indirection', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'indirection', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  A_Indirection clone() => A_Indirection()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  A_Indirection copyWith(void Function(A_Indirection) updates) => super.copyWith((message) => updates(message as A_Indirection)) as A_Indirection;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static A_Indirection create() => A_Indirection._();
  A_Indirection createEmptyInstance() => create();
  static $pb.PbList<A_Indirection> createRepeated() => $pb.PbList<A_Indirection>();
  @$core.pragma('dart2js:noInline')
  static A_Indirection getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<A_Indirection>(create);
  static A_Indirection? _defaultInstance;

  @$pb.TagNumber(1)
  Node get arg => $_getN(0);
  @$pb.TagNumber(1)
  set arg(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasArg() => $_has(0);
  @$pb.TagNumber(1)
  void clearArg() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureArg() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get indirection => $_getList(1);
}

class A_ArrayExpr extends $pb.GeneratedMessage {
  factory A_ArrayExpr({
    $core.Iterable<Node>? elements,
    $core.int? location,
  }) {
    final $result = create();
    if (elements != null) {
      $result.elements.addAll(elements);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  A_ArrayExpr._() : super();
  factory A_ArrayExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory A_ArrayExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'A_ArrayExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'elements', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  A_ArrayExpr clone() => A_ArrayExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  A_ArrayExpr copyWith(void Function(A_ArrayExpr) updates) => super.copyWith((message) => updates(message as A_ArrayExpr)) as A_ArrayExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static A_ArrayExpr create() => A_ArrayExpr._();
  A_ArrayExpr createEmptyInstance() => create();
  static $pb.PbList<A_ArrayExpr> createRepeated() => $pb.PbList<A_ArrayExpr>();
  @$core.pragma('dart2js:noInline')
  static A_ArrayExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<A_ArrayExpr>(create);
  static A_ArrayExpr? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get elements => $_getList(0);

  @$pb.TagNumber(2)
  $core.int get location => $_getIZ(1);
  @$pb.TagNumber(2)
  set location($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasLocation() => $_has(1);
  @$pb.TagNumber(2)
  void clearLocation() => clearField(2);
}

class ResTarget extends $pb.GeneratedMessage {
  factory ResTarget({
    $core.String? name,
    $core.Iterable<Node>? indirection,
    Node? val,
    $core.int? location,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (indirection != null) {
      $result.indirection.addAll(indirection);
    }
    if (val != null) {
      $result.val = val;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  ResTarget._() : super();
  factory ResTarget.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ResTarget.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ResTarget', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..pc<Node>(2, _omitFieldNames ? '' : 'indirection', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'val', subBuilder: Node.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ResTarget clone() => ResTarget()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ResTarget copyWith(void Function(ResTarget) updates) => super.copyWith((message) => updates(message as ResTarget)) as ResTarget;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ResTarget create() => ResTarget._();
  ResTarget createEmptyInstance() => create();
  static $pb.PbList<ResTarget> createRepeated() => $pb.PbList<ResTarget>();
  @$core.pragma('dart2js:noInline')
  static ResTarget getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ResTarget>(create);
  static ResTarget? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get indirection => $_getList(1);

  @$pb.TagNumber(3)
  Node get val => $_getN(2);
  @$pb.TagNumber(3)
  set val(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasVal() => $_has(2);
  @$pb.TagNumber(3)
  void clearVal() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureVal() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class MultiAssignRef extends $pb.GeneratedMessage {
  factory MultiAssignRef({
    Node? source,
    $core.int? colno,
    $core.int? ncolumns,
  }) {
    final $result = create();
    if (source != null) {
      $result.source = source;
    }
    if (colno != null) {
      $result.colno = colno;
    }
    if (ncolumns != null) {
      $result.ncolumns = ncolumns;
    }
    return $result;
  }
  MultiAssignRef._() : super();
  factory MultiAssignRef.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MultiAssignRef.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MultiAssignRef', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'source', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'colno', $pb.PbFieldType.O3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'ncolumns', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MultiAssignRef clone() => MultiAssignRef()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MultiAssignRef copyWith(void Function(MultiAssignRef) updates) => super.copyWith((message) => updates(message as MultiAssignRef)) as MultiAssignRef;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MultiAssignRef create() => MultiAssignRef._();
  MultiAssignRef createEmptyInstance() => create();
  static $pb.PbList<MultiAssignRef> createRepeated() => $pb.PbList<MultiAssignRef>();
  @$core.pragma('dart2js:noInline')
  static MultiAssignRef getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MultiAssignRef>(create);
  static MultiAssignRef? _defaultInstance;

  @$pb.TagNumber(1)
  Node get source => $_getN(0);
  @$pb.TagNumber(1)
  set source(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasSource() => $_has(0);
  @$pb.TagNumber(1)
  void clearSource() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureSource() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get colno => $_getIZ(1);
  @$pb.TagNumber(2)
  set colno($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasColno() => $_has(1);
  @$pb.TagNumber(2)
  void clearColno() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get ncolumns => $_getIZ(2);
  @$pb.TagNumber(3)
  set ncolumns($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasNcolumns() => $_has(2);
  @$pb.TagNumber(3)
  void clearNcolumns() => clearField(3);
}

class SortBy extends $pb.GeneratedMessage {
  factory SortBy({
    Node? node,
    SortByDir? sortbyDir,
    SortByNulls? sortbyNulls,
    $core.Iterable<Node>? useOp,
    $core.int? location,
  }) {
    final $result = create();
    if (node != null) {
      $result.node = node;
    }
    if (sortbyDir != null) {
      $result.sortbyDir = sortbyDir;
    }
    if (sortbyNulls != null) {
      $result.sortbyNulls = sortbyNulls;
    }
    if (useOp != null) {
      $result.useOp.addAll(useOp);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  SortBy._() : super();
  factory SortBy.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SortBy.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SortBy', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'node', subBuilder: Node.create)
    ..e<SortByDir>(2, _omitFieldNames ? '' : 'sortby_dir', $pb.PbFieldType.OE, defaultOrMaker: SortByDir.SORT_BY_DIR_UNDEFINED, valueOf: SortByDir.valueOf, enumValues: SortByDir.values)
    ..e<SortByNulls>(3, _omitFieldNames ? '' : 'sortby_nulls', $pb.PbFieldType.OE, defaultOrMaker: SortByNulls.SORT_BY_NULLS_UNDEFINED, valueOf: SortByNulls.valueOf, enumValues: SortByNulls.values)
    ..pc<Node>(4, _omitFieldNames ? '' : 'useOp', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SortBy clone() => SortBy()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SortBy copyWith(void Function(SortBy) updates) => super.copyWith((message) => updates(message as SortBy)) as SortBy;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SortBy create() => SortBy._();
  SortBy createEmptyInstance() => create();
  static $pb.PbList<SortBy> createRepeated() => $pb.PbList<SortBy>();
  @$core.pragma('dart2js:noInline')
  static SortBy getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SortBy>(create);
  static SortBy? _defaultInstance;

  @$pb.TagNumber(1)
  Node get node => $_getN(0);
  @$pb.TagNumber(1)
  set node(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasNode() => $_has(0);
  @$pb.TagNumber(1)
  void clearNode() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureNode() => $_ensure(0);

  @$pb.TagNumber(2)
  SortByDir get sortbyDir => $_getN(1);
  @$pb.TagNumber(2)
  set sortbyDir(SortByDir v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasSortbyDir() => $_has(1);
  @$pb.TagNumber(2)
  void clearSortbyDir() => clearField(2);

  @$pb.TagNumber(3)
  SortByNulls get sortbyNulls => $_getN(2);
  @$pb.TagNumber(3)
  set sortbyNulls(SortByNulls v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasSortbyNulls() => $_has(2);
  @$pb.TagNumber(3)
  void clearSortbyNulls() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get useOp => $_getList(3);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class WindowDef extends $pb.GeneratedMessage {
  factory WindowDef({
    $core.String? name,
    $core.String? refname,
    $core.Iterable<Node>? partitionClause,
    $core.Iterable<Node>? orderClause,
    $core.int? frameOptions,
    Node? startOffset,
    Node? endOffset,
    $core.int? location,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (refname != null) {
      $result.refname = refname;
    }
    if (partitionClause != null) {
      $result.partitionClause.addAll(partitionClause);
    }
    if (orderClause != null) {
      $result.orderClause.addAll(orderClause);
    }
    if (frameOptions != null) {
      $result.frameOptions = frameOptions;
    }
    if (startOffset != null) {
      $result.startOffset = startOffset;
    }
    if (endOffset != null) {
      $result.endOffset = endOffset;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  WindowDef._() : super();
  factory WindowDef.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory WindowDef.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'WindowDef', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..aOS(2, _omitFieldNames ? '' : 'refname')
    ..pc<Node>(3, _omitFieldNames ? '' : 'partitionClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'orderClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'frameOptions', $pb.PbFieldType.O3)
    ..aOM<Node>(6, _omitFieldNames ? '' : 'startOffset', subBuilder: Node.create)
    ..aOM<Node>(7, _omitFieldNames ? '' : 'endOffset', subBuilder: Node.create)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  WindowDef clone() => WindowDef()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  WindowDef copyWith(void Function(WindowDef) updates) => super.copyWith((message) => updates(message as WindowDef)) as WindowDef;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static WindowDef create() => WindowDef._();
  WindowDef createEmptyInstance() => create();
  static $pb.PbList<WindowDef> createRepeated() => $pb.PbList<WindowDef>();
  @$core.pragma('dart2js:noInline')
  static WindowDef getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<WindowDef>(create);
  static WindowDef? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get refname => $_getSZ(1);
  @$pb.TagNumber(2)
  set refname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRefname() => $_has(1);
  @$pb.TagNumber(2)
  void clearRefname() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get partitionClause => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get orderClause => $_getList(3);

  @$pb.TagNumber(5)
  $core.int get frameOptions => $_getIZ(4);
  @$pb.TagNumber(5)
  set frameOptions($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasFrameOptions() => $_has(4);
  @$pb.TagNumber(5)
  void clearFrameOptions() => clearField(5);

  @$pb.TagNumber(6)
  Node get startOffset => $_getN(5);
  @$pb.TagNumber(6)
  set startOffset(Node v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasStartOffset() => $_has(5);
  @$pb.TagNumber(6)
  void clearStartOffset() => clearField(6);
  @$pb.TagNumber(6)
  Node ensureStartOffset() => $_ensure(5);

  @$pb.TagNumber(7)
  Node get endOffset => $_getN(6);
  @$pb.TagNumber(7)
  set endOffset(Node v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasEndOffset() => $_has(6);
  @$pb.TagNumber(7)
  void clearEndOffset() => clearField(7);
  @$pb.TagNumber(7)
  Node ensureEndOffset() => $_ensure(6);

  @$pb.TagNumber(8)
  $core.int get location => $_getIZ(7);
  @$pb.TagNumber(8)
  set location($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasLocation() => $_has(7);
  @$pb.TagNumber(8)
  void clearLocation() => clearField(8);
}

class RangeSubselect extends $pb.GeneratedMessage {
  factory RangeSubselect({
    $core.bool? lateral,
    Node? subquery,
    Alias? alias,
  }) {
    final $result = create();
    if (lateral != null) {
      $result.lateral = lateral;
    }
    if (subquery != null) {
      $result.subquery = subquery;
    }
    if (alias != null) {
      $result.alias = alias;
    }
    return $result;
  }
  RangeSubselect._() : super();
  factory RangeSubselect.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeSubselect.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeSubselect', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'lateral')
    ..aOM<Node>(2, _omitFieldNames ? '' : 'subquery', subBuilder: Node.create)
    ..aOM<Alias>(3, _omitFieldNames ? '' : 'alias', subBuilder: Alias.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeSubselect clone() => RangeSubselect()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeSubselect copyWith(void Function(RangeSubselect) updates) => super.copyWith((message) => updates(message as RangeSubselect)) as RangeSubselect;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeSubselect create() => RangeSubselect._();
  RangeSubselect createEmptyInstance() => create();
  static $pb.PbList<RangeSubselect> createRepeated() => $pb.PbList<RangeSubselect>();
  @$core.pragma('dart2js:noInline')
  static RangeSubselect getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeSubselect>(create);
  static RangeSubselect? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get lateral => $_getBF(0);
  @$pb.TagNumber(1)
  set lateral($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasLateral() => $_has(0);
  @$pb.TagNumber(1)
  void clearLateral() => clearField(1);

  @$pb.TagNumber(2)
  Node get subquery => $_getN(1);
  @$pb.TagNumber(2)
  set subquery(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasSubquery() => $_has(1);
  @$pb.TagNumber(2)
  void clearSubquery() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureSubquery() => $_ensure(1);

  @$pb.TagNumber(3)
  Alias get alias => $_getN(2);
  @$pb.TagNumber(3)
  set alias(Alias v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasAlias() => $_has(2);
  @$pb.TagNumber(3)
  void clearAlias() => clearField(3);
  @$pb.TagNumber(3)
  Alias ensureAlias() => $_ensure(2);
}

class RangeFunction extends $pb.GeneratedMessage {
  factory RangeFunction({
    $core.bool? lateral,
    $core.bool? ordinality,
    $core.bool? isRowsfrom,
    $core.Iterable<Node>? functions,
    Alias? alias,
    $core.Iterable<Node>? coldeflist,
  }) {
    final $result = create();
    if (lateral != null) {
      $result.lateral = lateral;
    }
    if (ordinality != null) {
      $result.ordinality = ordinality;
    }
    if (isRowsfrom != null) {
      $result.isRowsfrom = isRowsfrom;
    }
    if (functions != null) {
      $result.functions.addAll(functions);
    }
    if (alias != null) {
      $result.alias = alias;
    }
    if (coldeflist != null) {
      $result.coldeflist.addAll(coldeflist);
    }
    return $result;
  }
  RangeFunction._() : super();
  factory RangeFunction.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeFunction.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeFunction', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'lateral')
    ..aOB(2, _omitFieldNames ? '' : 'ordinality')
    ..aOB(3, _omitFieldNames ? '' : 'is_rowsfrom')
    ..pc<Node>(4, _omitFieldNames ? '' : 'functions', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Alias>(5, _omitFieldNames ? '' : 'alias', subBuilder: Alias.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'coldeflist', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeFunction clone() => RangeFunction()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeFunction copyWith(void Function(RangeFunction) updates) => super.copyWith((message) => updates(message as RangeFunction)) as RangeFunction;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeFunction create() => RangeFunction._();
  RangeFunction createEmptyInstance() => create();
  static $pb.PbList<RangeFunction> createRepeated() => $pb.PbList<RangeFunction>();
  @$core.pragma('dart2js:noInline')
  static RangeFunction getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeFunction>(create);
  static RangeFunction? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get lateral => $_getBF(0);
  @$pb.TagNumber(1)
  set lateral($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasLateral() => $_has(0);
  @$pb.TagNumber(1)
  void clearLateral() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get ordinality => $_getBF(1);
  @$pb.TagNumber(2)
  set ordinality($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOrdinality() => $_has(1);
  @$pb.TagNumber(2)
  void clearOrdinality() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get isRowsfrom => $_getBF(2);
  @$pb.TagNumber(3)
  set isRowsfrom($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasIsRowsfrom() => $_has(2);
  @$pb.TagNumber(3)
  void clearIsRowsfrom() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get functions => $_getList(3);

  @$pb.TagNumber(5)
  Alias get alias => $_getN(4);
  @$pb.TagNumber(5)
  set alias(Alias v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasAlias() => $_has(4);
  @$pb.TagNumber(5)
  void clearAlias() => clearField(5);
  @$pb.TagNumber(5)
  Alias ensureAlias() => $_ensure(4);

  @$pb.TagNumber(6)
  $core.List<Node> get coldeflist => $_getList(5);
}

class RangeTableFunc extends $pb.GeneratedMessage {
  factory RangeTableFunc({
    $core.bool? lateral,
    Node? docexpr,
    Node? rowexpr,
    $core.Iterable<Node>? namespaces,
    $core.Iterable<Node>? columns,
    Alias? alias,
    $core.int? location,
  }) {
    final $result = create();
    if (lateral != null) {
      $result.lateral = lateral;
    }
    if (docexpr != null) {
      $result.docexpr = docexpr;
    }
    if (rowexpr != null) {
      $result.rowexpr = rowexpr;
    }
    if (namespaces != null) {
      $result.namespaces.addAll(namespaces);
    }
    if (columns != null) {
      $result.columns.addAll(columns);
    }
    if (alias != null) {
      $result.alias = alias;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  RangeTableFunc._() : super();
  factory RangeTableFunc.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeTableFunc.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeTableFunc', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'lateral')
    ..aOM<Node>(2, _omitFieldNames ? '' : 'docexpr', subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'rowexpr', subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'namespaces', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'columns', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Alias>(6, _omitFieldNames ? '' : 'alias', subBuilder: Alias.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeTableFunc clone() => RangeTableFunc()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeTableFunc copyWith(void Function(RangeTableFunc) updates) => super.copyWith((message) => updates(message as RangeTableFunc)) as RangeTableFunc;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeTableFunc create() => RangeTableFunc._();
  RangeTableFunc createEmptyInstance() => create();
  static $pb.PbList<RangeTableFunc> createRepeated() => $pb.PbList<RangeTableFunc>();
  @$core.pragma('dart2js:noInline')
  static RangeTableFunc getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeTableFunc>(create);
  static RangeTableFunc? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get lateral => $_getBF(0);
  @$pb.TagNumber(1)
  set lateral($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasLateral() => $_has(0);
  @$pb.TagNumber(1)
  void clearLateral() => clearField(1);

  @$pb.TagNumber(2)
  Node get docexpr => $_getN(1);
  @$pb.TagNumber(2)
  set docexpr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasDocexpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearDocexpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureDocexpr() => $_ensure(1);

  @$pb.TagNumber(3)
  Node get rowexpr => $_getN(2);
  @$pb.TagNumber(3)
  set rowexpr(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasRowexpr() => $_has(2);
  @$pb.TagNumber(3)
  void clearRowexpr() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureRowexpr() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.List<Node> get namespaces => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get columns => $_getList(4);

  @$pb.TagNumber(6)
  Alias get alias => $_getN(5);
  @$pb.TagNumber(6)
  set alias(Alias v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasAlias() => $_has(5);
  @$pb.TagNumber(6)
  void clearAlias() => clearField(6);
  @$pb.TagNumber(6)
  Alias ensureAlias() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class RangeTableFuncCol extends $pb.GeneratedMessage {
  factory RangeTableFuncCol({
    $core.String? colname,
    TypeName? typeName,
    $core.bool? forOrdinality,
    $core.bool? isNotNull,
    Node? colexpr,
    Node? coldefexpr,
    $core.int? location,
  }) {
    final $result = create();
    if (colname != null) {
      $result.colname = colname;
    }
    if (typeName != null) {
      $result.typeName = typeName;
    }
    if (forOrdinality != null) {
      $result.forOrdinality = forOrdinality;
    }
    if (isNotNull != null) {
      $result.isNotNull = isNotNull;
    }
    if (colexpr != null) {
      $result.colexpr = colexpr;
    }
    if (coldefexpr != null) {
      $result.coldefexpr = coldefexpr;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  RangeTableFuncCol._() : super();
  factory RangeTableFuncCol.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeTableFuncCol.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeTableFuncCol', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'colname')
    ..aOM<TypeName>(2, _omitFieldNames ? '' : 'typeName', subBuilder: TypeName.create)
    ..aOB(3, _omitFieldNames ? '' : 'for_ordinality')
    ..aOB(4, _omitFieldNames ? '' : 'is_not_null')
    ..aOM<Node>(5, _omitFieldNames ? '' : 'colexpr', subBuilder: Node.create)
    ..aOM<Node>(6, _omitFieldNames ? '' : 'coldefexpr', subBuilder: Node.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeTableFuncCol clone() => RangeTableFuncCol()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeTableFuncCol copyWith(void Function(RangeTableFuncCol) updates) => super.copyWith((message) => updates(message as RangeTableFuncCol)) as RangeTableFuncCol;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeTableFuncCol create() => RangeTableFuncCol._();
  RangeTableFuncCol createEmptyInstance() => create();
  static $pb.PbList<RangeTableFuncCol> createRepeated() => $pb.PbList<RangeTableFuncCol>();
  @$core.pragma('dart2js:noInline')
  static RangeTableFuncCol getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeTableFuncCol>(create);
  static RangeTableFuncCol? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get colname => $_getSZ(0);
  @$pb.TagNumber(1)
  set colname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasColname() => $_has(0);
  @$pb.TagNumber(1)
  void clearColname() => clearField(1);

  @$pb.TagNumber(2)
  TypeName get typeName => $_getN(1);
  @$pb.TagNumber(2)
  set typeName(TypeName v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeName() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeName() => clearField(2);
  @$pb.TagNumber(2)
  TypeName ensureTypeName() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.bool get forOrdinality => $_getBF(2);
  @$pb.TagNumber(3)
  set forOrdinality($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasForOrdinality() => $_has(2);
  @$pb.TagNumber(3)
  void clearForOrdinality() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get isNotNull => $_getBF(3);
  @$pb.TagNumber(4)
  set isNotNull($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasIsNotNull() => $_has(3);
  @$pb.TagNumber(4)
  void clearIsNotNull() => clearField(4);

  @$pb.TagNumber(5)
  Node get colexpr => $_getN(4);
  @$pb.TagNumber(5)
  set colexpr(Node v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasColexpr() => $_has(4);
  @$pb.TagNumber(5)
  void clearColexpr() => clearField(5);
  @$pb.TagNumber(5)
  Node ensureColexpr() => $_ensure(4);

  @$pb.TagNumber(6)
  Node get coldefexpr => $_getN(5);
  @$pb.TagNumber(6)
  set coldefexpr(Node v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasColdefexpr() => $_has(5);
  @$pb.TagNumber(6)
  void clearColdefexpr() => clearField(6);
  @$pb.TagNumber(6)
  Node ensureColdefexpr() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);
}

class RangeTableSample extends $pb.GeneratedMessage {
  factory RangeTableSample({
    Node? relation,
    $core.Iterable<Node>? method,
    $core.Iterable<Node>? args,
    Node? repeatable,
    $core.int? location,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (method != null) {
      $result.method.addAll(method);
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (repeatable != null) {
      $result.repeatable = repeatable;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  RangeTableSample._() : super();
  factory RangeTableSample.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeTableSample.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeTableSample', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'relation', subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'method', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'repeatable', subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeTableSample clone() => RangeTableSample()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeTableSample copyWith(void Function(RangeTableSample) updates) => super.copyWith((message) => updates(message as RangeTableSample)) as RangeTableSample;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeTableSample create() => RangeTableSample._();
  RangeTableSample createEmptyInstance() => create();
  static $pb.PbList<RangeTableSample> createRepeated() => $pb.PbList<RangeTableSample>();
  @$core.pragma('dart2js:noInline')
  static RangeTableSample getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeTableSample>(create);
  static RangeTableSample? _defaultInstance;

  @$pb.TagNumber(1)
  Node get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get method => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get args => $_getList(2);

  @$pb.TagNumber(4)
  Node get repeatable => $_getN(3);
  @$pb.TagNumber(4)
  set repeatable(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasRepeatable() => $_has(3);
  @$pb.TagNumber(4)
  void clearRepeatable() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureRepeatable() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class ColumnDef extends $pb.GeneratedMessage {
  factory ColumnDef({
    $core.String? colname,
    TypeName? typeName,
    $core.String? compression,
    $core.int? inhcount,
    $core.bool? isLocal,
    $core.bool? isNotNull,
    $core.bool? isFromType,
    $core.String? storage,
    $core.String? storageName,
    Node? rawDefault,
    Node? cookedDefault,
    $core.String? identity,
    RangeVar? identitySequence,
    $core.String? generated,
    CollateClause? collClause,
    $core.int? collOid,
    $core.Iterable<Node>? constraints,
    $core.Iterable<Node>? fdwoptions,
    $core.int? location,
  }) {
    final $result = create();
    if (colname != null) {
      $result.colname = colname;
    }
    if (typeName != null) {
      $result.typeName = typeName;
    }
    if (compression != null) {
      $result.compression = compression;
    }
    if (inhcount != null) {
      $result.inhcount = inhcount;
    }
    if (isLocal != null) {
      $result.isLocal = isLocal;
    }
    if (isNotNull != null) {
      $result.isNotNull = isNotNull;
    }
    if (isFromType != null) {
      $result.isFromType = isFromType;
    }
    if (storage != null) {
      $result.storage = storage;
    }
    if (storageName != null) {
      $result.storageName = storageName;
    }
    if (rawDefault != null) {
      $result.rawDefault = rawDefault;
    }
    if (cookedDefault != null) {
      $result.cookedDefault = cookedDefault;
    }
    if (identity != null) {
      $result.identity = identity;
    }
    if (identitySequence != null) {
      $result.identitySequence = identitySequence;
    }
    if (generated != null) {
      $result.generated = generated;
    }
    if (collClause != null) {
      $result.collClause = collClause;
    }
    if (collOid != null) {
      $result.collOid = collOid;
    }
    if (constraints != null) {
      $result.constraints.addAll(constraints);
    }
    if (fdwoptions != null) {
      $result.fdwoptions.addAll(fdwoptions);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  ColumnDef._() : super();
  factory ColumnDef.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ColumnDef.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ColumnDef', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'colname')
    ..aOM<TypeName>(2, _omitFieldNames ? '' : 'typeName', subBuilder: TypeName.create)
    ..aOS(3, _omitFieldNames ? '' : 'compression')
    ..a<$core.int>(4, _omitFieldNames ? '' : 'inhcount', $pb.PbFieldType.O3)
    ..aOB(5, _omitFieldNames ? '' : 'is_local')
    ..aOB(6, _omitFieldNames ? '' : 'is_not_null')
    ..aOB(7, _omitFieldNames ? '' : 'is_from_type')
    ..aOS(8, _omitFieldNames ? '' : 'storage')
    ..aOS(9, _omitFieldNames ? '' : 'storage_name')
    ..aOM<Node>(10, _omitFieldNames ? '' : 'raw_default', subBuilder: Node.create)
    ..aOM<Node>(11, _omitFieldNames ? '' : 'cooked_default', subBuilder: Node.create)
    ..aOS(12, _omitFieldNames ? '' : 'identity')
    ..aOM<RangeVar>(13, _omitFieldNames ? '' : 'identitySequence', subBuilder: RangeVar.create)
    ..aOS(14, _omitFieldNames ? '' : 'generated')
    ..aOM<CollateClause>(15, _omitFieldNames ? '' : 'collClause', subBuilder: CollateClause.create)
    ..a<$core.int>(16, _omitFieldNames ? '' : 'collOid', $pb.PbFieldType.OU3)
    ..pc<Node>(17, _omitFieldNames ? '' : 'constraints', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(18, _omitFieldNames ? '' : 'fdwoptions', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(19, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ColumnDef clone() => ColumnDef()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ColumnDef copyWith(void Function(ColumnDef) updates) => super.copyWith((message) => updates(message as ColumnDef)) as ColumnDef;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ColumnDef create() => ColumnDef._();
  ColumnDef createEmptyInstance() => create();
  static $pb.PbList<ColumnDef> createRepeated() => $pb.PbList<ColumnDef>();
  @$core.pragma('dart2js:noInline')
  static ColumnDef getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ColumnDef>(create);
  static ColumnDef? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get colname => $_getSZ(0);
  @$pb.TagNumber(1)
  set colname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasColname() => $_has(0);
  @$pb.TagNumber(1)
  void clearColname() => clearField(1);

  @$pb.TagNumber(2)
  TypeName get typeName => $_getN(1);
  @$pb.TagNumber(2)
  set typeName(TypeName v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeName() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeName() => clearField(2);
  @$pb.TagNumber(2)
  TypeName ensureTypeName() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get compression => $_getSZ(2);
  @$pb.TagNumber(3)
  set compression($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasCompression() => $_has(2);
  @$pb.TagNumber(3)
  void clearCompression() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get inhcount => $_getIZ(3);
  @$pb.TagNumber(4)
  set inhcount($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasInhcount() => $_has(3);
  @$pb.TagNumber(4)
  void clearInhcount() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get isLocal => $_getBF(4);
  @$pb.TagNumber(5)
  set isLocal($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasIsLocal() => $_has(4);
  @$pb.TagNumber(5)
  void clearIsLocal() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get isNotNull => $_getBF(5);
  @$pb.TagNumber(6)
  set isNotNull($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasIsNotNull() => $_has(5);
  @$pb.TagNumber(6)
  void clearIsNotNull() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get isFromType => $_getBF(6);
  @$pb.TagNumber(7)
  set isFromType($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasIsFromType() => $_has(6);
  @$pb.TagNumber(7)
  void clearIsFromType() => clearField(7);

  @$pb.TagNumber(8)
  $core.String get storage => $_getSZ(7);
  @$pb.TagNumber(8)
  set storage($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasStorage() => $_has(7);
  @$pb.TagNumber(8)
  void clearStorage() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get storageName => $_getSZ(8);
  @$pb.TagNumber(9)
  set storageName($core.String v) { $_setString(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasStorageName() => $_has(8);
  @$pb.TagNumber(9)
  void clearStorageName() => clearField(9);

  @$pb.TagNumber(10)
  Node get rawDefault => $_getN(9);
  @$pb.TagNumber(10)
  set rawDefault(Node v) { setField(10, v); }
  @$pb.TagNumber(10)
  $core.bool hasRawDefault() => $_has(9);
  @$pb.TagNumber(10)
  void clearRawDefault() => clearField(10);
  @$pb.TagNumber(10)
  Node ensureRawDefault() => $_ensure(9);

  @$pb.TagNumber(11)
  Node get cookedDefault => $_getN(10);
  @$pb.TagNumber(11)
  set cookedDefault(Node v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasCookedDefault() => $_has(10);
  @$pb.TagNumber(11)
  void clearCookedDefault() => clearField(11);
  @$pb.TagNumber(11)
  Node ensureCookedDefault() => $_ensure(10);

  @$pb.TagNumber(12)
  $core.String get identity => $_getSZ(11);
  @$pb.TagNumber(12)
  set identity($core.String v) { $_setString(11, v); }
  @$pb.TagNumber(12)
  $core.bool hasIdentity() => $_has(11);
  @$pb.TagNumber(12)
  void clearIdentity() => clearField(12);

  @$pb.TagNumber(13)
  RangeVar get identitySequence => $_getN(12);
  @$pb.TagNumber(13)
  set identitySequence(RangeVar v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasIdentitySequence() => $_has(12);
  @$pb.TagNumber(13)
  void clearIdentitySequence() => clearField(13);
  @$pb.TagNumber(13)
  RangeVar ensureIdentitySequence() => $_ensure(12);

  @$pb.TagNumber(14)
  $core.String get generated => $_getSZ(13);
  @$pb.TagNumber(14)
  set generated($core.String v) { $_setString(13, v); }
  @$pb.TagNumber(14)
  $core.bool hasGenerated() => $_has(13);
  @$pb.TagNumber(14)
  void clearGenerated() => clearField(14);

  @$pb.TagNumber(15)
  CollateClause get collClause => $_getN(14);
  @$pb.TagNumber(15)
  set collClause(CollateClause v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasCollClause() => $_has(14);
  @$pb.TagNumber(15)
  void clearCollClause() => clearField(15);
  @$pb.TagNumber(15)
  CollateClause ensureCollClause() => $_ensure(14);

  @$pb.TagNumber(16)
  $core.int get collOid => $_getIZ(15);
  @$pb.TagNumber(16)
  set collOid($core.int v) { $_setUnsignedInt32(15, v); }
  @$pb.TagNumber(16)
  $core.bool hasCollOid() => $_has(15);
  @$pb.TagNumber(16)
  void clearCollOid() => clearField(16);

  @$pb.TagNumber(17)
  $core.List<Node> get constraints => $_getList(16);

  @$pb.TagNumber(18)
  $core.List<Node> get fdwoptions => $_getList(17);

  @$pb.TagNumber(19)
  $core.int get location => $_getIZ(18);
  @$pb.TagNumber(19)
  set location($core.int v) { $_setSignedInt32(18, v); }
  @$pb.TagNumber(19)
  $core.bool hasLocation() => $_has(18);
  @$pb.TagNumber(19)
  void clearLocation() => clearField(19);
}

class TableLikeClause extends $pb.GeneratedMessage {
  factory TableLikeClause({
    RangeVar? relation,
    $core.int? options,
    $core.int? relationOid,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (options != null) {
      $result.options = options;
    }
    if (relationOid != null) {
      $result.relationOid = relationOid;
    }
    return $result;
  }
  TableLikeClause._() : super();
  factory TableLikeClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TableLikeClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TableLikeClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'relationOid', $pb.PbFieldType.OU3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TableLikeClause clone() => TableLikeClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TableLikeClause copyWith(void Function(TableLikeClause) updates) => super.copyWith((message) => updates(message as TableLikeClause)) as TableLikeClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TableLikeClause create() => TableLikeClause._();
  TableLikeClause createEmptyInstance() => create();
  static $pb.PbList<TableLikeClause> createRepeated() => $pb.PbList<TableLikeClause>();
  @$core.pragma('dart2js:noInline')
  static TableLikeClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TableLikeClause>(create);
  static TableLikeClause? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get options => $_getIZ(1);
  @$pb.TagNumber(2)
  set options($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOptions() => $_has(1);
  @$pb.TagNumber(2)
  void clearOptions() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get relationOid => $_getIZ(2);
  @$pb.TagNumber(3)
  set relationOid($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasRelationOid() => $_has(2);
  @$pb.TagNumber(3)
  void clearRelationOid() => clearField(3);
}

class IndexElem extends $pb.GeneratedMessage {
  factory IndexElem({
    $core.String? name,
    Node? expr,
    $core.String? indexcolname,
    $core.Iterable<Node>? collation,
    $core.Iterable<Node>? opclass,
    $core.Iterable<Node>? opclassopts,
    SortByDir? ordering,
    SortByNulls? nullsOrdering,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (expr != null) {
      $result.expr = expr;
    }
    if (indexcolname != null) {
      $result.indexcolname = indexcolname;
    }
    if (collation != null) {
      $result.collation.addAll(collation);
    }
    if (opclass != null) {
      $result.opclass.addAll(opclass);
    }
    if (opclassopts != null) {
      $result.opclassopts.addAll(opclassopts);
    }
    if (ordering != null) {
      $result.ordering = ordering;
    }
    if (nullsOrdering != null) {
      $result.nullsOrdering = nullsOrdering;
    }
    return $result;
  }
  IndexElem._() : super();
  factory IndexElem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory IndexElem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'IndexElem', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..aOM<Node>(2, _omitFieldNames ? '' : 'expr', subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'indexcolname')
    ..pc<Node>(4, _omitFieldNames ? '' : 'collation', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'opclass', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'opclassopts', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<SortByDir>(7, _omitFieldNames ? '' : 'ordering', $pb.PbFieldType.OE, defaultOrMaker: SortByDir.SORT_BY_DIR_UNDEFINED, valueOf: SortByDir.valueOf, enumValues: SortByDir.values)
    ..e<SortByNulls>(8, _omitFieldNames ? '' : 'nulls_ordering', $pb.PbFieldType.OE, defaultOrMaker: SortByNulls.SORT_BY_NULLS_UNDEFINED, valueOf: SortByNulls.valueOf, enumValues: SortByNulls.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  IndexElem clone() => IndexElem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  IndexElem copyWith(void Function(IndexElem) updates) => super.copyWith((message) => updates(message as IndexElem)) as IndexElem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static IndexElem create() => IndexElem._();
  IndexElem createEmptyInstance() => create();
  static $pb.PbList<IndexElem> createRepeated() => $pb.PbList<IndexElem>();
  @$core.pragma('dart2js:noInline')
  static IndexElem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<IndexElem>(create);
  static IndexElem? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  Node get expr => $_getN(1);
  @$pb.TagNumber(2)
  set expr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasExpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearExpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureExpr() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get indexcolname => $_getSZ(2);
  @$pb.TagNumber(3)
  set indexcolname($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasIndexcolname() => $_has(2);
  @$pb.TagNumber(3)
  void clearIndexcolname() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get collation => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get opclass => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get opclassopts => $_getList(5);

  @$pb.TagNumber(7)
  SortByDir get ordering => $_getN(6);
  @$pb.TagNumber(7)
  set ordering(SortByDir v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasOrdering() => $_has(6);
  @$pb.TagNumber(7)
  void clearOrdering() => clearField(7);

  @$pb.TagNumber(8)
  SortByNulls get nullsOrdering => $_getN(7);
  @$pb.TagNumber(8)
  set nullsOrdering(SortByNulls v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasNullsOrdering() => $_has(7);
  @$pb.TagNumber(8)
  void clearNullsOrdering() => clearField(8);
}

class DefElem extends $pb.GeneratedMessage {
  factory DefElem({
    $core.String? defnamespace,
    $core.String? defname,
    Node? arg,
    DefElemAction? defaction,
    $core.int? location,
  }) {
    final $result = create();
    if (defnamespace != null) {
      $result.defnamespace = defnamespace;
    }
    if (defname != null) {
      $result.defname = defname;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (defaction != null) {
      $result.defaction = defaction;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  DefElem._() : super();
  factory DefElem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DefElem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DefElem', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'defnamespace')
    ..aOS(2, _omitFieldNames ? '' : 'defname')
    ..aOM<Node>(3, _omitFieldNames ? '' : 'arg', subBuilder: Node.create)
    ..e<DefElemAction>(4, _omitFieldNames ? '' : 'defaction', $pb.PbFieldType.OE, defaultOrMaker: DefElemAction.DEF_ELEM_ACTION_UNDEFINED, valueOf: DefElemAction.valueOf, enumValues: DefElemAction.values)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DefElem clone() => DefElem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DefElem copyWith(void Function(DefElem) updates) => super.copyWith((message) => updates(message as DefElem)) as DefElem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DefElem create() => DefElem._();
  DefElem createEmptyInstance() => create();
  static $pb.PbList<DefElem> createRepeated() => $pb.PbList<DefElem>();
  @$core.pragma('dart2js:noInline')
  static DefElem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DefElem>(create);
  static DefElem? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get defnamespace => $_getSZ(0);
  @$pb.TagNumber(1)
  set defnamespace($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasDefnamespace() => $_has(0);
  @$pb.TagNumber(1)
  void clearDefnamespace() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get defname => $_getSZ(1);
  @$pb.TagNumber(2)
  set defname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasDefname() => $_has(1);
  @$pb.TagNumber(2)
  void clearDefname() => clearField(2);

  @$pb.TagNumber(3)
  Node get arg => $_getN(2);
  @$pb.TagNumber(3)
  set arg(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasArg() => $_has(2);
  @$pb.TagNumber(3)
  void clearArg() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureArg() => $_ensure(2);

  @$pb.TagNumber(4)
  DefElemAction get defaction => $_getN(3);
  @$pb.TagNumber(4)
  set defaction(DefElemAction v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasDefaction() => $_has(3);
  @$pb.TagNumber(4)
  void clearDefaction() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class LockingClause extends $pb.GeneratedMessage {
  factory LockingClause({
    $core.Iterable<Node>? lockedRels,
    LockClauseStrength? strength,
    LockWaitPolicy? waitPolicy,
  }) {
    final $result = create();
    if (lockedRels != null) {
      $result.lockedRels.addAll(lockedRels);
    }
    if (strength != null) {
      $result.strength = strength;
    }
    if (waitPolicy != null) {
      $result.waitPolicy = waitPolicy;
    }
    return $result;
  }
  LockingClause._() : super();
  factory LockingClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory LockingClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'LockingClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'lockedRels', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<LockClauseStrength>(2, _omitFieldNames ? '' : 'strength', $pb.PbFieldType.OE, defaultOrMaker: LockClauseStrength.LOCK_CLAUSE_STRENGTH_UNDEFINED, valueOf: LockClauseStrength.valueOf, enumValues: LockClauseStrength.values)
    ..e<LockWaitPolicy>(3, _omitFieldNames ? '' : 'waitPolicy', $pb.PbFieldType.OE, defaultOrMaker: LockWaitPolicy.LOCK_WAIT_POLICY_UNDEFINED, valueOf: LockWaitPolicy.valueOf, enumValues: LockWaitPolicy.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  LockingClause clone() => LockingClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  LockingClause copyWith(void Function(LockingClause) updates) => super.copyWith((message) => updates(message as LockingClause)) as LockingClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static LockingClause create() => LockingClause._();
  LockingClause createEmptyInstance() => create();
  static $pb.PbList<LockingClause> createRepeated() => $pb.PbList<LockingClause>();
  @$core.pragma('dart2js:noInline')
  static LockingClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<LockingClause>(create);
  static LockingClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get lockedRels => $_getList(0);

  @$pb.TagNumber(2)
  LockClauseStrength get strength => $_getN(1);
  @$pb.TagNumber(2)
  set strength(LockClauseStrength v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasStrength() => $_has(1);
  @$pb.TagNumber(2)
  void clearStrength() => clearField(2);

  @$pb.TagNumber(3)
  LockWaitPolicy get waitPolicy => $_getN(2);
  @$pb.TagNumber(3)
  set waitPolicy(LockWaitPolicy v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasWaitPolicy() => $_has(2);
  @$pb.TagNumber(3)
  void clearWaitPolicy() => clearField(3);
}

class XmlSerialize extends $pb.GeneratedMessage {
  factory XmlSerialize({
    XmlOptionType? xmloption,
    Node? expr,
    TypeName? typeName,
    $core.bool? indent,
    $core.int? location,
  }) {
    final $result = create();
    if (xmloption != null) {
      $result.xmloption = xmloption;
    }
    if (expr != null) {
      $result.expr = expr;
    }
    if (typeName != null) {
      $result.typeName = typeName;
    }
    if (indent != null) {
      $result.indent = indent;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  XmlSerialize._() : super();
  factory XmlSerialize.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory XmlSerialize.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'XmlSerialize', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<XmlOptionType>(1, _omitFieldNames ? '' : 'xmloption', $pb.PbFieldType.OE, defaultOrMaker: XmlOptionType.XML_OPTION_TYPE_UNDEFINED, valueOf: XmlOptionType.valueOf, enumValues: XmlOptionType.values)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'expr', subBuilder: Node.create)
    ..aOM<TypeName>(3, _omitFieldNames ? '' : 'typeName', subBuilder: TypeName.create)
    ..aOB(4, _omitFieldNames ? '' : 'indent')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  XmlSerialize clone() => XmlSerialize()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  XmlSerialize copyWith(void Function(XmlSerialize) updates) => super.copyWith((message) => updates(message as XmlSerialize)) as XmlSerialize;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static XmlSerialize create() => XmlSerialize._();
  XmlSerialize createEmptyInstance() => create();
  static $pb.PbList<XmlSerialize> createRepeated() => $pb.PbList<XmlSerialize>();
  @$core.pragma('dart2js:noInline')
  static XmlSerialize getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<XmlSerialize>(create);
  static XmlSerialize? _defaultInstance;

  @$pb.TagNumber(1)
  XmlOptionType get xmloption => $_getN(0);
  @$pb.TagNumber(1)
  set xmloption(XmlOptionType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasXmloption() => $_has(0);
  @$pb.TagNumber(1)
  void clearXmloption() => clearField(1);

  @$pb.TagNumber(2)
  Node get expr => $_getN(1);
  @$pb.TagNumber(2)
  set expr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasExpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearExpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureExpr() => $_ensure(1);

  @$pb.TagNumber(3)
  TypeName get typeName => $_getN(2);
  @$pb.TagNumber(3)
  set typeName(TypeName v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasTypeName() => $_has(2);
  @$pb.TagNumber(3)
  void clearTypeName() => clearField(3);
  @$pb.TagNumber(3)
  TypeName ensureTypeName() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.bool get indent => $_getBF(3);
  @$pb.TagNumber(4)
  set indent($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasIndent() => $_has(3);
  @$pb.TagNumber(4)
  void clearIndent() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class PartitionElem extends $pb.GeneratedMessage {
  factory PartitionElem({
    $core.String? name,
    Node? expr,
    $core.Iterable<Node>? collation,
    $core.Iterable<Node>? opclass,
    $core.int? location,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (expr != null) {
      $result.expr = expr;
    }
    if (collation != null) {
      $result.collation.addAll(collation);
    }
    if (opclass != null) {
      $result.opclass.addAll(opclass);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  PartitionElem._() : super();
  factory PartitionElem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PartitionElem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PartitionElem', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..aOM<Node>(2, _omitFieldNames ? '' : 'expr', subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'collation', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'opclass', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PartitionElem clone() => PartitionElem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PartitionElem copyWith(void Function(PartitionElem) updates) => super.copyWith((message) => updates(message as PartitionElem)) as PartitionElem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PartitionElem create() => PartitionElem._();
  PartitionElem createEmptyInstance() => create();
  static $pb.PbList<PartitionElem> createRepeated() => $pb.PbList<PartitionElem>();
  @$core.pragma('dart2js:noInline')
  static PartitionElem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PartitionElem>(create);
  static PartitionElem? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  Node get expr => $_getN(1);
  @$pb.TagNumber(2)
  set expr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasExpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearExpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureExpr() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get collation => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get opclass => $_getList(3);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class PartitionSpec extends $pb.GeneratedMessage {
  factory PartitionSpec({
    PartitionStrategy? strategy,
    $core.Iterable<Node>? partParams,
    $core.int? location,
  }) {
    final $result = create();
    if (strategy != null) {
      $result.strategy = strategy;
    }
    if (partParams != null) {
      $result.partParams.addAll(partParams);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  PartitionSpec._() : super();
  factory PartitionSpec.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PartitionSpec.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PartitionSpec', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<PartitionStrategy>(1, _omitFieldNames ? '' : 'strategy', $pb.PbFieldType.OE, defaultOrMaker: PartitionStrategy.PARTITION_STRATEGY_UNDEFINED, valueOf: PartitionStrategy.valueOf, enumValues: PartitionStrategy.values)
    ..pc<Node>(2, _omitFieldNames ? '' : 'partParams', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PartitionSpec clone() => PartitionSpec()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PartitionSpec copyWith(void Function(PartitionSpec) updates) => super.copyWith((message) => updates(message as PartitionSpec)) as PartitionSpec;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PartitionSpec create() => PartitionSpec._();
  PartitionSpec createEmptyInstance() => create();
  static $pb.PbList<PartitionSpec> createRepeated() => $pb.PbList<PartitionSpec>();
  @$core.pragma('dart2js:noInline')
  static PartitionSpec getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PartitionSpec>(create);
  static PartitionSpec? _defaultInstance;

  @$pb.TagNumber(1)
  PartitionStrategy get strategy => $_getN(0);
  @$pb.TagNumber(1)
  set strategy(PartitionStrategy v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasStrategy() => $_has(0);
  @$pb.TagNumber(1)
  void clearStrategy() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get partParams => $_getList(1);

  @$pb.TagNumber(3)
  $core.int get location => $_getIZ(2);
  @$pb.TagNumber(3)
  set location($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);
}

class PartitionBoundSpec extends $pb.GeneratedMessage {
  factory PartitionBoundSpec({
    $core.String? strategy,
    $core.bool? isDefault,
    $core.int? modulus,
    $core.int? remainder,
    $core.Iterable<Node>? listdatums,
    $core.Iterable<Node>? lowerdatums,
    $core.Iterable<Node>? upperdatums,
    $core.int? location,
  }) {
    final $result = create();
    if (strategy != null) {
      $result.strategy = strategy;
    }
    if (isDefault != null) {
      $result.isDefault = isDefault;
    }
    if (modulus != null) {
      $result.modulus = modulus;
    }
    if (remainder != null) {
      $result.remainder = remainder;
    }
    if (listdatums != null) {
      $result.listdatums.addAll(listdatums);
    }
    if (lowerdatums != null) {
      $result.lowerdatums.addAll(lowerdatums);
    }
    if (upperdatums != null) {
      $result.upperdatums.addAll(upperdatums);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  PartitionBoundSpec._() : super();
  factory PartitionBoundSpec.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PartitionBoundSpec.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PartitionBoundSpec', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'strategy')
    ..aOB(2, _omitFieldNames ? '' : 'is_default')
    ..a<$core.int>(3, _omitFieldNames ? '' : 'modulus', $pb.PbFieldType.O3)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'remainder', $pb.PbFieldType.O3)
    ..pc<Node>(5, _omitFieldNames ? '' : 'listdatums', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'lowerdatums', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(7, _omitFieldNames ? '' : 'upperdatums', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PartitionBoundSpec clone() => PartitionBoundSpec()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PartitionBoundSpec copyWith(void Function(PartitionBoundSpec) updates) => super.copyWith((message) => updates(message as PartitionBoundSpec)) as PartitionBoundSpec;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PartitionBoundSpec create() => PartitionBoundSpec._();
  PartitionBoundSpec createEmptyInstance() => create();
  static $pb.PbList<PartitionBoundSpec> createRepeated() => $pb.PbList<PartitionBoundSpec>();
  @$core.pragma('dart2js:noInline')
  static PartitionBoundSpec getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PartitionBoundSpec>(create);
  static PartitionBoundSpec? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get strategy => $_getSZ(0);
  @$pb.TagNumber(1)
  set strategy($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasStrategy() => $_has(0);
  @$pb.TagNumber(1)
  void clearStrategy() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get isDefault => $_getBF(1);
  @$pb.TagNumber(2)
  set isDefault($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasIsDefault() => $_has(1);
  @$pb.TagNumber(2)
  void clearIsDefault() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get modulus => $_getIZ(2);
  @$pb.TagNumber(3)
  set modulus($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasModulus() => $_has(2);
  @$pb.TagNumber(3)
  void clearModulus() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get remainder => $_getIZ(3);
  @$pb.TagNumber(4)
  set remainder($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasRemainder() => $_has(3);
  @$pb.TagNumber(4)
  void clearRemainder() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get listdatums => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get lowerdatums => $_getList(5);

  @$pb.TagNumber(7)
  $core.List<Node> get upperdatums => $_getList(6);

  @$pb.TagNumber(8)
  $core.int get location => $_getIZ(7);
  @$pb.TagNumber(8)
  set location($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasLocation() => $_has(7);
  @$pb.TagNumber(8)
  void clearLocation() => clearField(8);
}

class PartitionRangeDatum extends $pb.GeneratedMessage {
  factory PartitionRangeDatum({
    PartitionRangeDatumKind? kind,
    Node? value,
    $core.int? location,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (value != null) {
      $result.value = value;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  PartitionRangeDatum._() : super();
  factory PartitionRangeDatum.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PartitionRangeDatum.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PartitionRangeDatum', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<PartitionRangeDatumKind>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: PartitionRangeDatumKind.PARTITION_RANGE_DATUM_KIND_UNDEFINED, valueOf: PartitionRangeDatumKind.valueOf, enumValues: PartitionRangeDatumKind.values)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'value', subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PartitionRangeDatum clone() => PartitionRangeDatum()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PartitionRangeDatum copyWith(void Function(PartitionRangeDatum) updates) => super.copyWith((message) => updates(message as PartitionRangeDatum)) as PartitionRangeDatum;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PartitionRangeDatum create() => PartitionRangeDatum._();
  PartitionRangeDatum createEmptyInstance() => create();
  static $pb.PbList<PartitionRangeDatum> createRepeated() => $pb.PbList<PartitionRangeDatum>();
  @$core.pragma('dart2js:noInline')
  static PartitionRangeDatum getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PartitionRangeDatum>(create);
  static PartitionRangeDatum? _defaultInstance;

  @$pb.TagNumber(1)
  PartitionRangeDatumKind get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(PartitionRangeDatumKind v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  Node get value => $_getN(1);
  @$pb.TagNumber(2)
  set value(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(2)
  void clearValue() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureValue() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get location => $_getIZ(2);
  @$pb.TagNumber(3)
  set location($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);
}

class PartitionCmd extends $pb.GeneratedMessage {
  factory PartitionCmd({
    RangeVar? name,
    PartitionBoundSpec? bound,
    $core.bool? concurrent,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (bound != null) {
      $result.bound = bound;
    }
    if (concurrent != null) {
      $result.concurrent = concurrent;
    }
    return $result;
  }
  PartitionCmd._() : super();
  factory PartitionCmd.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PartitionCmd.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PartitionCmd', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'name', subBuilder: RangeVar.create)
    ..aOM<PartitionBoundSpec>(2, _omitFieldNames ? '' : 'bound', subBuilder: PartitionBoundSpec.create)
    ..aOB(3, _omitFieldNames ? '' : 'concurrent')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PartitionCmd clone() => PartitionCmd()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PartitionCmd copyWith(void Function(PartitionCmd) updates) => super.copyWith((message) => updates(message as PartitionCmd)) as PartitionCmd;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PartitionCmd create() => PartitionCmd._();
  PartitionCmd createEmptyInstance() => create();
  static $pb.PbList<PartitionCmd> createRepeated() => $pb.PbList<PartitionCmd>();
  @$core.pragma('dart2js:noInline')
  static PartitionCmd getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PartitionCmd>(create);
  static PartitionCmd? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get name => $_getN(0);
  @$pb.TagNumber(1)
  set name(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureName() => $_ensure(0);

  @$pb.TagNumber(2)
  PartitionBoundSpec get bound => $_getN(1);
  @$pb.TagNumber(2)
  set bound(PartitionBoundSpec v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasBound() => $_has(1);
  @$pb.TagNumber(2)
  void clearBound() => clearField(2);
  @$pb.TagNumber(2)
  PartitionBoundSpec ensureBound() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.bool get concurrent => $_getBF(2);
  @$pb.TagNumber(3)
  set concurrent($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasConcurrent() => $_has(2);
  @$pb.TagNumber(3)
  void clearConcurrent() => clearField(3);
}

class RangeTblEntry extends $pb.GeneratedMessage {
  factory RangeTblEntry({
    RTEKind? rtekind,
    $core.int? relid,
    $core.String? relkind,
    $core.int? rellockmode,
    TableSampleClause? tablesample,
    $core.int? perminfoindex,
    Query? subquery,
    $core.bool? securityBarrier,
    JoinType? jointype,
    $core.int? joinmergedcols,
    $core.Iterable<Node>? joinaliasvars,
    $core.Iterable<Node>? joinleftcols,
    $core.Iterable<Node>? joinrightcols,
    Alias? joinUsingAlias,
    $core.Iterable<Node>? functions,
    $core.bool? funcordinality,
    TableFunc? tablefunc,
    $core.Iterable<Node>? valuesLists,
    $core.String? ctename,
    $core.int? ctelevelsup,
    $core.bool? selfReference,
    $core.Iterable<Node>? coltypes,
    $core.Iterable<Node>? coltypmods,
    $core.Iterable<Node>? colcollations,
    $core.String? enrname,
    $core.double? enrtuples,
    Alias? alias,
    Alias? eref,
    $core.bool? lateral,
    $core.bool? inh,
    $core.bool? inFromCl,
    $core.Iterable<Node>? securityQuals,
  }) {
    final $result = create();
    if (rtekind != null) {
      $result.rtekind = rtekind;
    }
    if (relid != null) {
      $result.relid = relid;
    }
    if (relkind != null) {
      $result.relkind = relkind;
    }
    if (rellockmode != null) {
      $result.rellockmode = rellockmode;
    }
    if (tablesample != null) {
      $result.tablesample = tablesample;
    }
    if (perminfoindex != null) {
      $result.perminfoindex = perminfoindex;
    }
    if (subquery != null) {
      $result.subquery = subquery;
    }
    if (securityBarrier != null) {
      $result.securityBarrier = securityBarrier;
    }
    if (jointype != null) {
      $result.jointype = jointype;
    }
    if (joinmergedcols != null) {
      $result.joinmergedcols = joinmergedcols;
    }
    if (joinaliasvars != null) {
      $result.joinaliasvars.addAll(joinaliasvars);
    }
    if (joinleftcols != null) {
      $result.joinleftcols.addAll(joinleftcols);
    }
    if (joinrightcols != null) {
      $result.joinrightcols.addAll(joinrightcols);
    }
    if (joinUsingAlias != null) {
      $result.joinUsingAlias = joinUsingAlias;
    }
    if (functions != null) {
      $result.functions.addAll(functions);
    }
    if (funcordinality != null) {
      $result.funcordinality = funcordinality;
    }
    if (tablefunc != null) {
      $result.tablefunc = tablefunc;
    }
    if (valuesLists != null) {
      $result.valuesLists.addAll(valuesLists);
    }
    if (ctename != null) {
      $result.ctename = ctename;
    }
    if (ctelevelsup != null) {
      $result.ctelevelsup = ctelevelsup;
    }
    if (selfReference != null) {
      $result.selfReference = selfReference;
    }
    if (coltypes != null) {
      $result.coltypes.addAll(coltypes);
    }
    if (coltypmods != null) {
      $result.coltypmods.addAll(coltypmods);
    }
    if (colcollations != null) {
      $result.colcollations.addAll(colcollations);
    }
    if (enrname != null) {
      $result.enrname = enrname;
    }
    if (enrtuples != null) {
      $result.enrtuples = enrtuples;
    }
    if (alias != null) {
      $result.alias = alias;
    }
    if (eref != null) {
      $result.eref = eref;
    }
    if (lateral != null) {
      $result.lateral = lateral;
    }
    if (inh != null) {
      $result.inh = inh;
    }
    if (inFromCl != null) {
      $result.inFromCl = inFromCl;
    }
    if (securityQuals != null) {
      $result.securityQuals.addAll(securityQuals);
    }
    return $result;
  }
  RangeTblEntry._() : super();
  factory RangeTblEntry.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeTblEntry.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeTblEntry', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<RTEKind>(1, _omitFieldNames ? '' : 'rtekind', $pb.PbFieldType.OE, defaultOrMaker: RTEKind.RTEKIND_UNDEFINED, valueOf: RTEKind.valueOf, enumValues: RTEKind.values)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'relid', $pb.PbFieldType.OU3)
    ..aOS(3, _omitFieldNames ? '' : 'relkind')
    ..a<$core.int>(4, _omitFieldNames ? '' : 'rellockmode', $pb.PbFieldType.O3)
    ..aOM<TableSampleClause>(5, _omitFieldNames ? '' : 'tablesample', subBuilder: TableSampleClause.create)
    ..a<$core.int>(6, _omitFieldNames ? '' : 'perminfoindex', $pb.PbFieldType.OU3)
    ..aOM<Query>(7, _omitFieldNames ? '' : 'subquery', subBuilder: Query.create)
    ..aOB(8, _omitFieldNames ? '' : 'security_barrier')
    ..e<JoinType>(9, _omitFieldNames ? '' : 'jointype', $pb.PbFieldType.OE, defaultOrMaker: JoinType.JOIN_TYPE_UNDEFINED, valueOf: JoinType.valueOf, enumValues: JoinType.values)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'joinmergedcols', $pb.PbFieldType.O3)
    ..pc<Node>(11, _omitFieldNames ? '' : 'joinaliasvars', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(12, _omitFieldNames ? '' : 'joinleftcols', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(13, _omitFieldNames ? '' : 'joinrightcols', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Alias>(14, _omitFieldNames ? '' : 'join_using_alias', subBuilder: Alias.create)
    ..pc<Node>(15, _omitFieldNames ? '' : 'functions', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(16, _omitFieldNames ? '' : 'funcordinality')
    ..aOM<TableFunc>(17, _omitFieldNames ? '' : 'tablefunc', subBuilder: TableFunc.create)
    ..pc<Node>(18, _omitFieldNames ? '' : 'values_lists', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(19, _omitFieldNames ? '' : 'ctename')
    ..a<$core.int>(20, _omitFieldNames ? '' : 'ctelevelsup', $pb.PbFieldType.OU3)
    ..aOB(21, _omitFieldNames ? '' : 'self_reference')
    ..pc<Node>(22, _omitFieldNames ? '' : 'coltypes', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(23, _omitFieldNames ? '' : 'coltypmods', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(24, _omitFieldNames ? '' : 'colcollations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(25, _omitFieldNames ? '' : 'enrname')
    ..a<$core.double>(26, _omitFieldNames ? '' : 'enrtuples', $pb.PbFieldType.OD)
    ..aOM<Alias>(27, _omitFieldNames ? '' : 'alias', subBuilder: Alias.create)
    ..aOM<Alias>(28, _omitFieldNames ? '' : 'eref', subBuilder: Alias.create)
    ..aOB(29, _omitFieldNames ? '' : 'lateral')
    ..aOB(30, _omitFieldNames ? '' : 'inh')
    ..aOB(31, _omitFieldNames ? '' : 'inFromCl')
    ..pc<Node>(32, _omitFieldNames ? '' : 'securityQuals', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeTblEntry clone() => RangeTblEntry()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeTblEntry copyWith(void Function(RangeTblEntry) updates) => super.copyWith((message) => updates(message as RangeTblEntry)) as RangeTblEntry;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeTblEntry create() => RangeTblEntry._();
  RangeTblEntry createEmptyInstance() => create();
  static $pb.PbList<RangeTblEntry> createRepeated() => $pb.PbList<RangeTblEntry>();
  @$core.pragma('dart2js:noInline')
  static RangeTblEntry getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeTblEntry>(create);
  static RangeTblEntry? _defaultInstance;

  @$pb.TagNumber(1)
  RTEKind get rtekind => $_getN(0);
  @$pb.TagNumber(1)
  set rtekind(RTEKind v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRtekind() => $_has(0);
  @$pb.TagNumber(1)
  void clearRtekind() => clearField(1);

  @$pb.TagNumber(2)
  $core.int get relid => $_getIZ(1);
  @$pb.TagNumber(2)
  set relid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRelid() => $_has(1);
  @$pb.TagNumber(2)
  void clearRelid() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get relkind => $_getSZ(2);
  @$pb.TagNumber(3)
  set relkind($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasRelkind() => $_has(2);
  @$pb.TagNumber(3)
  void clearRelkind() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get rellockmode => $_getIZ(3);
  @$pb.TagNumber(4)
  set rellockmode($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasRellockmode() => $_has(3);
  @$pb.TagNumber(4)
  void clearRellockmode() => clearField(4);

  @$pb.TagNumber(5)
  TableSampleClause get tablesample => $_getN(4);
  @$pb.TagNumber(5)
  set tablesample(TableSampleClause v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasTablesample() => $_has(4);
  @$pb.TagNumber(5)
  void clearTablesample() => clearField(5);
  @$pb.TagNumber(5)
  TableSampleClause ensureTablesample() => $_ensure(4);

  @$pb.TagNumber(6)
  $core.int get perminfoindex => $_getIZ(5);
  @$pb.TagNumber(6)
  set perminfoindex($core.int v) { $_setUnsignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasPerminfoindex() => $_has(5);
  @$pb.TagNumber(6)
  void clearPerminfoindex() => clearField(6);

  @$pb.TagNumber(7)
  Query get subquery => $_getN(6);
  @$pb.TagNumber(7)
  set subquery(Query v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasSubquery() => $_has(6);
  @$pb.TagNumber(7)
  void clearSubquery() => clearField(7);
  @$pb.TagNumber(7)
  Query ensureSubquery() => $_ensure(6);

  @$pb.TagNumber(8)
  $core.bool get securityBarrier => $_getBF(7);
  @$pb.TagNumber(8)
  set securityBarrier($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasSecurityBarrier() => $_has(7);
  @$pb.TagNumber(8)
  void clearSecurityBarrier() => clearField(8);

  @$pb.TagNumber(9)
  JoinType get jointype => $_getN(8);
  @$pb.TagNumber(9)
  set jointype(JoinType v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasJointype() => $_has(8);
  @$pb.TagNumber(9)
  void clearJointype() => clearField(9);

  @$pb.TagNumber(10)
  $core.int get joinmergedcols => $_getIZ(9);
  @$pb.TagNumber(10)
  set joinmergedcols($core.int v) { $_setSignedInt32(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasJoinmergedcols() => $_has(9);
  @$pb.TagNumber(10)
  void clearJoinmergedcols() => clearField(10);

  @$pb.TagNumber(11)
  $core.List<Node> get joinaliasvars => $_getList(10);

  @$pb.TagNumber(12)
  $core.List<Node> get joinleftcols => $_getList(11);

  @$pb.TagNumber(13)
  $core.List<Node> get joinrightcols => $_getList(12);

  @$pb.TagNumber(14)
  Alias get joinUsingAlias => $_getN(13);
  @$pb.TagNumber(14)
  set joinUsingAlias(Alias v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasJoinUsingAlias() => $_has(13);
  @$pb.TagNumber(14)
  void clearJoinUsingAlias() => clearField(14);
  @$pb.TagNumber(14)
  Alias ensureJoinUsingAlias() => $_ensure(13);

  @$pb.TagNumber(15)
  $core.List<Node> get functions => $_getList(14);

  @$pb.TagNumber(16)
  $core.bool get funcordinality => $_getBF(15);
  @$pb.TagNumber(16)
  set funcordinality($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(16)
  $core.bool hasFuncordinality() => $_has(15);
  @$pb.TagNumber(16)
  void clearFuncordinality() => clearField(16);

  @$pb.TagNumber(17)
  TableFunc get tablefunc => $_getN(16);
  @$pb.TagNumber(17)
  set tablefunc(TableFunc v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasTablefunc() => $_has(16);
  @$pb.TagNumber(17)
  void clearTablefunc() => clearField(17);
  @$pb.TagNumber(17)
  TableFunc ensureTablefunc() => $_ensure(16);

  @$pb.TagNumber(18)
  $core.List<Node> get valuesLists => $_getList(17);

  @$pb.TagNumber(19)
  $core.String get ctename => $_getSZ(18);
  @$pb.TagNumber(19)
  set ctename($core.String v) { $_setString(18, v); }
  @$pb.TagNumber(19)
  $core.bool hasCtename() => $_has(18);
  @$pb.TagNumber(19)
  void clearCtename() => clearField(19);

  @$pb.TagNumber(20)
  $core.int get ctelevelsup => $_getIZ(19);
  @$pb.TagNumber(20)
  set ctelevelsup($core.int v) { $_setUnsignedInt32(19, v); }
  @$pb.TagNumber(20)
  $core.bool hasCtelevelsup() => $_has(19);
  @$pb.TagNumber(20)
  void clearCtelevelsup() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get selfReference => $_getBF(20);
  @$pb.TagNumber(21)
  set selfReference($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(21)
  $core.bool hasSelfReference() => $_has(20);
  @$pb.TagNumber(21)
  void clearSelfReference() => clearField(21);

  @$pb.TagNumber(22)
  $core.List<Node> get coltypes => $_getList(21);

  @$pb.TagNumber(23)
  $core.List<Node> get coltypmods => $_getList(22);

  @$pb.TagNumber(24)
  $core.List<Node> get colcollations => $_getList(23);

  @$pb.TagNumber(25)
  $core.String get enrname => $_getSZ(24);
  @$pb.TagNumber(25)
  set enrname($core.String v) { $_setString(24, v); }
  @$pb.TagNumber(25)
  $core.bool hasEnrname() => $_has(24);
  @$pb.TagNumber(25)
  void clearEnrname() => clearField(25);

  @$pb.TagNumber(26)
  $core.double get enrtuples => $_getN(25);
  @$pb.TagNumber(26)
  set enrtuples($core.double v) { $_setDouble(25, v); }
  @$pb.TagNumber(26)
  $core.bool hasEnrtuples() => $_has(25);
  @$pb.TagNumber(26)
  void clearEnrtuples() => clearField(26);

  @$pb.TagNumber(27)
  Alias get alias => $_getN(26);
  @$pb.TagNumber(27)
  set alias(Alias v) { setField(27, v); }
  @$pb.TagNumber(27)
  $core.bool hasAlias() => $_has(26);
  @$pb.TagNumber(27)
  void clearAlias() => clearField(27);
  @$pb.TagNumber(27)
  Alias ensureAlias() => $_ensure(26);

  @$pb.TagNumber(28)
  Alias get eref => $_getN(27);
  @$pb.TagNumber(28)
  set eref(Alias v) { setField(28, v); }
  @$pb.TagNumber(28)
  $core.bool hasEref() => $_has(27);
  @$pb.TagNumber(28)
  void clearEref() => clearField(28);
  @$pb.TagNumber(28)
  Alias ensureEref() => $_ensure(27);

  @$pb.TagNumber(29)
  $core.bool get lateral => $_getBF(28);
  @$pb.TagNumber(29)
  set lateral($core.bool v) { $_setBool(28, v); }
  @$pb.TagNumber(29)
  $core.bool hasLateral() => $_has(28);
  @$pb.TagNumber(29)
  void clearLateral() => clearField(29);

  @$pb.TagNumber(30)
  $core.bool get inh => $_getBF(29);
  @$pb.TagNumber(30)
  set inh($core.bool v) { $_setBool(29, v); }
  @$pb.TagNumber(30)
  $core.bool hasInh() => $_has(29);
  @$pb.TagNumber(30)
  void clearInh() => clearField(30);

  @$pb.TagNumber(31)
  $core.bool get inFromCl => $_getBF(30);
  @$pb.TagNumber(31)
  set inFromCl($core.bool v) { $_setBool(30, v); }
  @$pb.TagNumber(31)
  $core.bool hasInFromCl() => $_has(30);
  @$pb.TagNumber(31)
  void clearInFromCl() => clearField(31);

  @$pb.TagNumber(32)
  $core.List<Node> get securityQuals => $_getList(31);
}

class RTEPermissionInfo extends $pb.GeneratedMessage {
  factory RTEPermissionInfo({
    $core.int? relid,
    $core.bool? inh,
    $fixnum.Int64? requiredPerms,
    $core.int? checkAsUser,
    $core.Iterable<$fixnum.Int64>? selectedCols,
    $core.Iterable<$fixnum.Int64>? insertedCols,
    $core.Iterable<$fixnum.Int64>? updatedCols,
  }) {
    final $result = create();
    if (relid != null) {
      $result.relid = relid;
    }
    if (inh != null) {
      $result.inh = inh;
    }
    if (requiredPerms != null) {
      $result.requiredPerms = requiredPerms;
    }
    if (checkAsUser != null) {
      $result.checkAsUser = checkAsUser;
    }
    if (selectedCols != null) {
      $result.selectedCols.addAll(selectedCols);
    }
    if (insertedCols != null) {
      $result.insertedCols.addAll(insertedCols);
    }
    if (updatedCols != null) {
      $result.updatedCols.addAll(updatedCols);
    }
    return $result;
  }
  RTEPermissionInfo._() : super();
  factory RTEPermissionInfo.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RTEPermissionInfo.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RTEPermissionInfo', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'relid', $pb.PbFieldType.OU3)
    ..aOB(2, _omitFieldNames ? '' : 'inh')
    ..a<$fixnum.Int64>(3, _omitFieldNames ? '' : 'requiredPerms', $pb.PbFieldType.OU6, defaultOrMaker: $fixnum.Int64.ZERO)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'checkAsUser', $pb.PbFieldType.OU3)
    ..p<$fixnum.Int64>(5, _omitFieldNames ? '' : 'selectedCols', $pb.PbFieldType.KU6)
    ..p<$fixnum.Int64>(6, _omitFieldNames ? '' : 'insertedCols', $pb.PbFieldType.KU6)
    ..p<$fixnum.Int64>(7, _omitFieldNames ? '' : 'updatedCols', $pb.PbFieldType.KU6)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RTEPermissionInfo clone() => RTEPermissionInfo()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RTEPermissionInfo copyWith(void Function(RTEPermissionInfo) updates) => super.copyWith((message) => updates(message as RTEPermissionInfo)) as RTEPermissionInfo;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RTEPermissionInfo create() => RTEPermissionInfo._();
  RTEPermissionInfo createEmptyInstance() => create();
  static $pb.PbList<RTEPermissionInfo> createRepeated() => $pb.PbList<RTEPermissionInfo>();
  @$core.pragma('dart2js:noInline')
  static RTEPermissionInfo getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RTEPermissionInfo>(create);
  static RTEPermissionInfo? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get relid => $_getIZ(0);
  @$pb.TagNumber(1)
  set relid($core.int v) { $_setUnsignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelid() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelid() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get inh => $_getBF(1);
  @$pb.TagNumber(2)
  set inh($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasInh() => $_has(1);
  @$pb.TagNumber(2)
  void clearInh() => clearField(2);

  @$pb.TagNumber(3)
  $fixnum.Int64 get requiredPerms => $_getI64(2);
  @$pb.TagNumber(3)
  set requiredPerms($fixnum.Int64 v) { $_setInt64(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasRequiredPerms() => $_has(2);
  @$pb.TagNumber(3)
  void clearRequiredPerms() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get checkAsUser => $_getIZ(3);
  @$pb.TagNumber(4)
  set checkAsUser($core.int v) { $_setUnsignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasCheckAsUser() => $_has(3);
  @$pb.TagNumber(4)
  void clearCheckAsUser() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<$fixnum.Int64> get selectedCols => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<$fixnum.Int64> get insertedCols => $_getList(5);

  @$pb.TagNumber(7)
  $core.List<$fixnum.Int64> get updatedCols => $_getList(6);
}

class RangeTblFunction extends $pb.GeneratedMessage {
  factory RangeTblFunction({
    Node? funcexpr,
    $core.int? funccolcount,
    $core.Iterable<Node>? funccolnames,
    $core.Iterable<Node>? funccoltypes,
    $core.Iterable<Node>? funccoltypmods,
    $core.Iterable<Node>? funccolcollations,
    $core.Iterable<$fixnum.Int64>? funcparams,
  }) {
    final $result = create();
    if (funcexpr != null) {
      $result.funcexpr = funcexpr;
    }
    if (funccolcount != null) {
      $result.funccolcount = funccolcount;
    }
    if (funccolnames != null) {
      $result.funccolnames.addAll(funccolnames);
    }
    if (funccoltypes != null) {
      $result.funccoltypes.addAll(funccoltypes);
    }
    if (funccoltypmods != null) {
      $result.funccoltypmods.addAll(funccoltypmods);
    }
    if (funccolcollations != null) {
      $result.funccolcollations.addAll(funccolcollations);
    }
    if (funcparams != null) {
      $result.funcparams.addAll(funcparams);
    }
    return $result;
  }
  RangeTblFunction._() : super();
  factory RangeTblFunction.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RangeTblFunction.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RangeTblFunction', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'funcexpr', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'funccolcount', $pb.PbFieldType.O3)
    ..pc<Node>(3, _omitFieldNames ? '' : 'funccolnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'funccoltypes', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'funccoltypmods', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'funccolcollations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..p<$fixnum.Int64>(7, _omitFieldNames ? '' : 'funcparams', $pb.PbFieldType.KU6)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RangeTblFunction clone() => RangeTblFunction()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RangeTblFunction copyWith(void Function(RangeTblFunction) updates) => super.copyWith((message) => updates(message as RangeTblFunction)) as RangeTblFunction;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RangeTblFunction create() => RangeTblFunction._();
  RangeTblFunction createEmptyInstance() => create();
  static $pb.PbList<RangeTblFunction> createRepeated() => $pb.PbList<RangeTblFunction>();
  @$core.pragma('dart2js:noInline')
  static RangeTblFunction getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RangeTblFunction>(create);
  static RangeTblFunction? _defaultInstance;

  @$pb.TagNumber(1)
  Node get funcexpr => $_getN(0);
  @$pb.TagNumber(1)
  set funcexpr(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasFuncexpr() => $_has(0);
  @$pb.TagNumber(1)
  void clearFuncexpr() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureFuncexpr() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get funccolcount => $_getIZ(1);
  @$pb.TagNumber(2)
  set funccolcount($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasFunccolcount() => $_has(1);
  @$pb.TagNumber(2)
  void clearFunccolcount() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get funccolnames => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get funccoltypes => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get funccoltypmods => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get funccolcollations => $_getList(5);

  @$pb.TagNumber(7)
  $core.List<$fixnum.Int64> get funcparams => $_getList(6);
}

class TableSampleClause extends $pb.GeneratedMessage {
  factory TableSampleClause({
    $core.int? tsmhandler,
    $core.Iterable<Node>? args,
    Node? repeatable,
  }) {
    final $result = create();
    if (tsmhandler != null) {
      $result.tsmhandler = tsmhandler;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (repeatable != null) {
      $result.repeatable = repeatable;
    }
    return $result;
  }
  TableSampleClause._() : super();
  factory TableSampleClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TableSampleClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TableSampleClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'tsmhandler', $pb.PbFieldType.OU3)
    ..pc<Node>(2, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'repeatable', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TableSampleClause clone() => TableSampleClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TableSampleClause copyWith(void Function(TableSampleClause) updates) => super.copyWith((message) => updates(message as TableSampleClause)) as TableSampleClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TableSampleClause create() => TableSampleClause._();
  TableSampleClause createEmptyInstance() => create();
  static $pb.PbList<TableSampleClause> createRepeated() => $pb.PbList<TableSampleClause>();
  @$core.pragma('dart2js:noInline')
  static TableSampleClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TableSampleClause>(create);
  static TableSampleClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get tsmhandler => $_getIZ(0);
  @$pb.TagNumber(1)
  set tsmhandler($core.int v) { $_setUnsignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasTsmhandler() => $_has(0);
  @$pb.TagNumber(1)
  void clearTsmhandler() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get args => $_getList(1);

  @$pb.TagNumber(3)
  Node get repeatable => $_getN(2);
  @$pb.TagNumber(3)
  set repeatable(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasRepeatable() => $_has(2);
  @$pb.TagNumber(3)
  void clearRepeatable() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureRepeatable() => $_ensure(2);
}

class WithCheckOption extends $pb.GeneratedMessage {
  factory WithCheckOption({
    WCOKind? kind,
    $core.String? relname,
    $core.String? polname,
    Node? qual,
    $core.bool? cascaded,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (relname != null) {
      $result.relname = relname;
    }
    if (polname != null) {
      $result.polname = polname;
    }
    if (qual != null) {
      $result.qual = qual;
    }
    if (cascaded != null) {
      $result.cascaded = cascaded;
    }
    return $result;
  }
  WithCheckOption._() : super();
  factory WithCheckOption.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory WithCheckOption.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'WithCheckOption', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<WCOKind>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: WCOKind.WCOKIND_UNDEFINED, valueOf: WCOKind.valueOf, enumValues: WCOKind.values)
    ..aOS(2, _omitFieldNames ? '' : 'relname')
    ..aOS(3, _omitFieldNames ? '' : 'polname')
    ..aOM<Node>(4, _omitFieldNames ? '' : 'qual', subBuilder: Node.create)
    ..aOB(5, _omitFieldNames ? '' : 'cascaded')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  WithCheckOption clone() => WithCheckOption()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  WithCheckOption copyWith(void Function(WithCheckOption) updates) => super.copyWith((message) => updates(message as WithCheckOption)) as WithCheckOption;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static WithCheckOption create() => WithCheckOption._();
  WithCheckOption createEmptyInstance() => create();
  static $pb.PbList<WithCheckOption> createRepeated() => $pb.PbList<WithCheckOption>();
  @$core.pragma('dart2js:noInline')
  static WithCheckOption getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<WithCheckOption>(create);
  static WithCheckOption? _defaultInstance;

  @$pb.TagNumber(1)
  WCOKind get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(WCOKind v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get relname => $_getSZ(1);
  @$pb.TagNumber(2)
  set relname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRelname() => $_has(1);
  @$pb.TagNumber(2)
  void clearRelname() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get polname => $_getSZ(2);
  @$pb.TagNumber(3)
  set polname($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasPolname() => $_has(2);
  @$pb.TagNumber(3)
  void clearPolname() => clearField(3);

  @$pb.TagNumber(4)
  Node get qual => $_getN(3);
  @$pb.TagNumber(4)
  set qual(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasQual() => $_has(3);
  @$pb.TagNumber(4)
  void clearQual() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureQual() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.bool get cascaded => $_getBF(4);
  @$pb.TagNumber(5)
  set cascaded($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasCascaded() => $_has(4);
  @$pb.TagNumber(5)
  void clearCascaded() => clearField(5);
}

class SortGroupClause extends $pb.GeneratedMessage {
  factory SortGroupClause({
    $core.int? tleSortGroupRef,
    $core.int? eqop,
    $core.int? sortop,
    $core.bool? nullsFirst,
    $core.bool? hashable,
  }) {
    final $result = create();
    if (tleSortGroupRef != null) {
      $result.tleSortGroupRef = tleSortGroupRef;
    }
    if (eqop != null) {
      $result.eqop = eqop;
    }
    if (sortop != null) {
      $result.sortop = sortop;
    }
    if (nullsFirst != null) {
      $result.nullsFirst = nullsFirst;
    }
    if (hashable != null) {
      $result.hashable = hashable;
    }
    return $result;
  }
  SortGroupClause._() : super();
  factory SortGroupClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SortGroupClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SortGroupClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'tleSortGroupRef', $pb.PbFieldType.OU3)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'eqop', $pb.PbFieldType.OU3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'sortop', $pb.PbFieldType.OU3)
    ..aOB(4, _omitFieldNames ? '' : 'nulls_first')
    ..aOB(5, _omitFieldNames ? '' : 'hashable')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SortGroupClause clone() => SortGroupClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SortGroupClause copyWith(void Function(SortGroupClause) updates) => super.copyWith((message) => updates(message as SortGroupClause)) as SortGroupClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SortGroupClause create() => SortGroupClause._();
  SortGroupClause createEmptyInstance() => create();
  static $pb.PbList<SortGroupClause> createRepeated() => $pb.PbList<SortGroupClause>();
  @$core.pragma('dart2js:noInline')
  static SortGroupClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SortGroupClause>(create);
  static SortGroupClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get tleSortGroupRef => $_getIZ(0);
  @$pb.TagNumber(1)
  set tleSortGroupRef($core.int v) { $_setUnsignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasTleSortGroupRef() => $_has(0);
  @$pb.TagNumber(1)
  void clearTleSortGroupRef() => clearField(1);

  @$pb.TagNumber(2)
  $core.int get eqop => $_getIZ(1);
  @$pb.TagNumber(2)
  set eqop($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasEqop() => $_has(1);
  @$pb.TagNumber(2)
  void clearEqop() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get sortop => $_getIZ(2);
  @$pb.TagNumber(3)
  set sortop($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasSortop() => $_has(2);
  @$pb.TagNumber(3)
  void clearSortop() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get nullsFirst => $_getBF(3);
  @$pb.TagNumber(4)
  set nullsFirst($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasNullsFirst() => $_has(3);
  @$pb.TagNumber(4)
  void clearNullsFirst() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get hashable => $_getBF(4);
  @$pb.TagNumber(5)
  set hashable($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasHashable() => $_has(4);
  @$pb.TagNumber(5)
  void clearHashable() => clearField(5);
}

class GroupingSet extends $pb.GeneratedMessage {
  factory GroupingSet({
    GroupingSetKind? kind,
    $core.Iterable<Node>? content,
    $core.int? location,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (content != null) {
      $result.content.addAll(content);
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  GroupingSet._() : super();
  factory GroupingSet.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory GroupingSet.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'GroupingSet', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<GroupingSetKind>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: GroupingSetKind.GROUPING_SET_KIND_UNDEFINED, valueOf: GroupingSetKind.valueOf, enumValues: GroupingSetKind.values)
    ..pc<Node>(2, _omitFieldNames ? '' : 'content', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  GroupingSet clone() => GroupingSet()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  GroupingSet copyWith(void Function(GroupingSet) updates) => super.copyWith((message) => updates(message as GroupingSet)) as GroupingSet;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static GroupingSet create() => GroupingSet._();
  GroupingSet createEmptyInstance() => create();
  static $pb.PbList<GroupingSet> createRepeated() => $pb.PbList<GroupingSet>();
  @$core.pragma('dart2js:noInline')
  static GroupingSet getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<GroupingSet>(create);
  static GroupingSet? _defaultInstance;

  @$pb.TagNumber(1)
  GroupingSetKind get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(GroupingSetKind v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get content => $_getList(1);

  @$pb.TagNumber(3)
  $core.int get location => $_getIZ(2);
  @$pb.TagNumber(3)
  set location($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);
}

class WindowClause extends $pb.GeneratedMessage {
  factory WindowClause({
    $core.String? name,
    $core.String? refname,
    $core.Iterable<Node>? partitionClause,
    $core.Iterable<Node>? orderClause,
    $core.int? frameOptions,
    Node? startOffset,
    Node? endOffset,
    $core.Iterable<Node>? runCondition,
    $core.int? startInRangeFunc,
    $core.int? endInRangeFunc,
    $core.int? inRangeColl,
    $core.bool? inRangeAsc,
    $core.bool? inRangeNullsFirst,
    $core.int? winref,
    $core.bool? copiedOrder,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (refname != null) {
      $result.refname = refname;
    }
    if (partitionClause != null) {
      $result.partitionClause.addAll(partitionClause);
    }
    if (orderClause != null) {
      $result.orderClause.addAll(orderClause);
    }
    if (frameOptions != null) {
      $result.frameOptions = frameOptions;
    }
    if (startOffset != null) {
      $result.startOffset = startOffset;
    }
    if (endOffset != null) {
      $result.endOffset = endOffset;
    }
    if (runCondition != null) {
      $result.runCondition.addAll(runCondition);
    }
    if (startInRangeFunc != null) {
      $result.startInRangeFunc = startInRangeFunc;
    }
    if (endInRangeFunc != null) {
      $result.endInRangeFunc = endInRangeFunc;
    }
    if (inRangeColl != null) {
      $result.inRangeColl = inRangeColl;
    }
    if (inRangeAsc != null) {
      $result.inRangeAsc = inRangeAsc;
    }
    if (inRangeNullsFirst != null) {
      $result.inRangeNullsFirst = inRangeNullsFirst;
    }
    if (winref != null) {
      $result.winref = winref;
    }
    if (copiedOrder != null) {
      $result.copiedOrder = copiedOrder;
    }
    return $result;
  }
  WindowClause._() : super();
  factory WindowClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory WindowClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'WindowClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..aOS(2, _omitFieldNames ? '' : 'refname')
    ..pc<Node>(3, _omitFieldNames ? '' : 'partitionClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'orderClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'frameOptions', $pb.PbFieldType.O3)
    ..aOM<Node>(6, _omitFieldNames ? '' : 'startOffset', subBuilder: Node.create)
    ..aOM<Node>(7, _omitFieldNames ? '' : 'endOffset', subBuilder: Node.create)
    ..pc<Node>(8, _omitFieldNames ? '' : 'runCondition', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(9, _omitFieldNames ? '' : 'startInRangeFunc', $pb.PbFieldType.OU3)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'endInRangeFunc', $pb.PbFieldType.OU3)
    ..a<$core.int>(11, _omitFieldNames ? '' : 'inRangeColl', $pb.PbFieldType.OU3)
    ..aOB(12, _omitFieldNames ? '' : 'inRangeAsc')
    ..aOB(13, _omitFieldNames ? '' : 'inRangeNullsFirst')
    ..a<$core.int>(14, _omitFieldNames ? '' : 'winref', $pb.PbFieldType.OU3)
    ..aOB(15, _omitFieldNames ? '' : 'copiedOrder')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  WindowClause clone() => WindowClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  WindowClause copyWith(void Function(WindowClause) updates) => super.copyWith((message) => updates(message as WindowClause)) as WindowClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static WindowClause create() => WindowClause._();
  WindowClause createEmptyInstance() => create();
  static $pb.PbList<WindowClause> createRepeated() => $pb.PbList<WindowClause>();
  @$core.pragma('dart2js:noInline')
  static WindowClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<WindowClause>(create);
  static WindowClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get refname => $_getSZ(1);
  @$pb.TagNumber(2)
  set refname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRefname() => $_has(1);
  @$pb.TagNumber(2)
  void clearRefname() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get partitionClause => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get orderClause => $_getList(3);

  @$pb.TagNumber(5)
  $core.int get frameOptions => $_getIZ(4);
  @$pb.TagNumber(5)
  set frameOptions($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasFrameOptions() => $_has(4);
  @$pb.TagNumber(5)
  void clearFrameOptions() => clearField(5);

  @$pb.TagNumber(6)
  Node get startOffset => $_getN(5);
  @$pb.TagNumber(6)
  set startOffset(Node v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasStartOffset() => $_has(5);
  @$pb.TagNumber(6)
  void clearStartOffset() => clearField(6);
  @$pb.TagNumber(6)
  Node ensureStartOffset() => $_ensure(5);

  @$pb.TagNumber(7)
  Node get endOffset => $_getN(6);
  @$pb.TagNumber(7)
  set endOffset(Node v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasEndOffset() => $_has(6);
  @$pb.TagNumber(7)
  void clearEndOffset() => clearField(7);
  @$pb.TagNumber(7)
  Node ensureEndOffset() => $_ensure(6);

  @$pb.TagNumber(8)
  $core.List<Node> get runCondition => $_getList(7);

  @$pb.TagNumber(9)
  $core.int get startInRangeFunc => $_getIZ(8);
  @$pb.TagNumber(9)
  set startInRangeFunc($core.int v) { $_setUnsignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasStartInRangeFunc() => $_has(8);
  @$pb.TagNumber(9)
  void clearStartInRangeFunc() => clearField(9);

  @$pb.TagNumber(10)
  $core.int get endInRangeFunc => $_getIZ(9);
  @$pb.TagNumber(10)
  set endInRangeFunc($core.int v) { $_setUnsignedInt32(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasEndInRangeFunc() => $_has(9);
  @$pb.TagNumber(10)
  void clearEndInRangeFunc() => clearField(10);

  @$pb.TagNumber(11)
  $core.int get inRangeColl => $_getIZ(10);
  @$pb.TagNumber(11)
  set inRangeColl($core.int v) { $_setUnsignedInt32(10, v); }
  @$pb.TagNumber(11)
  $core.bool hasInRangeColl() => $_has(10);
  @$pb.TagNumber(11)
  void clearInRangeColl() => clearField(11);

  @$pb.TagNumber(12)
  $core.bool get inRangeAsc => $_getBF(11);
  @$pb.TagNumber(12)
  set inRangeAsc($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(12)
  $core.bool hasInRangeAsc() => $_has(11);
  @$pb.TagNumber(12)
  void clearInRangeAsc() => clearField(12);

  @$pb.TagNumber(13)
  $core.bool get inRangeNullsFirst => $_getBF(12);
  @$pb.TagNumber(13)
  set inRangeNullsFirst($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(13)
  $core.bool hasInRangeNullsFirst() => $_has(12);
  @$pb.TagNumber(13)
  void clearInRangeNullsFirst() => clearField(13);

  @$pb.TagNumber(14)
  $core.int get winref => $_getIZ(13);
  @$pb.TagNumber(14)
  set winref($core.int v) { $_setUnsignedInt32(13, v); }
  @$pb.TagNumber(14)
  $core.bool hasWinref() => $_has(13);
  @$pb.TagNumber(14)
  void clearWinref() => clearField(14);

  @$pb.TagNumber(15)
  $core.bool get copiedOrder => $_getBF(14);
  @$pb.TagNumber(15)
  set copiedOrder($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(15)
  $core.bool hasCopiedOrder() => $_has(14);
  @$pb.TagNumber(15)
  void clearCopiedOrder() => clearField(15);
}

class RowMarkClause extends $pb.GeneratedMessage {
  factory RowMarkClause({
    $core.int? rti,
    LockClauseStrength? strength,
    LockWaitPolicy? waitPolicy,
    $core.bool? pushedDown,
  }) {
    final $result = create();
    if (rti != null) {
      $result.rti = rti;
    }
    if (strength != null) {
      $result.strength = strength;
    }
    if (waitPolicy != null) {
      $result.waitPolicy = waitPolicy;
    }
    if (pushedDown != null) {
      $result.pushedDown = pushedDown;
    }
    return $result;
  }
  RowMarkClause._() : super();
  factory RowMarkClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RowMarkClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RowMarkClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'rti', $pb.PbFieldType.OU3)
    ..e<LockClauseStrength>(2, _omitFieldNames ? '' : 'strength', $pb.PbFieldType.OE, defaultOrMaker: LockClauseStrength.LOCK_CLAUSE_STRENGTH_UNDEFINED, valueOf: LockClauseStrength.valueOf, enumValues: LockClauseStrength.values)
    ..e<LockWaitPolicy>(3, _omitFieldNames ? '' : 'waitPolicy', $pb.PbFieldType.OE, defaultOrMaker: LockWaitPolicy.LOCK_WAIT_POLICY_UNDEFINED, valueOf: LockWaitPolicy.valueOf, enumValues: LockWaitPolicy.values)
    ..aOB(4, _omitFieldNames ? '' : 'pushedDown')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RowMarkClause clone() => RowMarkClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RowMarkClause copyWith(void Function(RowMarkClause) updates) => super.copyWith((message) => updates(message as RowMarkClause)) as RowMarkClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RowMarkClause create() => RowMarkClause._();
  RowMarkClause createEmptyInstance() => create();
  static $pb.PbList<RowMarkClause> createRepeated() => $pb.PbList<RowMarkClause>();
  @$core.pragma('dart2js:noInline')
  static RowMarkClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RowMarkClause>(create);
  static RowMarkClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get rti => $_getIZ(0);
  @$pb.TagNumber(1)
  set rti($core.int v) { $_setUnsignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasRti() => $_has(0);
  @$pb.TagNumber(1)
  void clearRti() => clearField(1);

  @$pb.TagNumber(2)
  LockClauseStrength get strength => $_getN(1);
  @$pb.TagNumber(2)
  set strength(LockClauseStrength v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasStrength() => $_has(1);
  @$pb.TagNumber(2)
  void clearStrength() => clearField(2);

  @$pb.TagNumber(3)
  LockWaitPolicy get waitPolicy => $_getN(2);
  @$pb.TagNumber(3)
  set waitPolicy(LockWaitPolicy v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasWaitPolicy() => $_has(2);
  @$pb.TagNumber(3)
  void clearWaitPolicy() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get pushedDown => $_getBF(3);
  @$pb.TagNumber(4)
  set pushedDown($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasPushedDown() => $_has(3);
  @$pb.TagNumber(4)
  void clearPushedDown() => clearField(4);
}

class WithClause extends $pb.GeneratedMessage {
  factory WithClause({
    $core.Iterable<Node>? ctes,
    $core.bool? recursive,
    $core.int? location,
  }) {
    final $result = create();
    if (ctes != null) {
      $result.ctes.addAll(ctes);
    }
    if (recursive != null) {
      $result.recursive = recursive;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  WithClause._() : super();
  factory WithClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory WithClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'WithClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'ctes', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(2, _omitFieldNames ? '' : 'recursive')
    ..a<$core.int>(3, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  WithClause clone() => WithClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  WithClause copyWith(void Function(WithClause) updates) => super.copyWith((message) => updates(message as WithClause)) as WithClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static WithClause create() => WithClause._();
  WithClause createEmptyInstance() => create();
  static $pb.PbList<WithClause> createRepeated() => $pb.PbList<WithClause>();
  @$core.pragma('dart2js:noInline')
  static WithClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<WithClause>(create);
  static WithClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get ctes => $_getList(0);

  @$pb.TagNumber(2)
  $core.bool get recursive => $_getBF(1);
  @$pb.TagNumber(2)
  set recursive($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRecursive() => $_has(1);
  @$pb.TagNumber(2)
  void clearRecursive() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get location => $_getIZ(2);
  @$pb.TagNumber(3)
  set location($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);
}

class InferClause extends $pb.GeneratedMessage {
  factory InferClause({
    $core.Iterable<Node>? indexElems,
    Node? whereClause,
    $core.String? conname,
    $core.int? location,
  }) {
    final $result = create();
    if (indexElems != null) {
      $result.indexElems.addAll(indexElems);
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (conname != null) {
      $result.conname = conname;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  InferClause._() : super();
  factory InferClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory InferClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'InferClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'indexElems', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'conname')
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  InferClause clone() => InferClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  InferClause copyWith(void Function(InferClause) updates) => super.copyWith((message) => updates(message as InferClause)) as InferClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static InferClause create() => InferClause._();
  InferClause createEmptyInstance() => create();
  static $pb.PbList<InferClause> createRepeated() => $pb.PbList<InferClause>();
  @$core.pragma('dart2js:noInline')
  static InferClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<InferClause>(create);
  static InferClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get indexElems => $_getList(0);

  @$pb.TagNumber(2)
  Node get whereClause => $_getN(1);
  @$pb.TagNumber(2)
  set whereClause(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasWhereClause() => $_has(1);
  @$pb.TagNumber(2)
  void clearWhereClause() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureWhereClause() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get conname => $_getSZ(2);
  @$pb.TagNumber(3)
  set conname($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasConname() => $_has(2);
  @$pb.TagNumber(3)
  void clearConname() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class OnConflictClause extends $pb.GeneratedMessage {
  factory OnConflictClause({
    OnConflictAction? action,
    InferClause? infer,
    $core.Iterable<Node>? targetList,
    Node? whereClause,
    $core.int? location,
  }) {
    final $result = create();
    if (action != null) {
      $result.action = action;
    }
    if (infer != null) {
      $result.infer = infer;
    }
    if (targetList != null) {
      $result.targetList.addAll(targetList);
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  OnConflictClause._() : super();
  factory OnConflictClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory OnConflictClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'OnConflictClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<OnConflictAction>(1, _omitFieldNames ? '' : 'action', $pb.PbFieldType.OE, defaultOrMaker: OnConflictAction.ON_CONFLICT_ACTION_UNDEFINED, valueOf: OnConflictAction.valueOf, enumValues: OnConflictAction.values)
    ..aOM<InferClause>(2, _omitFieldNames ? '' : 'infer', subBuilder: InferClause.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'targetList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  OnConflictClause clone() => OnConflictClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  OnConflictClause copyWith(void Function(OnConflictClause) updates) => super.copyWith((message) => updates(message as OnConflictClause)) as OnConflictClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static OnConflictClause create() => OnConflictClause._();
  OnConflictClause createEmptyInstance() => create();
  static $pb.PbList<OnConflictClause> createRepeated() => $pb.PbList<OnConflictClause>();
  @$core.pragma('dart2js:noInline')
  static OnConflictClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<OnConflictClause>(create);
  static OnConflictClause? _defaultInstance;

  @$pb.TagNumber(1)
  OnConflictAction get action => $_getN(0);
  @$pb.TagNumber(1)
  set action(OnConflictAction v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasAction() => $_has(0);
  @$pb.TagNumber(1)
  void clearAction() => clearField(1);

  @$pb.TagNumber(2)
  InferClause get infer => $_getN(1);
  @$pb.TagNumber(2)
  set infer(InferClause v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasInfer() => $_has(1);
  @$pb.TagNumber(2)
  void clearInfer() => clearField(2);
  @$pb.TagNumber(2)
  InferClause ensureInfer() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get targetList => $_getList(2);

  @$pb.TagNumber(4)
  Node get whereClause => $_getN(3);
  @$pb.TagNumber(4)
  set whereClause(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasWhereClause() => $_has(3);
  @$pb.TagNumber(4)
  void clearWhereClause() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureWhereClause() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class CTESearchClause extends $pb.GeneratedMessage {
  factory CTESearchClause({
    $core.Iterable<Node>? searchColList,
    $core.bool? searchBreadthFirst,
    $core.String? searchSeqColumn,
    $core.int? location,
  }) {
    final $result = create();
    if (searchColList != null) {
      $result.searchColList.addAll(searchColList);
    }
    if (searchBreadthFirst != null) {
      $result.searchBreadthFirst = searchBreadthFirst;
    }
    if (searchSeqColumn != null) {
      $result.searchSeqColumn = searchSeqColumn;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  CTESearchClause._() : super();
  factory CTESearchClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CTESearchClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CTESearchClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'search_col_list', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(2, _omitFieldNames ? '' : 'search_breadth_first')
    ..aOS(3, _omitFieldNames ? '' : 'search_seq_column')
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CTESearchClause clone() => CTESearchClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CTESearchClause copyWith(void Function(CTESearchClause) updates) => super.copyWith((message) => updates(message as CTESearchClause)) as CTESearchClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CTESearchClause create() => CTESearchClause._();
  CTESearchClause createEmptyInstance() => create();
  static $pb.PbList<CTESearchClause> createRepeated() => $pb.PbList<CTESearchClause>();
  @$core.pragma('dart2js:noInline')
  static CTESearchClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CTESearchClause>(create);
  static CTESearchClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get searchColList => $_getList(0);

  @$pb.TagNumber(2)
  $core.bool get searchBreadthFirst => $_getBF(1);
  @$pb.TagNumber(2)
  set searchBreadthFirst($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasSearchBreadthFirst() => $_has(1);
  @$pb.TagNumber(2)
  void clearSearchBreadthFirst() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get searchSeqColumn => $_getSZ(2);
  @$pb.TagNumber(3)
  set searchSeqColumn($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasSearchSeqColumn() => $_has(2);
  @$pb.TagNumber(3)
  void clearSearchSeqColumn() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class CTECycleClause extends $pb.GeneratedMessage {
  factory CTECycleClause({
    $core.Iterable<Node>? cycleColList,
    $core.String? cycleMarkColumn,
    Node? cycleMarkValue,
    Node? cycleMarkDefault,
    $core.String? cyclePathColumn,
    $core.int? location,
    $core.int? cycleMarkType,
    $core.int? cycleMarkTypmod,
    $core.int? cycleMarkCollation,
    $core.int? cycleMarkNeop,
  }) {
    final $result = create();
    if (cycleColList != null) {
      $result.cycleColList.addAll(cycleColList);
    }
    if (cycleMarkColumn != null) {
      $result.cycleMarkColumn = cycleMarkColumn;
    }
    if (cycleMarkValue != null) {
      $result.cycleMarkValue = cycleMarkValue;
    }
    if (cycleMarkDefault != null) {
      $result.cycleMarkDefault = cycleMarkDefault;
    }
    if (cyclePathColumn != null) {
      $result.cyclePathColumn = cyclePathColumn;
    }
    if (location != null) {
      $result.location = location;
    }
    if (cycleMarkType != null) {
      $result.cycleMarkType = cycleMarkType;
    }
    if (cycleMarkTypmod != null) {
      $result.cycleMarkTypmod = cycleMarkTypmod;
    }
    if (cycleMarkCollation != null) {
      $result.cycleMarkCollation = cycleMarkCollation;
    }
    if (cycleMarkNeop != null) {
      $result.cycleMarkNeop = cycleMarkNeop;
    }
    return $result;
  }
  CTECycleClause._() : super();
  factory CTECycleClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CTECycleClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CTECycleClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'cycle_col_list', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(2, _omitFieldNames ? '' : 'cycle_mark_column')
    ..aOM<Node>(3, _omitFieldNames ? '' : 'cycle_mark_value', subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'cycle_mark_default', subBuilder: Node.create)
    ..aOS(5, _omitFieldNames ? '' : 'cycle_path_column')
    ..a<$core.int>(6, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'cycle_mark_type', $pb.PbFieldType.OU3)
    ..a<$core.int>(8, _omitFieldNames ? '' : 'cycle_mark_typmod', $pb.PbFieldType.O3)
    ..a<$core.int>(9, _omitFieldNames ? '' : 'cycle_mark_collation', $pb.PbFieldType.OU3)
    ..a<$core.int>(10, _omitFieldNames ? '' : 'cycle_mark_neop', $pb.PbFieldType.OU3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CTECycleClause clone() => CTECycleClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CTECycleClause copyWith(void Function(CTECycleClause) updates) => super.copyWith((message) => updates(message as CTECycleClause)) as CTECycleClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CTECycleClause create() => CTECycleClause._();
  CTECycleClause createEmptyInstance() => create();
  static $pb.PbList<CTECycleClause> createRepeated() => $pb.PbList<CTECycleClause>();
  @$core.pragma('dart2js:noInline')
  static CTECycleClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CTECycleClause>(create);
  static CTECycleClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get cycleColList => $_getList(0);

  @$pb.TagNumber(2)
  $core.String get cycleMarkColumn => $_getSZ(1);
  @$pb.TagNumber(2)
  set cycleMarkColumn($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasCycleMarkColumn() => $_has(1);
  @$pb.TagNumber(2)
  void clearCycleMarkColumn() => clearField(2);

  @$pb.TagNumber(3)
  Node get cycleMarkValue => $_getN(2);
  @$pb.TagNumber(3)
  set cycleMarkValue(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasCycleMarkValue() => $_has(2);
  @$pb.TagNumber(3)
  void clearCycleMarkValue() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureCycleMarkValue() => $_ensure(2);

  @$pb.TagNumber(4)
  Node get cycleMarkDefault => $_getN(3);
  @$pb.TagNumber(4)
  set cycleMarkDefault(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasCycleMarkDefault() => $_has(3);
  @$pb.TagNumber(4)
  void clearCycleMarkDefault() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureCycleMarkDefault() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.String get cyclePathColumn => $_getSZ(4);
  @$pb.TagNumber(5)
  set cyclePathColumn($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasCyclePathColumn() => $_has(4);
  @$pb.TagNumber(5)
  void clearCyclePathColumn() => clearField(5);

  @$pb.TagNumber(6)
  $core.int get location => $_getIZ(5);
  @$pb.TagNumber(6)
  set location($core.int v) { $_setSignedInt32(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasLocation() => $_has(5);
  @$pb.TagNumber(6)
  void clearLocation() => clearField(6);

  @$pb.TagNumber(7)
  $core.int get cycleMarkType => $_getIZ(6);
  @$pb.TagNumber(7)
  set cycleMarkType($core.int v) { $_setUnsignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasCycleMarkType() => $_has(6);
  @$pb.TagNumber(7)
  void clearCycleMarkType() => clearField(7);

  @$pb.TagNumber(8)
  $core.int get cycleMarkTypmod => $_getIZ(7);
  @$pb.TagNumber(8)
  set cycleMarkTypmod($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasCycleMarkTypmod() => $_has(7);
  @$pb.TagNumber(8)
  void clearCycleMarkTypmod() => clearField(8);

  @$pb.TagNumber(9)
  $core.int get cycleMarkCollation => $_getIZ(8);
  @$pb.TagNumber(9)
  set cycleMarkCollation($core.int v) { $_setUnsignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasCycleMarkCollation() => $_has(8);
  @$pb.TagNumber(9)
  void clearCycleMarkCollation() => clearField(9);

  @$pb.TagNumber(10)
  $core.int get cycleMarkNeop => $_getIZ(9);
  @$pb.TagNumber(10)
  set cycleMarkNeop($core.int v) { $_setUnsignedInt32(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasCycleMarkNeop() => $_has(9);
  @$pb.TagNumber(10)
  void clearCycleMarkNeop() => clearField(10);
}

class CommonTableExpr extends $pb.GeneratedMessage {
  factory CommonTableExpr({
    $core.String? ctename,
    $core.Iterable<Node>? aliascolnames,
    CTEMaterialize? ctematerialized,
    Node? ctequery,
    CTESearchClause? searchClause,
    CTECycleClause? cycleClause,
    $core.int? location,
    $core.bool? cterecursive,
    $core.int? cterefcount,
    $core.Iterable<Node>? ctecolnames,
    $core.Iterable<Node>? ctecoltypes,
    $core.Iterable<Node>? ctecoltypmods,
    $core.Iterable<Node>? ctecolcollations,
  }) {
    final $result = create();
    if (ctename != null) {
      $result.ctename = ctename;
    }
    if (aliascolnames != null) {
      $result.aliascolnames.addAll(aliascolnames);
    }
    if (ctematerialized != null) {
      $result.ctematerialized = ctematerialized;
    }
    if (ctequery != null) {
      $result.ctequery = ctequery;
    }
    if (searchClause != null) {
      $result.searchClause = searchClause;
    }
    if (cycleClause != null) {
      $result.cycleClause = cycleClause;
    }
    if (location != null) {
      $result.location = location;
    }
    if (cterecursive != null) {
      $result.cterecursive = cterecursive;
    }
    if (cterefcount != null) {
      $result.cterefcount = cterefcount;
    }
    if (ctecolnames != null) {
      $result.ctecolnames.addAll(ctecolnames);
    }
    if (ctecoltypes != null) {
      $result.ctecoltypes.addAll(ctecoltypes);
    }
    if (ctecoltypmods != null) {
      $result.ctecoltypmods.addAll(ctecoltypmods);
    }
    if (ctecolcollations != null) {
      $result.ctecolcollations.addAll(ctecolcollations);
    }
    return $result;
  }
  CommonTableExpr._() : super();
  factory CommonTableExpr.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CommonTableExpr.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CommonTableExpr', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'ctename')
    ..pc<Node>(2, _omitFieldNames ? '' : 'aliascolnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<CTEMaterialize>(3, _omitFieldNames ? '' : 'ctematerialized', $pb.PbFieldType.OE, defaultOrMaker: CTEMaterialize.CTEMATERIALIZE_UNDEFINED, valueOf: CTEMaterialize.valueOf, enumValues: CTEMaterialize.values)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'ctequery', subBuilder: Node.create)
    ..aOM<CTESearchClause>(5, _omitFieldNames ? '' : 'search_clause', subBuilder: CTESearchClause.create)
    ..aOM<CTECycleClause>(6, _omitFieldNames ? '' : 'cycle_clause', subBuilder: CTECycleClause.create)
    ..a<$core.int>(7, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..aOB(8, _omitFieldNames ? '' : 'cterecursive')
    ..a<$core.int>(9, _omitFieldNames ? '' : 'cterefcount', $pb.PbFieldType.O3)
    ..pc<Node>(10, _omitFieldNames ? '' : 'ctecolnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(11, _omitFieldNames ? '' : 'ctecoltypes', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(12, _omitFieldNames ? '' : 'ctecoltypmods', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(13, _omitFieldNames ? '' : 'ctecolcollations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CommonTableExpr clone() => CommonTableExpr()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CommonTableExpr copyWith(void Function(CommonTableExpr) updates) => super.copyWith((message) => updates(message as CommonTableExpr)) as CommonTableExpr;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CommonTableExpr create() => CommonTableExpr._();
  CommonTableExpr createEmptyInstance() => create();
  static $pb.PbList<CommonTableExpr> createRepeated() => $pb.PbList<CommonTableExpr>();
  @$core.pragma('dart2js:noInline')
  static CommonTableExpr getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CommonTableExpr>(create);
  static CommonTableExpr? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get ctename => $_getSZ(0);
  @$pb.TagNumber(1)
  set ctename($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasCtename() => $_has(0);
  @$pb.TagNumber(1)
  void clearCtename() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get aliascolnames => $_getList(1);

  @$pb.TagNumber(3)
  CTEMaterialize get ctematerialized => $_getN(2);
  @$pb.TagNumber(3)
  set ctematerialized(CTEMaterialize v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasCtematerialized() => $_has(2);
  @$pb.TagNumber(3)
  void clearCtematerialized() => clearField(3);

  @$pb.TagNumber(4)
  Node get ctequery => $_getN(3);
  @$pb.TagNumber(4)
  set ctequery(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasCtequery() => $_has(3);
  @$pb.TagNumber(4)
  void clearCtequery() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureCtequery() => $_ensure(3);

  @$pb.TagNumber(5)
  CTESearchClause get searchClause => $_getN(4);
  @$pb.TagNumber(5)
  set searchClause(CTESearchClause v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasSearchClause() => $_has(4);
  @$pb.TagNumber(5)
  void clearSearchClause() => clearField(5);
  @$pb.TagNumber(5)
  CTESearchClause ensureSearchClause() => $_ensure(4);

  @$pb.TagNumber(6)
  CTECycleClause get cycleClause => $_getN(5);
  @$pb.TagNumber(6)
  set cycleClause(CTECycleClause v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasCycleClause() => $_has(5);
  @$pb.TagNumber(6)
  void clearCycleClause() => clearField(6);
  @$pb.TagNumber(6)
  CTECycleClause ensureCycleClause() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.int get location => $_getIZ(6);
  @$pb.TagNumber(7)
  set location($core.int v) { $_setSignedInt32(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasLocation() => $_has(6);
  @$pb.TagNumber(7)
  void clearLocation() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get cterecursive => $_getBF(7);
  @$pb.TagNumber(8)
  set cterecursive($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasCterecursive() => $_has(7);
  @$pb.TagNumber(8)
  void clearCterecursive() => clearField(8);

  @$pb.TagNumber(9)
  $core.int get cterefcount => $_getIZ(8);
  @$pb.TagNumber(9)
  set cterefcount($core.int v) { $_setSignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasCterefcount() => $_has(8);
  @$pb.TagNumber(9)
  void clearCterefcount() => clearField(9);

  @$pb.TagNumber(10)
  $core.List<Node> get ctecolnames => $_getList(9);

  @$pb.TagNumber(11)
  $core.List<Node> get ctecoltypes => $_getList(10);

  @$pb.TagNumber(12)
  $core.List<Node> get ctecoltypmods => $_getList(11);

  @$pb.TagNumber(13)
  $core.List<Node> get ctecolcollations => $_getList(12);
}

class MergeWhenClause extends $pb.GeneratedMessage {
  factory MergeWhenClause({
    $core.bool? matched,
    CmdType? commandType,
    OverridingKind? override,
    Node? condition,
    $core.Iterable<Node>? targetList,
    $core.Iterable<Node>? values,
  }) {
    final $result = create();
    if (matched != null) {
      $result.matched = matched;
    }
    if (commandType != null) {
      $result.commandType = commandType;
    }
    if (override != null) {
      $result.override = override;
    }
    if (condition != null) {
      $result.condition = condition;
    }
    if (targetList != null) {
      $result.targetList.addAll(targetList);
    }
    if (values != null) {
      $result.values.addAll(values);
    }
    return $result;
  }
  MergeWhenClause._() : super();
  factory MergeWhenClause.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MergeWhenClause.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MergeWhenClause', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'matched')
    ..e<CmdType>(2, _omitFieldNames ? '' : 'commandType', $pb.PbFieldType.OE, defaultOrMaker: CmdType.CMD_TYPE_UNDEFINED, valueOf: CmdType.valueOf, enumValues: CmdType.values)
    ..e<OverridingKind>(3, _omitFieldNames ? '' : 'override', $pb.PbFieldType.OE, defaultOrMaker: OverridingKind.OVERRIDING_KIND_UNDEFINED, valueOf: OverridingKind.valueOf, enumValues: OverridingKind.values)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'condition', subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'targetList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'values', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MergeWhenClause clone() => MergeWhenClause()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MergeWhenClause copyWith(void Function(MergeWhenClause) updates) => super.copyWith((message) => updates(message as MergeWhenClause)) as MergeWhenClause;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MergeWhenClause create() => MergeWhenClause._();
  MergeWhenClause createEmptyInstance() => create();
  static $pb.PbList<MergeWhenClause> createRepeated() => $pb.PbList<MergeWhenClause>();
  @$core.pragma('dart2js:noInline')
  static MergeWhenClause getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MergeWhenClause>(create);
  static MergeWhenClause? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get matched => $_getBF(0);
  @$pb.TagNumber(1)
  set matched($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasMatched() => $_has(0);
  @$pb.TagNumber(1)
  void clearMatched() => clearField(1);

  @$pb.TagNumber(2)
  CmdType get commandType => $_getN(1);
  @$pb.TagNumber(2)
  set commandType(CmdType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasCommandType() => $_has(1);
  @$pb.TagNumber(2)
  void clearCommandType() => clearField(2);

  @$pb.TagNumber(3)
  OverridingKind get override => $_getN(2);
  @$pb.TagNumber(3)
  set override(OverridingKind v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasOverride() => $_has(2);
  @$pb.TagNumber(3)
  void clearOverride() => clearField(3);

  @$pb.TagNumber(4)
  Node get condition => $_getN(3);
  @$pb.TagNumber(4)
  set condition(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasCondition() => $_has(3);
  @$pb.TagNumber(4)
  void clearCondition() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureCondition() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get targetList => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get values => $_getList(5);
}

class MergeAction extends $pb.GeneratedMessage {
  factory MergeAction({
    $core.bool? matched,
    CmdType? commandType,
    OverridingKind? override,
    Node? qual,
    $core.Iterable<Node>? targetList,
    $core.Iterable<Node>? updateColnos,
  }) {
    final $result = create();
    if (matched != null) {
      $result.matched = matched;
    }
    if (commandType != null) {
      $result.commandType = commandType;
    }
    if (override != null) {
      $result.override = override;
    }
    if (qual != null) {
      $result.qual = qual;
    }
    if (targetList != null) {
      $result.targetList.addAll(targetList);
    }
    if (updateColnos != null) {
      $result.updateColnos.addAll(updateColnos);
    }
    return $result;
  }
  MergeAction._() : super();
  factory MergeAction.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MergeAction.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MergeAction', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'matched')
    ..e<CmdType>(2, _omitFieldNames ? '' : 'commandType', $pb.PbFieldType.OE, defaultOrMaker: CmdType.CMD_TYPE_UNDEFINED, valueOf: CmdType.valueOf, enumValues: CmdType.values)
    ..e<OverridingKind>(3, _omitFieldNames ? '' : 'override', $pb.PbFieldType.OE, defaultOrMaker: OverridingKind.OVERRIDING_KIND_UNDEFINED, valueOf: OverridingKind.valueOf, enumValues: OverridingKind.values)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'qual', subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'targetList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'updateColnos', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MergeAction clone() => MergeAction()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MergeAction copyWith(void Function(MergeAction) updates) => super.copyWith((message) => updates(message as MergeAction)) as MergeAction;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MergeAction create() => MergeAction._();
  MergeAction createEmptyInstance() => create();
  static $pb.PbList<MergeAction> createRepeated() => $pb.PbList<MergeAction>();
  @$core.pragma('dart2js:noInline')
  static MergeAction getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MergeAction>(create);
  static MergeAction? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get matched => $_getBF(0);
  @$pb.TagNumber(1)
  set matched($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasMatched() => $_has(0);
  @$pb.TagNumber(1)
  void clearMatched() => clearField(1);

  @$pb.TagNumber(2)
  CmdType get commandType => $_getN(1);
  @$pb.TagNumber(2)
  set commandType(CmdType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasCommandType() => $_has(1);
  @$pb.TagNumber(2)
  void clearCommandType() => clearField(2);

  @$pb.TagNumber(3)
  OverridingKind get override => $_getN(2);
  @$pb.TagNumber(3)
  set override(OverridingKind v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasOverride() => $_has(2);
  @$pb.TagNumber(3)
  void clearOverride() => clearField(3);

  @$pb.TagNumber(4)
  Node get qual => $_getN(3);
  @$pb.TagNumber(4)
  set qual(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasQual() => $_has(3);
  @$pb.TagNumber(4)
  void clearQual() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureQual() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get targetList => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get updateColnos => $_getList(5);
}

class TriggerTransition extends $pb.GeneratedMessage {
  factory TriggerTransition({
    $core.String? name,
    $core.bool? isNew,
    $core.bool? isTable,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (isNew != null) {
      $result.isNew = isNew;
    }
    if (isTable != null) {
      $result.isTable = isTable;
    }
    return $result;
  }
  TriggerTransition._() : super();
  factory TriggerTransition.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TriggerTransition.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TriggerTransition', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..aOB(2, _omitFieldNames ? '' : 'isNew')
    ..aOB(3, _omitFieldNames ? '' : 'isTable')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TriggerTransition clone() => TriggerTransition()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TriggerTransition copyWith(void Function(TriggerTransition) updates) => super.copyWith((message) => updates(message as TriggerTransition)) as TriggerTransition;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TriggerTransition create() => TriggerTransition._();
  TriggerTransition createEmptyInstance() => create();
  static $pb.PbList<TriggerTransition> createRepeated() => $pb.PbList<TriggerTransition>();
  @$core.pragma('dart2js:noInline')
  static TriggerTransition getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TriggerTransition>(create);
  static TriggerTransition? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get isNew => $_getBF(1);
  @$pb.TagNumber(2)
  set isNew($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasIsNew() => $_has(1);
  @$pb.TagNumber(2)
  void clearIsNew() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get isTable => $_getBF(2);
  @$pb.TagNumber(3)
  set isTable($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasIsTable() => $_has(2);
  @$pb.TagNumber(3)
  void clearIsTable() => clearField(3);
}

class JsonOutput extends $pb.GeneratedMessage {
  factory JsonOutput({
    TypeName? typeName,
    JsonReturning? returning,
  }) {
    final $result = create();
    if (typeName != null) {
      $result.typeName = typeName;
    }
    if (returning != null) {
      $result.returning = returning;
    }
    return $result;
  }
  JsonOutput._() : super();
  factory JsonOutput.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonOutput.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonOutput', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<TypeName>(1, _omitFieldNames ? '' : 'typeName', subBuilder: TypeName.create)
    ..aOM<JsonReturning>(2, _omitFieldNames ? '' : 'returning', subBuilder: JsonReturning.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonOutput clone() => JsonOutput()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonOutput copyWith(void Function(JsonOutput) updates) => super.copyWith((message) => updates(message as JsonOutput)) as JsonOutput;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonOutput create() => JsonOutput._();
  JsonOutput createEmptyInstance() => create();
  static $pb.PbList<JsonOutput> createRepeated() => $pb.PbList<JsonOutput>();
  @$core.pragma('dart2js:noInline')
  static JsonOutput getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonOutput>(create);
  static JsonOutput? _defaultInstance;

  @$pb.TagNumber(1)
  TypeName get typeName => $_getN(0);
  @$pb.TagNumber(1)
  set typeName(TypeName v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasTypeName() => $_has(0);
  @$pb.TagNumber(1)
  void clearTypeName() => clearField(1);
  @$pb.TagNumber(1)
  TypeName ensureTypeName() => $_ensure(0);

  @$pb.TagNumber(2)
  JsonReturning get returning => $_getN(1);
  @$pb.TagNumber(2)
  set returning(JsonReturning v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasReturning() => $_has(1);
  @$pb.TagNumber(2)
  void clearReturning() => clearField(2);
  @$pb.TagNumber(2)
  JsonReturning ensureReturning() => $_ensure(1);
}

class JsonKeyValue extends $pb.GeneratedMessage {
  factory JsonKeyValue({
    Node? key,
    JsonValueExpr? value,
  }) {
    final $result = create();
    if (key != null) {
      $result.key = key;
    }
    if (value != null) {
      $result.value = value;
    }
    return $result;
  }
  JsonKeyValue._() : super();
  factory JsonKeyValue.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonKeyValue.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonKeyValue', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'key', subBuilder: Node.create)
    ..aOM<JsonValueExpr>(2, _omitFieldNames ? '' : 'value', subBuilder: JsonValueExpr.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonKeyValue clone() => JsonKeyValue()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonKeyValue copyWith(void Function(JsonKeyValue) updates) => super.copyWith((message) => updates(message as JsonKeyValue)) as JsonKeyValue;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonKeyValue create() => JsonKeyValue._();
  JsonKeyValue createEmptyInstance() => create();
  static $pb.PbList<JsonKeyValue> createRepeated() => $pb.PbList<JsonKeyValue>();
  @$core.pragma('dart2js:noInline')
  static JsonKeyValue getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonKeyValue>(create);
  static JsonKeyValue? _defaultInstance;

  @$pb.TagNumber(1)
  Node get key => $_getN(0);
  @$pb.TagNumber(1)
  set key(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKey() => $_has(0);
  @$pb.TagNumber(1)
  void clearKey() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureKey() => $_ensure(0);

  @$pb.TagNumber(2)
  JsonValueExpr get value => $_getN(1);
  @$pb.TagNumber(2)
  set value(JsonValueExpr v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasValue() => $_has(1);
  @$pb.TagNumber(2)
  void clearValue() => clearField(2);
  @$pb.TagNumber(2)
  JsonValueExpr ensureValue() => $_ensure(1);
}

class JsonObjectConstructor extends $pb.GeneratedMessage {
  factory JsonObjectConstructor({
    $core.Iterable<Node>? exprs,
    JsonOutput? output,
    $core.bool? absentOnNull,
    $core.bool? unique,
    $core.int? location,
  }) {
    final $result = create();
    if (exprs != null) {
      $result.exprs.addAll(exprs);
    }
    if (output != null) {
      $result.output = output;
    }
    if (absentOnNull != null) {
      $result.absentOnNull = absentOnNull;
    }
    if (unique != null) {
      $result.unique = unique;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  JsonObjectConstructor._() : super();
  factory JsonObjectConstructor.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonObjectConstructor.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonObjectConstructor', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'exprs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<JsonOutput>(2, _omitFieldNames ? '' : 'output', subBuilder: JsonOutput.create)
    ..aOB(3, _omitFieldNames ? '' : 'absent_on_null')
    ..aOB(4, _omitFieldNames ? '' : 'unique')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonObjectConstructor clone() => JsonObjectConstructor()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonObjectConstructor copyWith(void Function(JsonObjectConstructor) updates) => super.copyWith((message) => updates(message as JsonObjectConstructor)) as JsonObjectConstructor;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonObjectConstructor create() => JsonObjectConstructor._();
  JsonObjectConstructor createEmptyInstance() => create();
  static $pb.PbList<JsonObjectConstructor> createRepeated() => $pb.PbList<JsonObjectConstructor>();
  @$core.pragma('dart2js:noInline')
  static JsonObjectConstructor getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonObjectConstructor>(create);
  static JsonObjectConstructor? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get exprs => $_getList(0);

  @$pb.TagNumber(2)
  JsonOutput get output => $_getN(1);
  @$pb.TagNumber(2)
  set output(JsonOutput v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasOutput() => $_has(1);
  @$pb.TagNumber(2)
  void clearOutput() => clearField(2);
  @$pb.TagNumber(2)
  JsonOutput ensureOutput() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.bool get absentOnNull => $_getBF(2);
  @$pb.TagNumber(3)
  set absentOnNull($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAbsentOnNull() => $_has(2);
  @$pb.TagNumber(3)
  void clearAbsentOnNull() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get unique => $_getBF(3);
  @$pb.TagNumber(4)
  set unique($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasUnique() => $_has(3);
  @$pb.TagNumber(4)
  void clearUnique() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class JsonArrayConstructor extends $pb.GeneratedMessage {
  factory JsonArrayConstructor({
    $core.Iterable<Node>? exprs,
    JsonOutput? output,
    $core.bool? absentOnNull,
    $core.int? location,
  }) {
    final $result = create();
    if (exprs != null) {
      $result.exprs.addAll(exprs);
    }
    if (output != null) {
      $result.output = output;
    }
    if (absentOnNull != null) {
      $result.absentOnNull = absentOnNull;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  JsonArrayConstructor._() : super();
  factory JsonArrayConstructor.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonArrayConstructor.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonArrayConstructor', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'exprs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<JsonOutput>(2, _omitFieldNames ? '' : 'output', subBuilder: JsonOutput.create)
    ..aOB(3, _omitFieldNames ? '' : 'absent_on_null')
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonArrayConstructor clone() => JsonArrayConstructor()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonArrayConstructor copyWith(void Function(JsonArrayConstructor) updates) => super.copyWith((message) => updates(message as JsonArrayConstructor)) as JsonArrayConstructor;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonArrayConstructor create() => JsonArrayConstructor._();
  JsonArrayConstructor createEmptyInstance() => create();
  static $pb.PbList<JsonArrayConstructor> createRepeated() => $pb.PbList<JsonArrayConstructor>();
  @$core.pragma('dart2js:noInline')
  static JsonArrayConstructor getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonArrayConstructor>(create);
  static JsonArrayConstructor? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get exprs => $_getList(0);

  @$pb.TagNumber(2)
  JsonOutput get output => $_getN(1);
  @$pb.TagNumber(2)
  set output(JsonOutput v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasOutput() => $_has(1);
  @$pb.TagNumber(2)
  void clearOutput() => clearField(2);
  @$pb.TagNumber(2)
  JsonOutput ensureOutput() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.bool get absentOnNull => $_getBF(2);
  @$pb.TagNumber(3)
  set absentOnNull($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAbsentOnNull() => $_has(2);
  @$pb.TagNumber(3)
  void clearAbsentOnNull() => clearField(3);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class JsonArrayQueryConstructor extends $pb.GeneratedMessage {
  factory JsonArrayQueryConstructor({
    Node? query,
    JsonOutput? output,
    JsonFormat? format,
    $core.bool? absentOnNull,
    $core.int? location,
  }) {
    final $result = create();
    if (query != null) {
      $result.query = query;
    }
    if (output != null) {
      $result.output = output;
    }
    if (format != null) {
      $result.format = format;
    }
    if (absentOnNull != null) {
      $result.absentOnNull = absentOnNull;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  JsonArrayQueryConstructor._() : super();
  factory JsonArrayQueryConstructor.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonArrayQueryConstructor.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonArrayQueryConstructor', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'query', subBuilder: Node.create)
    ..aOM<JsonOutput>(2, _omitFieldNames ? '' : 'output', subBuilder: JsonOutput.create)
    ..aOM<JsonFormat>(3, _omitFieldNames ? '' : 'format', subBuilder: JsonFormat.create)
    ..aOB(4, _omitFieldNames ? '' : 'absent_on_null')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonArrayQueryConstructor clone() => JsonArrayQueryConstructor()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonArrayQueryConstructor copyWith(void Function(JsonArrayQueryConstructor) updates) => super.copyWith((message) => updates(message as JsonArrayQueryConstructor)) as JsonArrayQueryConstructor;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonArrayQueryConstructor create() => JsonArrayQueryConstructor._();
  JsonArrayQueryConstructor createEmptyInstance() => create();
  static $pb.PbList<JsonArrayQueryConstructor> createRepeated() => $pb.PbList<JsonArrayQueryConstructor>();
  @$core.pragma('dart2js:noInline')
  static JsonArrayQueryConstructor getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonArrayQueryConstructor>(create);
  static JsonArrayQueryConstructor? _defaultInstance;

  @$pb.TagNumber(1)
  Node get query => $_getN(0);
  @$pb.TagNumber(1)
  set query(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasQuery() => $_has(0);
  @$pb.TagNumber(1)
  void clearQuery() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureQuery() => $_ensure(0);

  @$pb.TagNumber(2)
  JsonOutput get output => $_getN(1);
  @$pb.TagNumber(2)
  set output(JsonOutput v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasOutput() => $_has(1);
  @$pb.TagNumber(2)
  void clearOutput() => clearField(2);
  @$pb.TagNumber(2)
  JsonOutput ensureOutput() => $_ensure(1);

  @$pb.TagNumber(3)
  JsonFormat get format => $_getN(2);
  @$pb.TagNumber(3)
  set format(JsonFormat v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasFormat() => $_has(2);
  @$pb.TagNumber(3)
  void clearFormat() => clearField(3);
  @$pb.TagNumber(3)
  JsonFormat ensureFormat() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.bool get absentOnNull => $_getBF(3);
  @$pb.TagNumber(4)
  set absentOnNull($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasAbsentOnNull() => $_has(3);
  @$pb.TagNumber(4)
  void clearAbsentOnNull() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class JsonAggConstructor extends $pb.GeneratedMessage {
  factory JsonAggConstructor({
    JsonOutput? output,
    Node? aggFilter,
    $core.Iterable<Node>? aggOrder,
    WindowDef? over,
    $core.int? location,
  }) {
    final $result = create();
    if (output != null) {
      $result.output = output;
    }
    if (aggFilter != null) {
      $result.aggFilter = aggFilter;
    }
    if (aggOrder != null) {
      $result.aggOrder.addAll(aggOrder);
    }
    if (over != null) {
      $result.over = over;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  JsonAggConstructor._() : super();
  factory JsonAggConstructor.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonAggConstructor.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonAggConstructor', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<JsonOutput>(1, _omitFieldNames ? '' : 'output', subBuilder: JsonOutput.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'agg_filter', subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'agg_order', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<WindowDef>(4, _omitFieldNames ? '' : 'over', subBuilder: WindowDef.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonAggConstructor clone() => JsonAggConstructor()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonAggConstructor copyWith(void Function(JsonAggConstructor) updates) => super.copyWith((message) => updates(message as JsonAggConstructor)) as JsonAggConstructor;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonAggConstructor create() => JsonAggConstructor._();
  JsonAggConstructor createEmptyInstance() => create();
  static $pb.PbList<JsonAggConstructor> createRepeated() => $pb.PbList<JsonAggConstructor>();
  @$core.pragma('dart2js:noInline')
  static JsonAggConstructor getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonAggConstructor>(create);
  static JsonAggConstructor? _defaultInstance;

  @$pb.TagNumber(1)
  JsonOutput get output => $_getN(0);
  @$pb.TagNumber(1)
  set output(JsonOutput v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasOutput() => $_has(0);
  @$pb.TagNumber(1)
  void clearOutput() => clearField(1);
  @$pb.TagNumber(1)
  JsonOutput ensureOutput() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get aggFilter => $_getN(1);
  @$pb.TagNumber(2)
  set aggFilter(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasAggFilter() => $_has(1);
  @$pb.TagNumber(2)
  void clearAggFilter() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureAggFilter() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get aggOrder => $_getList(2);

  @$pb.TagNumber(4)
  WindowDef get over => $_getN(3);
  @$pb.TagNumber(4)
  set over(WindowDef v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasOver() => $_has(3);
  @$pb.TagNumber(4)
  void clearOver() => clearField(4);
  @$pb.TagNumber(4)
  WindowDef ensureOver() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class JsonObjectAgg extends $pb.GeneratedMessage {
  factory JsonObjectAgg({
    JsonAggConstructor? constructor,
    JsonKeyValue? arg,
    $core.bool? absentOnNull,
    $core.bool? unique,
  }) {
    final $result = create();
    if (constructor != null) {
      $result.constructor = constructor;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (absentOnNull != null) {
      $result.absentOnNull = absentOnNull;
    }
    if (unique != null) {
      $result.unique = unique;
    }
    return $result;
  }
  JsonObjectAgg._() : super();
  factory JsonObjectAgg.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonObjectAgg.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonObjectAgg', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<JsonAggConstructor>(1, _omitFieldNames ? '' : 'constructor', subBuilder: JsonAggConstructor.create)
    ..aOM<JsonKeyValue>(2, _omitFieldNames ? '' : 'arg', subBuilder: JsonKeyValue.create)
    ..aOB(3, _omitFieldNames ? '' : 'absent_on_null')
    ..aOB(4, _omitFieldNames ? '' : 'unique')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonObjectAgg clone() => JsonObjectAgg()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonObjectAgg copyWith(void Function(JsonObjectAgg) updates) => super.copyWith((message) => updates(message as JsonObjectAgg)) as JsonObjectAgg;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonObjectAgg create() => JsonObjectAgg._();
  JsonObjectAgg createEmptyInstance() => create();
  static $pb.PbList<JsonObjectAgg> createRepeated() => $pb.PbList<JsonObjectAgg>();
  @$core.pragma('dart2js:noInline')
  static JsonObjectAgg getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonObjectAgg>(create);
  static JsonObjectAgg? _defaultInstance;

  @$pb.TagNumber(1)
  JsonAggConstructor get constructor => $_getN(0);
  @$pb.TagNumber(1)
  set constructor(JsonAggConstructor v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasConstructor() => $_has(0);
  @$pb.TagNumber(1)
  void clearConstructor() => clearField(1);
  @$pb.TagNumber(1)
  JsonAggConstructor ensureConstructor() => $_ensure(0);

  @$pb.TagNumber(2)
  JsonKeyValue get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(JsonKeyValue v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  JsonKeyValue ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.bool get absentOnNull => $_getBF(2);
  @$pb.TagNumber(3)
  set absentOnNull($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAbsentOnNull() => $_has(2);
  @$pb.TagNumber(3)
  void clearAbsentOnNull() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get unique => $_getBF(3);
  @$pb.TagNumber(4)
  set unique($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasUnique() => $_has(3);
  @$pb.TagNumber(4)
  void clearUnique() => clearField(4);
}

class JsonArrayAgg extends $pb.GeneratedMessage {
  factory JsonArrayAgg({
    JsonAggConstructor? constructor,
    JsonValueExpr? arg,
    $core.bool? absentOnNull,
  }) {
    final $result = create();
    if (constructor != null) {
      $result.constructor = constructor;
    }
    if (arg != null) {
      $result.arg = arg;
    }
    if (absentOnNull != null) {
      $result.absentOnNull = absentOnNull;
    }
    return $result;
  }
  JsonArrayAgg._() : super();
  factory JsonArrayAgg.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory JsonArrayAgg.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'JsonArrayAgg', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<JsonAggConstructor>(1, _omitFieldNames ? '' : 'constructor', subBuilder: JsonAggConstructor.create)
    ..aOM<JsonValueExpr>(2, _omitFieldNames ? '' : 'arg', subBuilder: JsonValueExpr.create)
    ..aOB(3, _omitFieldNames ? '' : 'absent_on_null')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  JsonArrayAgg clone() => JsonArrayAgg()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  JsonArrayAgg copyWith(void Function(JsonArrayAgg) updates) => super.copyWith((message) => updates(message as JsonArrayAgg)) as JsonArrayAgg;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static JsonArrayAgg create() => JsonArrayAgg._();
  JsonArrayAgg createEmptyInstance() => create();
  static $pb.PbList<JsonArrayAgg> createRepeated() => $pb.PbList<JsonArrayAgg>();
  @$core.pragma('dart2js:noInline')
  static JsonArrayAgg getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<JsonArrayAgg>(create);
  static JsonArrayAgg? _defaultInstance;

  @$pb.TagNumber(1)
  JsonAggConstructor get constructor => $_getN(0);
  @$pb.TagNumber(1)
  set constructor(JsonAggConstructor v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasConstructor() => $_has(0);
  @$pb.TagNumber(1)
  void clearConstructor() => clearField(1);
  @$pb.TagNumber(1)
  JsonAggConstructor ensureConstructor() => $_ensure(0);

  @$pb.TagNumber(2)
  JsonValueExpr get arg => $_getN(1);
  @$pb.TagNumber(2)
  set arg(JsonValueExpr v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArg() => $_has(1);
  @$pb.TagNumber(2)
  void clearArg() => clearField(2);
  @$pb.TagNumber(2)
  JsonValueExpr ensureArg() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.bool get absentOnNull => $_getBF(2);
  @$pb.TagNumber(3)
  set absentOnNull($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAbsentOnNull() => $_has(2);
  @$pb.TagNumber(3)
  void clearAbsentOnNull() => clearField(3);
}

class RawStmt extends $pb.GeneratedMessage {
  factory RawStmt({
    Node? stmt,
    $core.int? stmtLocation,
    $core.int? stmtLen,
  }) {
    final $result = create();
    if (stmt != null) {
      $result.stmt = stmt;
    }
    if (stmtLocation != null) {
      $result.stmtLocation = stmtLocation;
    }
    if (stmtLen != null) {
      $result.stmtLen = stmtLen;
    }
    return $result;
  }
  RawStmt._() : super();
  factory RawStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RawStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RawStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'stmt', subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'stmt_location', $pb.PbFieldType.O3)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'stmt_len', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RawStmt clone() => RawStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RawStmt copyWith(void Function(RawStmt) updates) => super.copyWith((message) => updates(message as RawStmt)) as RawStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RawStmt create() => RawStmt._();
  RawStmt createEmptyInstance() => create();
  static $pb.PbList<RawStmt> createRepeated() => $pb.PbList<RawStmt>();
  @$core.pragma('dart2js:noInline')
  static RawStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RawStmt>(create);
  static RawStmt? _defaultInstance;

  @$pb.TagNumber(1)
  Node get stmt => $_getN(0);
  @$pb.TagNumber(1)
  set stmt(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasStmt() => $_has(0);
  @$pb.TagNumber(1)
  void clearStmt() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureStmt() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get stmtLocation => $_getIZ(1);
  @$pb.TagNumber(2)
  set stmtLocation($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasStmtLocation() => $_has(1);
  @$pb.TagNumber(2)
  void clearStmtLocation() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get stmtLen => $_getIZ(2);
  @$pb.TagNumber(3)
  set stmtLen($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasStmtLen() => $_has(2);
  @$pb.TagNumber(3)
  void clearStmtLen() => clearField(3);
}

class InsertStmt extends $pb.GeneratedMessage {
  factory InsertStmt({
    RangeVar? relation,
    $core.Iterable<Node>? cols,
    Node? selectStmt,
    OnConflictClause? onConflictClause,
    $core.Iterable<Node>? returningList,
    WithClause? withClause,
    OverridingKind? override,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (cols != null) {
      $result.cols.addAll(cols);
    }
    if (selectStmt != null) {
      $result.selectStmt = selectStmt;
    }
    if (onConflictClause != null) {
      $result.onConflictClause = onConflictClause;
    }
    if (returningList != null) {
      $result.returningList.addAll(returningList);
    }
    if (withClause != null) {
      $result.withClause = withClause;
    }
    if (override != null) {
      $result.override = override;
    }
    return $result;
  }
  InsertStmt._() : super();
  factory InsertStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory InsertStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'InsertStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'cols', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'selectStmt', subBuilder: Node.create)
    ..aOM<OnConflictClause>(4, _omitFieldNames ? '' : 'onConflictClause', subBuilder: OnConflictClause.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'returningList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<WithClause>(6, _omitFieldNames ? '' : 'withClause', subBuilder: WithClause.create)
    ..e<OverridingKind>(7, _omitFieldNames ? '' : 'override', $pb.PbFieldType.OE, defaultOrMaker: OverridingKind.OVERRIDING_KIND_UNDEFINED, valueOf: OverridingKind.valueOf, enumValues: OverridingKind.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  InsertStmt clone() => InsertStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  InsertStmt copyWith(void Function(InsertStmt) updates) => super.copyWith((message) => updates(message as InsertStmt)) as InsertStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static InsertStmt create() => InsertStmt._();
  InsertStmt createEmptyInstance() => create();
  static $pb.PbList<InsertStmt> createRepeated() => $pb.PbList<InsertStmt>();
  @$core.pragma('dart2js:noInline')
  static InsertStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<InsertStmt>(create);
  static InsertStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get cols => $_getList(1);

  @$pb.TagNumber(3)
  Node get selectStmt => $_getN(2);
  @$pb.TagNumber(3)
  set selectStmt(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasSelectStmt() => $_has(2);
  @$pb.TagNumber(3)
  void clearSelectStmt() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureSelectStmt() => $_ensure(2);

  @$pb.TagNumber(4)
  OnConflictClause get onConflictClause => $_getN(3);
  @$pb.TagNumber(4)
  set onConflictClause(OnConflictClause v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasOnConflictClause() => $_has(3);
  @$pb.TagNumber(4)
  void clearOnConflictClause() => clearField(4);
  @$pb.TagNumber(4)
  OnConflictClause ensureOnConflictClause() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get returningList => $_getList(4);

  @$pb.TagNumber(6)
  WithClause get withClause => $_getN(5);
  @$pb.TagNumber(6)
  set withClause(WithClause v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasWithClause() => $_has(5);
  @$pb.TagNumber(6)
  void clearWithClause() => clearField(6);
  @$pb.TagNumber(6)
  WithClause ensureWithClause() => $_ensure(5);

  @$pb.TagNumber(7)
  OverridingKind get override => $_getN(6);
  @$pb.TagNumber(7)
  set override(OverridingKind v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasOverride() => $_has(6);
  @$pb.TagNumber(7)
  void clearOverride() => clearField(7);
}

class DeleteStmt extends $pb.GeneratedMessage {
  factory DeleteStmt({
    RangeVar? relation,
    $core.Iterable<Node>? usingClause,
    Node? whereClause,
    $core.Iterable<Node>? returningList,
    WithClause? withClause,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (usingClause != null) {
      $result.usingClause.addAll(usingClause);
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (returningList != null) {
      $result.returningList.addAll(returningList);
    }
    if (withClause != null) {
      $result.withClause = withClause;
    }
    return $result;
  }
  DeleteStmt._() : super();
  factory DeleteStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DeleteStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DeleteStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'usingClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'returningList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<WithClause>(5, _omitFieldNames ? '' : 'withClause', subBuilder: WithClause.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DeleteStmt clone() => DeleteStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DeleteStmt copyWith(void Function(DeleteStmt) updates) => super.copyWith((message) => updates(message as DeleteStmt)) as DeleteStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DeleteStmt create() => DeleteStmt._();
  DeleteStmt createEmptyInstance() => create();
  static $pb.PbList<DeleteStmt> createRepeated() => $pb.PbList<DeleteStmt>();
  @$core.pragma('dart2js:noInline')
  static DeleteStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DeleteStmt>(create);
  static DeleteStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get usingClause => $_getList(1);

  @$pb.TagNumber(3)
  Node get whereClause => $_getN(2);
  @$pb.TagNumber(3)
  set whereClause(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasWhereClause() => $_has(2);
  @$pb.TagNumber(3)
  void clearWhereClause() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureWhereClause() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.List<Node> get returningList => $_getList(3);

  @$pb.TagNumber(5)
  WithClause get withClause => $_getN(4);
  @$pb.TagNumber(5)
  set withClause(WithClause v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasWithClause() => $_has(4);
  @$pb.TagNumber(5)
  void clearWithClause() => clearField(5);
  @$pb.TagNumber(5)
  WithClause ensureWithClause() => $_ensure(4);
}

class UpdateStmt extends $pb.GeneratedMessage {
  factory UpdateStmt({
    RangeVar? relation,
    $core.Iterable<Node>? targetList,
    Node? whereClause,
    $core.Iterable<Node>? fromClause,
    $core.Iterable<Node>? returningList,
    WithClause? withClause,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (targetList != null) {
      $result.targetList.addAll(targetList);
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (fromClause != null) {
      $result.fromClause.addAll(fromClause);
    }
    if (returningList != null) {
      $result.returningList.addAll(returningList);
    }
    if (withClause != null) {
      $result.withClause = withClause;
    }
    return $result;
  }
  UpdateStmt._() : super();
  factory UpdateStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory UpdateStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'UpdateStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'targetList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'fromClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'returningList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<WithClause>(6, _omitFieldNames ? '' : 'withClause', subBuilder: WithClause.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  UpdateStmt clone() => UpdateStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  UpdateStmt copyWith(void Function(UpdateStmt) updates) => super.copyWith((message) => updates(message as UpdateStmt)) as UpdateStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static UpdateStmt create() => UpdateStmt._();
  UpdateStmt createEmptyInstance() => create();
  static $pb.PbList<UpdateStmt> createRepeated() => $pb.PbList<UpdateStmt>();
  @$core.pragma('dart2js:noInline')
  static UpdateStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<UpdateStmt>(create);
  static UpdateStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get targetList => $_getList(1);

  @$pb.TagNumber(3)
  Node get whereClause => $_getN(2);
  @$pb.TagNumber(3)
  set whereClause(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasWhereClause() => $_has(2);
  @$pb.TagNumber(3)
  void clearWhereClause() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureWhereClause() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.List<Node> get fromClause => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get returningList => $_getList(4);

  @$pb.TagNumber(6)
  WithClause get withClause => $_getN(5);
  @$pb.TagNumber(6)
  set withClause(WithClause v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasWithClause() => $_has(5);
  @$pb.TagNumber(6)
  void clearWithClause() => clearField(6);
  @$pb.TagNumber(6)
  WithClause ensureWithClause() => $_ensure(5);
}

class MergeStmt extends $pb.GeneratedMessage {
  factory MergeStmt({
    RangeVar? relation,
    Node? sourceRelation,
    Node? joinCondition,
    $core.Iterable<Node>? mergeWhenClauses,
    WithClause? withClause,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (sourceRelation != null) {
      $result.sourceRelation = sourceRelation;
    }
    if (joinCondition != null) {
      $result.joinCondition = joinCondition;
    }
    if (mergeWhenClauses != null) {
      $result.mergeWhenClauses.addAll(mergeWhenClauses);
    }
    if (withClause != null) {
      $result.withClause = withClause;
    }
    return $result;
  }
  MergeStmt._() : super();
  factory MergeStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory MergeStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'MergeStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'sourceRelation', subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'joinCondition', subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'mergeWhenClauses', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<WithClause>(5, _omitFieldNames ? '' : 'withClause', subBuilder: WithClause.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  MergeStmt clone() => MergeStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  MergeStmt copyWith(void Function(MergeStmt) updates) => super.copyWith((message) => updates(message as MergeStmt)) as MergeStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static MergeStmt create() => MergeStmt._();
  MergeStmt createEmptyInstance() => create();
  static $pb.PbList<MergeStmt> createRepeated() => $pb.PbList<MergeStmt>();
  @$core.pragma('dart2js:noInline')
  static MergeStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<MergeStmt>(create);
  static MergeStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get sourceRelation => $_getN(1);
  @$pb.TagNumber(2)
  set sourceRelation(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasSourceRelation() => $_has(1);
  @$pb.TagNumber(2)
  void clearSourceRelation() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureSourceRelation() => $_ensure(1);

  @$pb.TagNumber(3)
  Node get joinCondition => $_getN(2);
  @$pb.TagNumber(3)
  set joinCondition(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasJoinCondition() => $_has(2);
  @$pb.TagNumber(3)
  void clearJoinCondition() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureJoinCondition() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.List<Node> get mergeWhenClauses => $_getList(3);

  @$pb.TagNumber(5)
  WithClause get withClause => $_getN(4);
  @$pb.TagNumber(5)
  set withClause(WithClause v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasWithClause() => $_has(4);
  @$pb.TagNumber(5)
  void clearWithClause() => clearField(5);
  @$pb.TagNumber(5)
  WithClause ensureWithClause() => $_ensure(4);
}

class SelectStmt extends $pb.GeneratedMessage {
  factory SelectStmt({
    $core.Iterable<Node>? distinctClause,
    IntoClause? intoClause,
    $core.Iterable<Node>? targetList,
    $core.Iterable<Node>? fromClause,
    Node? whereClause,
    $core.Iterable<Node>? groupClause,
    $core.bool? groupDistinct,
    Node? havingClause,
    $core.Iterable<Node>? windowClause,
    $core.Iterable<Node>? valuesLists,
    $core.Iterable<Node>? sortClause,
    Node? limitOffset,
    Node? limitCount,
    LimitOption? limitOption,
    $core.Iterable<Node>? lockingClause,
    WithClause? withClause,
    SetOperation? op,
    $core.bool? all,
    SelectStmt? larg,
    SelectStmt? rarg,
  }) {
    final $result = create();
    if (distinctClause != null) {
      $result.distinctClause.addAll(distinctClause);
    }
    if (intoClause != null) {
      $result.intoClause = intoClause;
    }
    if (targetList != null) {
      $result.targetList.addAll(targetList);
    }
    if (fromClause != null) {
      $result.fromClause.addAll(fromClause);
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (groupClause != null) {
      $result.groupClause.addAll(groupClause);
    }
    if (groupDistinct != null) {
      $result.groupDistinct = groupDistinct;
    }
    if (havingClause != null) {
      $result.havingClause = havingClause;
    }
    if (windowClause != null) {
      $result.windowClause.addAll(windowClause);
    }
    if (valuesLists != null) {
      $result.valuesLists.addAll(valuesLists);
    }
    if (sortClause != null) {
      $result.sortClause.addAll(sortClause);
    }
    if (limitOffset != null) {
      $result.limitOffset = limitOffset;
    }
    if (limitCount != null) {
      $result.limitCount = limitCount;
    }
    if (limitOption != null) {
      $result.limitOption = limitOption;
    }
    if (lockingClause != null) {
      $result.lockingClause.addAll(lockingClause);
    }
    if (withClause != null) {
      $result.withClause = withClause;
    }
    if (op != null) {
      $result.op = op;
    }
    if (all != null) {
      $result.all = all;
    }
    if (larg != null) {
      $result.larg = larg;
    }
    if (rarg != null) {
      $result.rarg = rarg;
    }
    return $result;
  }
  SelectStmt._() : super();
  factory SelectStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SelectStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SelectStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'distinctClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<IntoClause>(2, _omitFieldNames ? '' : 'intoClause', subBuilder: IntoClause.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'targetList', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'fromClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(5, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'groupClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(7, _omitFieldNames ? '' : 'groupDistinct')
    ..aOM<Node>(8, _omitFieldNames ? '' : 'havingClause', subBuilder: Node.create)
    ..pc<Node>(9, _omitFieldNames ? '' : 'windowClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(10, _omitFieldNames ? '' : 'valuesLists', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(11, _omitFieldNames ? '' : 'sortClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(12, _omitFieldNames ? '' : 'limitOffset', subBuilder: Node.create)
    ..aOM<Node>(13, _omitFieldNames ? '' : 'limitCount', subBuilder: Node.create)
    ..e<LimitOption>(14, _omitFieldNames ? '' : 'limitOption', $pb.PbFieldType.OE, defaultOrMaker: LimitOption.LIMIT_OPTION_UNDEFINED, valueOf: LimitOption.valueOf, enumValues: LimitOption.values)
    ..pc<Node>(15, _omitFieldNames ? '' : 'lockingClause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<WithClause>(16, _omitFieldNames ? '' : 'withClause', subBuilder: WithClause.create)
    ..e<SetOperation>(17, _omitFieldNames ? '' : 'op', $pb.PbFieldType.OE, defaultOrMaker: SetOperation.SET_OPERATION_UNDEFINED, valueOf: SetOperation.valueOf, enumValues: SetOperation.values)
    ..aOB(18, _omitFieldNames ? '' : 'all')
    ..aOM<SelectStmt>(19, _omitFieldNames ? '' : 'larg', subBuilder: SelectStmt.create)
    ..aOM<SelectStmt>(20, _omitFieldNames ? '' : 'rarg', subBuilder: SelectStmt.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SelectStmt clone() => SelectStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SelectStmt copyWith(void Function(SelectStmt) updates) => super.copyWith((message) => updates(message as SelectStmt)) as SelectStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SelectStmt create() => SelectStmt._();
  SelectStmt createEmptyInstance() => create();
  static $pb.PbList<SelectStmt> createRepeated() => $pb.PbList<SelectStmt>();
  @$core.pragma('dart2js:noInline')
  static SelectStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SelectStmt>(create);
  static SelectStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get distinctClause => $_getList(0);

  @$pb.TagNumber(2)
  IntoClause get intoClause => $_getN(1);
  @$pb.TagNumber(2)
  set intoClause(IntoClause v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasIntoClause() => $_has(1);
  @$pb.TagNumber(2)
  void clearIntoClause() => clearField(2);
  @$pb.TagNumber(2)
  IntoClause ensureIntoClause() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get targetList => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get fromClause => $_getList(3);

  @$pb.TagNumber(5)
  Node get whereClause => $_getN(4);
  @$pb.TagNumber(5)
  set whereClause(Node v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasWhereClause() => $_has(4);
  @$pb.TagNumber(5)
  void clearWhereClause() => clearField(5);
  @$pb.TagNumber(5)
  Node ensureWhereClause() => $_ensure(4);

  @$pb.TagNumber(6)
  $core.List<Node> get groupClause => $_getList(5);

  @$pb.TagNumber(7)
  $core.bool get groupDistinct => $_getBF(6);
  @$pb.TagNumber(7)
  set groupDistinct($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasGroupDistinct() => $_has(6);
  @$pb.TagNumber(7)
  void clearGroupDistinct() => clearField(7);

  @$pb.TagNumber(8)
  Node get havingClause => $_getN(7);
  @$pb.TagNumber(8)
  set havingClause(Node v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasHavingClause() => $_has(7);
  @$pb.TagNumber(8)
  void clearHavingClause() => clearField(8);
  @$pb.TagNumber(8)
  Node ensureHavingClause() => $_ensure(7);

  @$pb.TagNumber(9)
  $core.List<Node> get windowClause => $_getList(8);

  @$pb.TagNumber(10)
  $core.List<Node> get valuesLists => $_getList(9);

  @$pb.TagNumber(11)
  $core.List<Node> get sortClause => $_getList(10);

  @$pb.TagNumber(12)
  Node get limitOffset => $_getN(11);
  @$pb.TagNumber(12)
  set limitOffset(Node v) { setField(12, v); }
  @$pb.TagNumber(12)
  $core.bool hasLimitOffset() => $_has(11);
  @$pb.TagNumber(12)
  void clearLimitOffset() => clearField(12);
  @$pb.TagNumber(12)
  Node ensureLimitOffset() => $_ensure(11);

  @$pb.TagNumber(13)
  Node get limitCount => $_getN(12);
  @$pb.TagNumber(13)
  set limitCount(Node v) { setField(13, v); }
  @$pb.TagNumber(13)
  $core.bool hasLimitCount() => $_has(12);
  @$pb.TagNumber(13)
  void clearLimitCount() => clearField(13);
  @$pb.TagNumber(13)
  Node ensureLimitCount() => $_ensure(12);

  @$pb.TagNumber(14)
  LimitOption get limitOption => $_getN(13);
  @$pb.TagNumber(14)
  set limitOption(LimitOption v) { setField(14, v); }
  @$pb.TagNumber(14)
  $core.bool hasLimitOption() => $_has(13);
  @$pb.TagNumber(14)
  void clearLimitOption() => clearField(14);

  @$pb.TagNumber(15)
  $core.List<Node> get lockingClause => $_getList(14);

  @$pb.TagNumber(16)
  WithClause get withClause => $_getN(15);
  @$pb.TagNumber(16)
  set withClause(WithClause v) { setField(16, v); }
  @$pb.TagNumber(16)
  $core.bool hasWithClause() => $_has(15);
  @$pb.TagNumber(16)
  void clearWithClause() => clearField(16);
  @$pb.TagNumber(16)
  WithClause ensureWithClause() => $_ensure(15);

  @$pb.TagNumber(17)
  SetOperation get op => $_getN(16);
  @$pb.TagNumber(17)
  set op(SetOperation v) { setField(17, v); }
  @$pb.TagNumber(17)
  $core.bool hasOp() => $_has(16);
  @$pb.TagNumber(17)
  void clearOp() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get all => $_getBF(17);
  @$pb.TagNumber(18)
  set all($core.bool v) { $_setBool(17, v); }
  @$pb.TagNumber(18)
  $core.bool hasAll() => $_has(17);
  @$pb.TagNumber(18)
  void clearAll() => clearField(18);

  @$pb.TagNumber(19)
  SelectStmt get larg => $_getN(18);
  @$pb.TagNumber(19)
  set larg(SelectStmt v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasLarg() => $_has(18);
  @$pb.TagNumber(19)
  void clearLarg() => clearField(19);
  @$pb.TagNumber(19)
  SelectStmt ensureLarg() => $_ensure(18);

  @$pb.TagNumber(20)
  SelectStmt get rarg => $_getN(19);
  @$pb.TagNumber(20)
  set rarg(SelectStmt v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasRarg() => $_has(19);
  @$pb.TagNumber(20)
  void clearRarg() => clearField(20);
  @$pb.TagNumber(20)
  SelectStmt ensureRarg() => $_ensure(19);
}

class SetOperationStmt extends $pb.GeneratedMessage {
  factory SetOperationStmt({
    SetOperation? op,
    $core.bool? all,
    Node? larg,
    Node? rarg,
    $core.Iterable<Node>? colTypes,
    $core.Iterable<Node>? colTypmods,
    $core.Iterable<Node>? colCollations,
    $core.Iterable<Node>? groupClauses,
  }) {
    final $result = create();
    if (op != null) {
      $result.op = op;
    }
    if (all != null) {
      $result.all = all;
    }
    if (larg != null) {
      $result.larg = larg;
    }
    if (rarg != null) {
      $result.rarg = rarg;
    }
    if (colTypes != null) {
      $result.colTypes.addAll(colTypes);
    }
    if (colTypmods != null) {
      $result.colTypmods.addAll(colTypmods);
    }
    if (colCollations != null) {
      $result.colCollations.addAll(colCollations);
    }
    if (groupClauses != null) {
      $result.groupClauses.addAll(groupClauses);
    }
    return $result;
  }
  SetOperationStmt._() : super();
  factory SetOperationStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SetOperationStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SetOperationStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<SetOperation>(1, _omitFieldNames ? '' : 'op', $pb.PbFieldType.OE, defaultOrMaker: SetOperation.SET_OPERATION_UNDEFINED, valueOf: SetOperation.valueOf, enumValues: SetOperation.values)
    ..aOB(2, _omitFieldNames ? '' : 'all')
    ..aOM<Node>(3, _omitFieldNames ? '' : 'larg', subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'rarg', subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'colTypes', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'colTypmods', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(7, _omitFieldNames ? '' : 'colCollations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(8, _omitFieldNames ? '' : 'groupClauses', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SetOperationStmt clone() => SetOperationStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SetOperationStmt copyWith(void Function(SetOperationStmt) updates) => super.copyWith((message) => updates(message as SetOperationStmt)) as SetOperationStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SetOperationStmt create() => SetOperationStmt._();
  SetOperationStmt createEmptyInstance() => create();
  static $pb.PbList<SetOperationStmt> createRepeated() => $pb.PbList<SetOperationStmt>();
  @$core.pragma('dart2js:noInline')
  static SetOperationStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SetOperationStmt>(create);
  static SetOperationStmt? _defaultInstance;

  @$pb.TagNumber(1)
  SetOperation get op => $_getN(0);
  @$pb.TagNumber(1)
  set op(SetOperation v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasOp() => $_has(0);
  @$pb.TagNumber(1)
  void clearOp() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get all => $_getBF(1);
  @$pb.TagNumber(2)
  set all($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasAll() => $_has(1);
  @$pb.TagNumber(2)
  void clearAll() => clearField(2);

  @$pb.TagNumber(3)
  Node get larg => $_getN(2);
  @$pb.TagNumber(3)
  set larg(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasLarg() => $_has(2);
  @$pb.TagNumber(3)
  void clearLarg() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureLarg() => $_ensure(2);

  @$pb.TagNumber(4)
  Node get rarg => $_getN(3);
  @$pb.TagNumber(4)
  set rarg(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasRarg() => $_has(3);
  @$pb.TagNumber(4)
  void clearRarg() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureRarg() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get colTypes => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get colTypmods => $_getList(5);

  @$pb.TagNumber(7)
  $core.List<Node> get colCollations => $_getList(6);

  @$pb.TagNumber(8)
  $core.List<Node> get groupClauses => $_getList(7);
}

class ReturnStmt extends $pb.GeneratedMessage {
  factory ReturnStmt({
    Node? returnval,
  }) {
    final $result = create();
    if (returnval != null) {
      $result.returnval = returnval;
    }
    return $result;
  }
  ReturnStmt._() : super();
  factory ReturnStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ReturnStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ReturnStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'returnval', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ReturnStmt clone() => ReturnStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ReturnStmt copyWith(void Function(ReturnStmt) updates) => super.copyWith((message) => updates(message as ReturnStmt)) as ReturnStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ReturnStmt create() => ReturnStmt._();
  ReturnStmt createEmptyInstance() => create();
  static $pb.PbList<ReturnStmt> createRepeated() => $pb.PbList<ReturnStmt>();
  @$core.pragma('dart2js:noInline')
  static ReturnStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ReturnStmt>(create);
  static ReturnStmt? _defaultInstance;

  @$pb.TagNumber(1)
  Node get returnval => $_getN(0);
  @$pb.TagNumber(1)
  set returnval(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasReturnval() => $_has(0);
  @$pb.TagNumber(1)
  void clearReturnval() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureReturnval() => $_ensure(0);
}

class PLAssignStmt extends $pb.GeneratedMessage {
  factory PLAssignStmt({
    $core.String? name,
    $core.Iterable<Node>? indirection,
    $core.int? nnames,
    SelectStmt? val,
    $core.int? location,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (indirection != null) {
      $result.indirection.addAll(indirection);
    }
    if (nnames != null) {
      $result.nnames = nnames;
    }
    if (val != null) {
      $result.val = val;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  PLAssignStmt._() : super();
  factory PLAssignStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PLAssignStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PLAssignStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..pc<Node>(2, _omitFieldNames ? '' : 'indirection', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'nnames', $pb.PbFieldType.O3)
    ..aOM<SelectStmt>(4, _omitFieldNames ? '' : 'val', subBuilder: SelectStmt.create)
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PLAssignStmt clone() => PLAssignStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PLAssignStmt copyWith(void Function(PLAssignStmt) updates) => super.copyWith((message) => updates(message as PLAssignStmt)) as PLAssignStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PLAssignStmt create() => PLAssignStmt._();
  PLAssignStmt createEmptyInstance() => create();
  static $pb.PbList<PLAssignStmt> createRepeated() => $pb.PbList<PLAssignStmt>();
  @$core.pragma('dart2js:noInline')
  static PLAssignStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PLAssignStmt>(create);
  static PLAssignStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get indirection => $_getList(1);

  @$pb.TagNumber(3)
  $core.int get nnames => $_getIZ(2);
  @$pb.TagNumber(3)
  set nnames($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasNnames() => $_has(2);
  @$pb.TagNumber(3)
  void clearNnames() => clearField(3);

  @$pb.TagNumber(4)
  SelectStmt get val => $_getN(3);
  @$pb.TagNumber(4)
  set val(SelectStmt v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasVal() => $_has(3);
  @$pb.TagNumber(4)
  void clearVal() => clearField(4);
  @$pb.TagNumber(4)
  SelectStmt ensureVal() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);
}

class CreateSchemaStmt extends $pb.GeneratedMessage {
  factory CreateSchemaStmt({
    $core.String? schemaname,
    RoleSpec? authrole,
    $core.Iterable<Node>? schemaElts,
    $core.bool? ifNotExists,
  }) {
    final $result = create();
    if (schemaname != null) {
      $result.schemaname = schemaname;
    }
    if (authrole != null) {
      $result.authrole = authrole;
    }
    if (schemaElts != null) {
      $result.schemaElts.addAll(schemaElts);
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    return $result;
  }
  CreateSchemaStmt._() : super();
  factory CreateSchemaStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateSchemaStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateSchemaStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'schemaname')
    ..aOM<RoleSpec>(2, _omitFieldNames ? '' : 'authrole', subBuilder: RoleSpec.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'schemaElts', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(4, _omitFieldNames ? '' : 'if_not_exists')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateSchemaStmt clone() => CreateSchemaStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateSchemaStmt copyWith(void Function(CreateSchemaStmt) updates) => super.copyWith((message) => updates(message as CreateSchemaStmt)) as CreateSchemaStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateSchemaStmt create() => CreateSchemaStmt._();
  CreateSchemaStmt createEmptyInstance() => create();
  static $pb.PbList<CreateSchemaStmt> createRepeated() => $pb.PbList<CreateSchemaStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateSchemaStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateSchemaStmt>(create);
  static CreateSchemaStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get schemaname => $_getSZ(0);
  @$pb.TagNumber(1)
  set schemaname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasSchemaname() => $_has(0);
  @$pb.TagNumber(1)
  void clearSchemaname() => clearField(1);

  @$pb.TagNumber(2)
  RoleSpec get authrole => $_getN(1);
  @$pb.TagNumber(2)
  set authrole(RoleSpec v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasAuthrole() => $_has(1);
  @$pb.TagNumber(2)
  void clearAuthrole() => clearField(2);
  @$pb.TagNumber(2)
  RoleSpec ensureAuthrole() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get schemaElts => $_getList(2);

  @$pb.TagNumber(4)
  $core.bool get ifNotExists => $_getBF(3);
  @$pb.TagNumber(4)
  set ifNotExists($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasIfNotExists() => $_has(3);
  @$pb.TagNumber(4)
  void clearIfNotExists() => clearField(4);
}

class AlterTableStmt extends $pb.GeneratedMessage {
  factory AlterTableStmt({
    RangeVar? relation,
    $core.Iterable<Node>? cmds,
    ObjectType? objtype,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (cmds != null) {
      $result.cmds.addAll(cmds);
    }
    if (objtype != null) {
      $result.objtype = objtype;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  AlterTableStmt._() : super();
  factory AlterTableStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterTableStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterTableStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'cmds', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<ObjectType>(3, _omitFieldNames ? '' : 'objtype', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOB(4, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterTableStmt clone() => AlterTableStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterTableStmt copyWith(void Function(AlterTableStmt) updates) => super.copyWith((message) => updates(message as AlterTableStmt)) as AlterTableStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterTableStmt create() => AlterTableStmt._();
  AlterTableStmt createEmptyInstance() => create();
  static $pb.PbList<AlterTableStmt> createRepeated() => $pb.PbList<AlterTableStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterTableStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterTableStmt>(create);
  static AlterTableStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get cmds => $_getList(1);

  @$pb.TagNumber(3)
  ObjectType get objtype => $_getN(2);
  @$pb.TagNumber(3)
  set objtype(ObjectType v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasObjtype() => $_has(2);
  @$pb.TagNumber(3)
  void clearObjtype() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get missingOk => $_getBF(3);
  @$pb.TagNumber(4)
  set missingOk($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasMissingOk() => $_has(3);
  @$pb.TagNumber(4)
  void clearMissingOk() => clearField(4);
}

class ReplicaIdentityStmt extends $pb.GeneratedMessage {
  factory ReplicaIdentityStmt({
    $core.String? identityType,
    $core.String? name,
  }) {
    final $result = create();
    if (identityType != null) {
      $result.identityType = identityType;
    }
    if (name != null) {
      $result.name = name;
    }
    return $result;
  }
  ReplicaIdentityStmt._() : super();
  factory ReplicaIdentityStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ReplicaIdentityStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ReplicaIdentityStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'identity_type')
    ..aOS(2, _omitFieldNames ? '' : 'name')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ReplicaIdentityStmt clone() => ReplicaIdentityStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ReplicaIdentityStmt copyWith(void Function(ReplicaIdentityStmt) updates) => super.copyWith((message) => updates(message as ReplicaIdentityStmt)) as ReplicaIdentityStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ReplicaIdentityStmt create() => ReplicaIdentityStmt._();
  ReplicaIdentityStmt createEmptyInstance() => create();
  static $pb.PbList<ReplicaIdentityStmt> createRepeated() => $pb.PbList<ReplicaIdentityStmt>();
  @$core.pragma('dart2js:noInline')
  static ReplicaIdentityStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ReplicaIdentityStmt>(create);
  static ReplicaIdentityStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get identityType => $_getSZ(0);
  @$pb.TagNumber(1)
  set identityType($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasIdentityType() => $_has(0);
  @$pb.TagNumber(1)
  void clearIdentityType() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get name => $_getSZ(1);
  @$pb.TagNumber(2)
  set name($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasName() => $_has(1);
  @$pb.TagNumber(2)
  void clearName() => clearField(2);
}

class AlterTableCmd extends $pb.GeneratedMessage {
  factory AlterTableCmd({
    AlterTableType? subtype,
    $core.String? name,
    $core.int? num,
    RoleSpec? newowner,
    Node? def,
    DropBehavior? behavior,
    $core.bool? missingOk,
    $core.bool? recurse,
  }) {
    final $result = create();
    if (subtype != null) {
      $result.subtype = subtype;
    }
    if (name != null) {
      $result.name = name;
    }
    if (num != null) {
      $result.num = num;
    }
    if (newowner != null) {
      $result.newowner = newowner;
    }
    if (def != null) {
      $result.def = def;
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    if (recurse != null) {
      $result.recurse = recurse;
    }
    return $result;
  }
  AlterTableCmd._() : super();
  factory AlterTableCmd.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterTableCmd.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterTableCmd', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<AlterTableType>(1, _omitFieldNames ? '' : 'subtype', $pb.PbFieldType.OE, defaultOrMaker: AlterTableType.ALTER_TABLE_TYPE_UNDEFINED, valueOf: AlterTableType.valueOf, enumValues: AlterTableType.values)
    ..aOS(2, _omitFieldNames ? '' : 'name')
    ..a<$core.int>(3, _omitFieldNames ? '' : 'num', $pb.PbFieldType.O3)
    ..aOM<RoleSpec>(4, _omitFieldNames ? '' : 'newowner', subBuilder: RoleSpec.create)
    ..aOM<Node>(5, _omitFieldNames ? '' : 'def', subBuilder: Node.create)
    ..e<DropBehavior>(6, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..aOB(7, _omitFieldNames ? '' : 'missing_ok')
    ..aOB(8, _omitFieldNames ? '' : 'recurse')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterTableCmd clone() => AlterTableCmd()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterTableCmd copyWith(void Function(AlterTableCmd) updates) => super.copyWith((message) => updates(message as AlterTableCmd)) as AlterTableCmd;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterTableCmd create() => AlterTableCmd._();
  AlterTableCmd createEmptyInstance() => create();
  static $pb.PbList<AlterTableCmd> createRepeated() => $pb.PbList<AlterTableCmd>();
  @$core.pragma('dart2js:noInline')
  static AlterTableCmd getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterTableCmd>(create);
  static AlterTableCmd? _defaultInstance;

  @$pb.TagNumber(1)
  AlterTableType get subtype => $_getN(0);
  @$pb.TagNumber(1)
  set subtype(AlterTableType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasSubtype() => $_has(0);
  @$pb.TagNumber(1)
  void clearSubtype() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get name => $_getSZ(1);
  @$pb.TagNumber(2)
  set name($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasName() => $_has(1);
  @$pb.TagNumber(2)
  void clearName() => clearField(2);

  @$pb.TagNumber(3)
  $core.int get num => $_getIZ(2);
  @$pb.TagNumber(3)
  set num($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasNum() => $_has(2);
  @$pb.TagNumber(3)
  void clearNum() => clearField(3);

  @$pb.TagNumber(4)
  RoleSpec get newowner => $_getN(3);
  @$pb.TagNumber(4)
  set newowner(RoleSpec v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasNewowner() => $_has(3);
  @$pb.TagNumber(4)
  void clearNewowner() => clearField(4);
  @$pb.TagNumber(4)
  RoleSpec ensureNewowner() => $_ensure(3);

  @$pb.TagNumber(5)
  Node get def => $_getN(4);
  @$pb.TagNumber(5)
  set def(Node v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasDef() => $_has(4);
  @$pb.TagNumber(5)
  void clearDef() => clearField(5);
  @$pb.TagNumber(5)
  Node ensureDef() => $_ensure(4);

  @$pb.TagNumber(6)
  DropBehavior get behavior => $_getN(5);
  @$pb.TagNumber(6)
  set behavior(DropBehavior v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasBehavior() => $_has(5);
  @$pb.TagNumber(6)
  void clearBehavior() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get missingOk => $_getBF(6);
  @$pb.TagNumber(7)
  set missingOk($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasMissingOk() => $_has(6);
  @$pb.TagNumber(7)
  void clearMissingOk() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get recurse => $_getBF(7);
  @$pb.TagNumber(8)
  set recurse($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasRecurse() => $_has(7);
  @$pb.TagNumber(8)
  void clearRecurse() => clearField(8);
}

class AlterCollationStmt extends $pb.GeneratedMessage {
  factory AlterCollationStmt({
    $core.Iterable<Node>? collname,
  }) {
    final $result = create();
    if (collname != null) {
      $result.collname.addAll(collname);
    }
    return $result;
  }
  AlterCollationStmt._() : super();
  factory AlterCollationStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterCollationStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterCollationStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'collname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterCollationStmt clone() => AlterCollationStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterCollationStmt copyWith(void Function(AlterCollationStmt) updates) => super.copyWith((message) => updates(message as AlterCollationStmt)) as AlterCollationStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterCollationStmt create() => AlterCollationStmt._();
  AlterCollationStmt createEmptyInstance() => create();
  static $pb.PbList<AlterCollationStmt> createRepeated() => $pb.PbList<AlterCollationStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterCollationStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterCollationStmt>(create);
  static AlterCollationStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get collname => $_getList(0);
}

class AlterDomainStmt extends $pb.GeneratedMessage {
  factory AlterDomainStmt({
    $core.String? subtype,
    $core.Iterable<Node>? typeName,
    $core.String? name,
    Node? def,
    DropBehavior? behavior,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (subtype != null) {
      $result.subtype = subtype;
    }
    if (typeName != null) {
      $result.typeName.addAll(typeName);
    }
    if (name != null) {
      $result.name = name;
    }
    if (def != null) {
      $result.def = def;
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  AlterDomainStmt._() : super();
  factory AlterDomainStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterDomainStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterDomainStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'subtype')
    ..pc<Node>(2, _omitFieldNames ? '' : 'typeName', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'name')
    ..aOM<Node>(4, _omitFieldNames ? '' : 'def', subBuilder: Node.create)
    ..e<DropBehavior>(5, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..aOB(6, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterDomainStmt clone() => AlterDomainStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterDomainStmt copyWith(void Function(AlterDomainStmt) updates) => super.copyWith((message) => updates(message as AlterDomainStmt)) as AlterDomainStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterDomainStmt create() => AlterDomainStmt._();
  AlterDomainStmt createEmptyInstance() => create();
  static $pb.PbList<AlterDomainStmt> createRepeated() => $pb.PbList<AlterDomainStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterDomainStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterDomainStmt>(create);
  static AlterDomainStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get subtype => $_getSZ(0);
  @$pb.TagNumber(1)
  set subtype($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasSubtype() => $_has(0);
  @$pb.TagNumber(1)
  void clearSubtype() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get typeName => $_getList(1);

  @$pb.TagNumber(3)
  $core.String get name => $_getSZ(2);
  @$pb.TagNumber(3)
  set name($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasName() => $_has(2);
  @$pb.TagNumber(3)
  void clearName() => clearField(3);

  @$pb.TagNumber(4)
  Node get def => $_getN(3);
  @$pb.TagNumber(4)
  set def(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasDef() => $_has(3);
  @$pb.TagNumber(4)
  void clearDef() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureDef() => $_ensure(3);

  @$pb.TagNumber(5)
  DropBehavior get behavior => $_getN(4);
  @$pb.TagNumber(5)
  set behavior(DropBehavior v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasBehavior() => $_has(4);
  @$pb.TagNumber(5)
  void clearBehavior() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get missingOk => $_getBF(5);
  @$pb.TagNumber(6)
  set missingOk($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasMissingOk() => $_has(5);
  @$pb.TagNumber(6)
  void clearMissingOk() => clearField(6);
}

class GrantStmt extends $pb.GeneratedMessage {
  factory GrantStmt({
    $core.bool? isGrant,
    GrantTargetType? targtype,
    ObjectType? objtype,
    $core.Iterable<Node>? objects,
    $core.Iterable<Node>? privileges,
    $core.Iterable<Node>? grantees,
    $core.bool? grantOption,
    RoleSpec? grantor,
    DropBehavior? behavior,
  }) {
    final $result = create();
    if (isGrant != null) {
      $result.isGrant = isGrant;
    }
    if (targtype != null) {
      $result.targtype = targtype;
    }
    if (objtype != null) {
      $result.objtype = objtype;
    }
    if (objects != null) {
      $result.objects.addAll(objects);
    }
    if (privileges != null) {
      $result.privileges.addAll(privileges);
    }
    if (grantees != null) {
      $result.grantees.addAll(grantees);
    }
    if (grantOption != null) {
      $result.grantOption = grantOption;
    }
    if (grantor != null) {
      $result.grantor = grantor;
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    return $result;
  }
  GrantStmt._() : super();
  factory GrantStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory GrantStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'GrantStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'is_grant')
    ..e<GrantTargetType>(2, _omitFieldNames ? '' : 'targtype', $pb.PbFieldType.OE, defaultOrMaker: GrantTargetType.GRANT_TARGET_TYPE_UNDEFINED, valueOf: GrantTargetType.valueOf, enumValues: GrantTargetType.values)
    ..e<ObjectType>(3, _omitFieldNames ? '' : 'objtype', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..pc<Node>(4, _omitFieldNames ? '' : 'objects', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'privileges', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'grantees', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(7, _omitFieldNames ? '' : 'grant_option')
    ..aOM<RoleSpec>(8, _omitFieldNames ? '' : 'grantor', subBuilder: RoleSpec.create)
    ..e<DropBehavior>(9, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  GrantStmt clone() => GrantStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  GrantStmt copyWith(void Function(GrantStmt) updates) => super.copyWith((message) => updates(message as GrantStmt)) as GrantStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static GrantStmt create() => GrantStmt._();
  GrantStmt createEmptyInstance() => create();
  static $pb.PbList<GrantStmt> createRepeated() => $pb.PbList<GrantStmt>();
  @$core.pragma('dart2js:noInline')
  static GrantStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<GrantStmt>(create);
  static GrantStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get isGrant => $_getBF(0);
  @$pb.TagNumber(1)
  set isGrant($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasIsGrant() => $_has(0);
  @$pb.TagNumber(1)
  void clearIsGrant() => clearField(1);

  @$pb.TagNumber(2)
  GrantTargetType get targtype => $_getN(1);
  @$pb.TagNumber(2)
  set targtype(GrantTargetType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTargtype() => $_has(1);
  @$pb.TagNumber(2)
  void clearTargtype() => clearField(2);

  @$pb.TagNumber(3)
  ObjectType get objtype => $_getN(2);
  @$pb.TagNumber(3)
  set objtype(ObjectType v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasObjtype() => $_has(2);
  @$pb.TagNumber(3)
  void clearObjtype() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get objects => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get privileges => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get grantees => $_getList(5);

  @$pb.TagNumber(7)
  $core.bool get grantOption => $_getBF(6);
  @$pb.TagNumber(7)
  set grantOption($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasGrantOption() => $_has(6);
  @$pb.TagNumber(7)
  void clearGrantOption() => clearField(7);

  @$pb.TagNumber(8)
  RoleSpec get grantor => $_getN(7);
  @$pb.TagNumber(8)
  set grantor(RoleSpec v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasGrantor() => $_has(7);
  @$pb.TagNumber(8)
  void clearGrantor() => clearField(8);
  @$pb.TagNumber(8)
  RoleSpec ensureGrantor() => $_ensure(7);

  @$pb.TagNumber(9)
  DropBehavior get behavior => $_getN(8);
  @$pb.TagNumber(9)
  set behavior(DropBehavior v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasBehavior() => $_has(8);
  @$pb.TagNumber(9)
  void clearBehavior() => clearField(9);
}

class ObjectWithArgs extends $pb.GeneratedMessage {
  factory ObjectWithArgs({
    $core.Iterable<Node>? objname,
    $core.Iterable<Node>? objargs,
    $core.Iterable<Node>? objfuncargs,
    $core.bool? argsUnspecified,
  }) {
    final $result = create();
    if (objname != null) {
      $result.objname.addAll(objname);
    }
    if (objargs != null) {
      $result.objargs.addAll(objargs);
    }
    if (objfuncargs != null) {
      $result.objfuncargs.addAll(objfuncargs);
    }
    if (argsUnspecified != null) {
      $result.argsUnspecified = argsUnspecified;
    }
    return $result;
  }
  ObjectWithArgs._() : super();
  factory ObjectWithArgs.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ObjectWithArgs.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ObjectWithArgs', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'objname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'objargs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'objfuncargs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(4, _omitFieldNames ? '' : 'args_unspecified')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ObjectWithArgs clone() => ObjectWithArgs()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ObjectWithArgs copyWith(void Function(ObjectWithArgs) updates) => super.copyWith((message) => updates(message as ObjectWithArgs)) as ObjectWithArgs;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ObjectWithArgs create() => ObjectWithArgs._();
  ObjectWithArgs createEmptyInstance() => create();
  static $pb.PbList<ObjectWithArgs> createRepeated() => $pb.PbList<ObjectWithArgs>();
  @$core.pragma('dart2js:noInline')
  static ObjectWithArgs getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ObjectWithArgs>(create);
  static ObjectWithArgs? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get objname => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get objargs => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get objfuncargs => $_getList(2);

  @$pb.TagNumber(4)
  $core.bool get argsUnspecified => $_getBF(3);
  @$pb.TagNumber(4)
  set argsUnspecified($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasArgsUnspecified() => $_has(3);
  @$pb.TagNumber(4)
  void clearArgsUnspecified() => clearField(4);
}

class AccessPriv extends $pb.GeneratedMessage {
  factory AccessPriv({
    $core.String? privName,
    $core.Iterable<Node>? cols,
  }) {
    final $result = create();
    if (privName != null) {
      $result.privName = privName;
    }
    if (cols != null) {
      $result.cols.addAll(cols);
    }
    return $result;
  }
  AccessPriv._() : super();
  factory AccessPriv.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AccessPriv.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AccessPriv', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'priv_name')
    ..pc<Node>(2, _omitFieldNames ? '' : 'cols', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AccessPriv clone() => AccessPriv()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AccessPriv copyWith(void Function(AccessPriv) updates) => super.copyWith((message) => updates(message as AccessPriv)) as AccessPriv;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AccessPriv create() => AccessPriv._();
  AccessPriv createEmptyInstance() => create();
  static $pb.PbList<AccessPriv> createRepeated() => $pb.PbList<AccessPriv>();
  @$core.pragma('dart2js:noInline')
  static AccessPriv getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AccessPriv>(create);
  static AccessPriv? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get privName => $_getSZ(0);
  @$pb.TagNumber(1)
  set privName($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasPrivName() => $_has(0);
  @$pb.TagNumber(1)
  void clearPrivName() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get cols => $_getList(1);
}

class GrantRoleStmt extends $pb.GeneratedMessage {
  factory GrantRoleStmt({
    $core.Iterable<Node>? grantedRoles,
    $core.Iterable<Node>? granteeRoles,
    $core.bool? isGrant,
    $core.Iterable<Node>? opt,
    RoleSpec? grantor,
    DropBehavior? behavior,
  }) {
    final $result = create();
    if (grantedRoles != null) {
      $result.grantedRoles.addAll(grantedRoles);
    }
    if (granteeRoles != null) {
      $result.granteeRoles.addAll(granteeRoles);
    }
    if (isGrant != null) {
      $result.isGrant = isGrant;
    }
    if (opt != null) {
      $result.opt.addAll(opt);
    }
    if (grantor != null) {
      $result.grantor = grantor;
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    return $result;
  }
  GrantRoleStmt._() : super();
  factory GrantRoleStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory GrantRoleStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'GrantRoleStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'granted_roles', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'grantee_roles', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(3, _omitFieldNames ? '' : 'is_grant')
    ..pc<Node>(4, _omitFieldNames ? '' : 'opt', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<RoleSpec>(5, _omitFieldNames ? '' : 'grantor', subBuilder: RoleSpec.create)
    ..e<DropBehavior>(6, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  GrantRoleStmt clone() => GrantRoleStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  GrantRoleStmt copyWith(void Function(GrantRoleStmt) updates) => super.copyWith((message) => updates(message as GrantRoleStmt)) as GrantRoleStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static GrantRoleStmt create() => GrantRoleStmt._();
  GrantRoleStmt createEmptyInstance() => create();
  static $pb.PbList<GrantRoleStmt> createRepeated() => $pb.PbList<GrantRoleStmt>();
  @$core.pragma('dart2js:noInline')
  static GrantRoleStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<GrantRoleStmt>(create);
  static GrantRoleStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get grantedRoles => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get granteeRoles => $_getList(1);

  @$pb.TagNumber(3)
  $core.bool get isGrant => $_getBF(2);
  @$pb.TagNumber(3)
  set isGrant($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasIsGrant() => $_has(2);
  @$pb.TagNumber(3)
  void clearIsGrant() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get opt => $_getList(3);

  @$pb.TagNumber(5)
  RoleSpec get grantor => $_getN(4);
  @$pb.TagNumber(5)
  set grantor(RoleSpec v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasGrantor() => $_has(4);
  @$pb.TagNumber(5)
  void clearGrantor() => clearField(5);
  @$pb.TagNumber(5)
  RoleSpec ensureGrantor() => $_ensure(4);

  @$pb.TagNumber(6)
  DropBehavior get behavior => $_getN(5);
  @$pb.TagNumber(6)
  set behavior(DropBehavior v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasBehavior() => $_has(5);
  @$pb.TagNumber(6)
  void clearBehavior() => clearField(6);
}

class AlterDefaultPrivilegesStmt extends $pb.GeneratedMessage {
  factory AlterDefaultPrivilegesStmt({
    $core.Iterable<Node>? options,
    GrantStmt? action,
  }) {
    final $result = create();
    if (options != null) {
      $result.options.addAll(options);
    }
    if (action != null) {
      $result.action = action;
    }
    return $result;
  }
  AlterDefaultPrivilegesStmt._() : super();
  factory AlterDefaultPrivilegesStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterDefaultPrivilegesStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterDefaultPrivilegesStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<GrantStmt>(2, _omitFieldNames ? '' : 'action', subBuilder: GrantStmt.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterDefaultPrivilegesStmt clone() => AlterDefaultPrivilegesStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterDefaultPrivilegesStmt copyWith(void Function(AlterDefaultPrivilegesStmt) updates) => super.copyWith((message) => updates(message as AlterDefaultPrivilegesStmt)) as AlterDefaultPrivilegesStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterDefaultPrivilegesStmt create() => AlterDefaultPrivilegesStmt._();
  AlterDefaultPrivilegesStmt createEmptyInstance() => create();
  static $pb.PbList<AlterDefaultPrivilegesStmt> createRepeated() => $pb.PbList<AlterDefaultPrivilegesStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterDefaultPrivilegesStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterDefaultPrivilegesStmt>(create);
  static AlterDefaultPrivilegesStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get options => $_getList(0);

  @$pb.TagNumber(2)
  GrantStmt get action => $_getN(1);
  @$pb.TagNumber(2)
  set action(GrantStmt v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasAction() => $_has(1);
  @$pb.TagNumber(2)
  void clearAction() => clearField(2);
  @$pb.TagNumber(2)
  GrantStmt ensureAction() => $_ensure(1);
}

class CopyStmt extends $pb.GeneratedMessage {
  factory CopyStmt({
    RangeVar? relation,
    Node? query,
    $core.Iterable<Node>? attlist,
    $core.bool? isFrom,
    $core.bool? isProgram,
    $core.String? filename,
    $core.Iterable<Node>? options,
    Node? whereClause,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (query != null) {
      $result.query = query;
    }
    if (attlist != null) {
      $result.attlist.addAll(attlist);
    }
    if (isFrom != null) {
      $result.isFrom = isFrom;
    }
    if (isProgram != null) {
      $result.isProgram = isProgram;
    }
    if (filename != null) {
      $result.filename = filename;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    return $result;
  }
  CopyStmt._() : super();
  factory CopyStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CopyStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CopyStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'query', subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'attlist', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(4, _omitFieldNames ? '' : 'is_from')
    ..aOB(5, _omitFieldNames ? '' : 'is_program')
    ..aOS(6, _omitFieldNames ? '' : 'filename')
    ..pc<Node>(7, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(8, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CopyStmt clone() => CopyStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CopyStmt copyWith(void Function(CopyStmt) updates) => super.copyWith((message) => updates(message as CopyStmt)) as CopyStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CopyStmt create() => CopyStmt._();
  CopyStmt createEmptyInstance() => create();
  static $pb.PbList<CopyStmt> createRepeated() => $pb.PbList<CopyStmt>();
  @$core.pragma('dart2js:noInline')
  static CopyStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CopyStmt>(create);
  static CopyStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get query => $_getN(1);
  @$pb.TagNumber(2)
  set query(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasQuery() => $_has(1);
  @$pb.TagNumber(2)
  void clearQuery() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureQuery() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get attlist => $_getList(2);

  @$pb.TagNumber(4)
  $core.bool get isFrom => $_getBF(3);
  @$pb.TagNumber(4)
  set isFrom($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasIsFrom() => $_has(3);
  @$pb.TagNumber(4)
  void clearIsFrom() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get isProgram => $_getBF(4);
  @$pb.TagNumber(5)
  set isProgram($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasIsProgram() => $_has(4);
  @$pb.TagNumber(5)
  void clearIsProgram() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get filename => $_getSZ(5);
  @$pb.TagNumber(6)
  set filename($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasFilename() => $_has(5);
  @$pb.TagNumber(6)
  void clearFilename() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<Node> get options => $_getList(6);

  @$pb.TagNumber(8)
  Node get whereClause => $_getN(7);
  @$pb.TagNumber(8)
  set whereClause(Node v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasWhereClause() => $_has(7);
  @$pb.TagNumber(8)
  void clearWhereClause() => clearField(8);
  @$pb.TagNumber(8)
  Node ensureWhereClause() => $_ensure(7);
}

class VariableSetStmt extends $pb.GeneratedMessage {
  factory VariableSetStmt({
    VariableSetKind? kind,
    $core.String? name,
    $core.Iterable<Node>? args,
    $core.bool? isLocal,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (name != null) {
      $result.name = name;
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (isLocal != null) {
      $result.isLocal = isLocal;
    }
    return $result;
  }
  VariableSetStmt._() : super();
  factory VariableSetStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory VariableSetStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'VariableSetStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<VariableSetKind>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: VariableSetKind.VARIABLE_SET_KIND_UNDEFINED, valueOf: VariableSetKind.valueOf, enumValues: VariableSetKind.values)
    ..aOS(2, _omitFieldNames ? '' : 'name')
    ..pc<Node>(3, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(4, _omitFieldNames ? '' : 'is_local')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  VariableSetStmt clone() => VariableSetStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  VariableSetStmt copyWith(void Function(VariableSetStmt) updates) => super.copyWith((message) => updates(message as VariableSetStmt)) as VariableSetStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static VariableSetStmt create() => VariableSetStmt._();
  VariableSetStmt createEmptyInstance() => create();
  static $pb.PbList<VariableSetStmt> createRepeated() => $pb.PbList<VariableSetStmt>();
  @$core.pragma('dart2js:noInline')
  static VariableSetStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<VariableSetStmt>(create);
  static VariableSetStmt? _defaultInstance;

  @$pb.TagNumber(1)
  VariableSetKind get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(VariableSetKind v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get name => $_getSZ(1);
  @$pb.TagNumber(2)
  set name($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasName() => $_has(1);
  @$pb.TagNumber(2)
  void clearName() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get args => $_getList(2);

  @$pb.TagNumber(4)
  $core.bool get isLocal => $_getBF(3);
  @$pb.TagNumber(4)
  set isLocal($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasIsLocal() => $_has(3);
  @$pb.TagNumber(4)
  void clearIsLocal() => clearField(4);
}

class VariableShowStmt extends $pb.GeneratedMessage {
  factory VariableShowStmt({
    $core.String? name,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    return $result;
  }
  VariableShowStmt._() : super();
  factory VariableShowStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory VariableShowStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'VariableShowStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  VariableShowStmt clone() => VariableShowStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  VariableShowStmt copyWith(void Function(VariableShowStmt) updates) => super.copyWith((message) => updates(message as VariableShowStmt)) as VariableShowStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static VariableShowStmt create() => VariableShowStmt._();
  VariableShowStmt createEmptyInstance() => create();
  static $pb.PbList<VariableShowStmt> createRepeated() => $pb.PbList<VariableShowStmt>();
  @$core.pragma('dart2js:noInline')
  static VariableShowStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<VariableShowStmt>(create);
  static VariableShowStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);
}

class CreateStmt extends $pb.GeneratedMessage {
  factory CreateStmt({
    RangeVar? relation,
    $core.Iterable<Node>? tableElts,
    $core.Iterable<Node>? inhRelations,
    PartitionBoundSpec? partbound,
    PartitionSpec? partspec,
    TypeName? ofTypename,
    $core.Iterable<Node>? constraints,
    $core.Iterable<Node>? options,
    OnCommitAction? oncommit,
    $core.String? tablespacename,
    $core.String? accessMethod,
    $core.bool? ifNotExists,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (tableElts != null) {
      $result.tableElts.addAll(tableElts);
    }
    if (inhRelations != null) {
      $result.inhRelations.addAll(inhRelations);
    }
    if (partbound != null) {
      $result.partbound = partbound;
    }
    if (partspec != null) {
      $result.partspec = partspec;
    }
    if (ofTypename != null) {
      $result.ofTypename = ofTypename;
    }
    if (constraints != null) {
      $result.constraints.addAll(constraints);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (oncommit != null) {
      $result.oncommit = oncommit;
    }
    if (tablespacename != null) {
      $result.tablespacename = tablespacename;
    }
    if (accessMethod != null) {
      $result.accessMethod = accessMethod;
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    return $result;
  }
  CreateStmt._() : super();
  factory CreateStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'tableElts', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'inhRelations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<PartitionBoundSpec>(4, _omitFieldNames ? '' : 'partbound', subBuilder: PartitionBoundSpec.create)
    ..aOM<PartitionSpec>(5, _omitFieldNames ? '' : 'partspec', subBuilder: PartitionSpec.create)
    ..aOM<TypeName>(6, _omitFieldNames ? '' : 'ofTypename', subBuilder: TypeName.create)
    ..pc<Node>(7, _omitFieldNames ? '' : 'constraints', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(8, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<OnCommitAction>(9, _omitFieldNames ? '' : 'oncommit', $pb.PbFieldType.OE, defaultOrMaker: OnCommitAction.ON_COMMIT_ACTION_UNDEFINED, valueOf: OnCommitAction.valueOf, enumValues: OnCommitAction.values)
    ..aOS(10, _omitFieldNames ? '' : 'tablespacename')
    ..aOS(11, _omitFieldNames ? '' : 'accessMethod')
    ..aOB(12, _omitFieldNames ? '' : 'if_not_exists')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateStmt clone() => CreateStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateStmt copyWith(void Function(CreateStmt) updates) => super.copyWith((message) => updates(message as CreateStmt)) as CreateStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateStmt create() => CreateStmt._();
  CreateStmt createEmptyInstance() => create();
  static $pb.PbList<CreateStmt> createRepeated() => $pb.PbList<CreateStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateStmt>(create);
  static CreateStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get tableElts => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get inhRelations => $_getList(2);

  @$pb.TagNumber(4)
  PartitionBoundSpec get partbound => $_getN(3);
  @$pb.TagNumber(4)
  set partbound(PartitionBoundSpec v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasPartbound() => $_has(3);
  @$pb.TagNumber(4)
  void clearPartbound() => clearField(4);
  @$pb.TagNumber(4)
  PartitionBoundSpec ensurePartbound() => $_ensure(3);

  @$pb.TagNumber(5)
  PartitionSpec get partspec => $_getN(4);
  @$pb.TagNumber(5)
  set partspec(PartitionSpec v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasPartspec() => $_has(4);
  @$pb.TagNumber(5)
  void clearPartspec() => clearField(5);
  @$pb.TagNumber(5)
  PartitionSpec ensurePartspec() => $_ensure(4);

  @$pb.TagNumber(6)
  TypeName get ofTypename => $_getN(5);
  @$pb.TagNumber(6)
  set ofTypename(TypeName v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasOfTypename() => $_has(5);
  @$pb.TagNumber(6)
  void clearOfTypename() => clearField(6);
  @$pb.TagNumber(6)
  TypeName ensureOfTypename() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.List<Node> get constraints => $_getList(6);

  @$pb.TagNumber(8)
  $core.List<Node> get options => $_getList(7);

  @$pb.TagNumber(9)
  OnCommitAction get oncommit => $_getN(8);
  @$pb.TagNumber(9)
  set oncommit(OnCommitAction v) { setField(9, v); }
  @$pb.TagNumber(9)
  $core.bool hasOncommit() => $_has(8);
  @$pb.TagNumber(9)
  void clearOncommit() => clearField(9);

  @$pb.TagNumber(10)
  $core.String get tablespacename => $_getSZ(9);
  @$pb.TagNumber(10)
  set tablespacename($core.String v) { $_setString(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasTablespacename() => $_has(9);
  @$pb.TagNumber(10)
  void clearTablespacename() => clearField(10);

  @$pb.TagNumber(11)
  $core.String get accessMethod => $_getSZ(10);
  @$pb.TagNumber(11)
  set accessMethod($core.String v) { $_setString(10, v); }
  @$pb.TagNumber(11)
  $core.bool hasAccessMethod() => $_has(10);
  @$pb.TagNumber(11)
  void clearAccessMethod() => clearField(11);

  @$pb.TagNumber(12)
  $core.bool get ifNotExists => $_getBF(11);
  @$pb.TagNumber(12)
  set ifNotExists($core.bool v) { $_setBool(11, v); }
  @$pb.TagNumber(12)
  $core.bool hasIfNotExists() => $_has(11);
  @$pb.TagNumber(12)
  void clearIfNotExists() => clearField(12);
}

class Constraint extends $pb.GeneratedMessage {
  factory Constraint({
    ConstrType? contype,
    $core.String? conname,
    $core.bool? deferrable,
    $core.bool? initdeferred,
    $core.int? location,
    $core.bool? isNoInherit,
    Node? rawExpr,
    $core.String? cookedExpr,
    $core.String? generatedWhen,
    $core.bool? nullsNotDistinct,
    $core.Iterable<Node>? keys,
    $core.Iterable<Node>? including,
    $core.Iterable<Node>? exclusions,
    $core.Iterable<Node>? options,
    $core.String? indexname,
    $core.String? indexspace,
    $core.bool? resetDefaultTblspc,
    $core.String? accessMethod,
    Node? whereClause,
    RangeVar? pktable,
    $core.Iterable<Node>? fkAttrs,
    $core.Iterable<Node>? pkAttrs,
    $core.String? fkMatchtype,
    $core.String? fkUpdAction,
    $core.String? fkDelAction,
    $core.Iterable<Node>? fkDelSetCols,
    $core.Iterable<Node>? oldConpfeqop,
    $core.int? oldPktableOid,
    $core.bool? skipValidation,
    $core.bool? initiallyValid,
  }) {
    final $result = create();
    if (contype != null) {
      $result.contype = contype;
    }
    if (conname != null) {
      $result.conname = conname;
    }
    if (deferrable != null) {
      $result.deferrable = deferrable;
    }
    if (initdeferred != null) {
      $result.initdeferred = initdeferred;
    }
    if (location != null) {
      $result.location = location;
    }
    if (isNoInherit != null) {
      $result.isNoInherit = isNoInherit;
    }
    if (rawExpr != null) {
      $result.rawExpr = rawExpr;
    }
    if (cookedExpr != null) {
      $result.cookedExpr = cookedExpr;
    }
    if (generatedWhen != null) {
      $result.generatedWhen = generatedWhen;
    }
    if (nullsNotDistinct != null) {
      $result.nullsNotDistinct = nullsNotDistinct;
    }
    if (keys != null) {
      $result.keys.addAll(keys);
    }
    if (including != null) {
      $result.including.addAll(including);
    }
    if (exclusions != null) {
      $result.exclusions.addAll(exclusions);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (indexname != null) {
      $result.indexname = indexname;
    }
    if (indexspace != null) {
      $result.indexspace = indexspace;
    }
    if (resetDefaultTblspc != null) {
      $result.resetDefaultTblspc = resetDefaultTblspc;
    }
    if (accessMethod != null) {
      $result.accessMethod = accessMethod;
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (pktable != null) {
      $result.pktable = pktable;
    }
    if (fkAttrs != null) {
      $result.fkAttrs.addAll(fkAttrs);
    }
    if (pkAttrs != null) {
      $result.pkAttrs.addAll(pkAttrs);
    }
    if (fkMatchtype != null) {
      $result.fkMatchtype = fkMatchtype;
    }
    if (fkUpdAction != null) {
      $result.fkUpdAction = fkUpdAction;
    }
    if (fkDelAction != null) {
      $result.fkDelAction = fkDelAction;
    }
    if (fkDelSetCols != null) {
      $result.fkDelSetCols.addAll(fkDelSetCols);
    }
    if (oldConpfeqop != null) {
      $result.oldConpfeqop.addAll(oldConpfeqop);
    }
    if (oldPktableOid != null) {
      $result.oldPktableOid = oldPktableOid;
    }
    if (skipValidation != null) {
      $result.skipValidation = skipValidation;
    }
    if (initiallyValid != null) {
      $result.initiallyValid = initiallyValid;
    }
    return $result;
  }
  Constraint._() : super();
  factory Constraint.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory Constraint.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'Constraint', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ConstrType>(1, _omitFieldNames ? '' : 'contype', $pb.PbFieldType.OE, defaultOrMaker: ConstrType.CONSTR_TYPE_UNDEFINED, valueOf: ConstrType.valueOf, enumValues: ConstrType.values)
    ..aOS(2, _omitFieldNames ? '' : 'conname')
    ..aOB(3, _omitFieldNames ? '' : 'deferrable')
    ..aOB(4, _omitFieldNames ? '' : 'initdeferred')
    ..a<$core.int>(5, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..aOB(6, _omitFieldNames ? '' : 'is_no_inherit')
    ..aOM<Node>(7, _omitFieldNames ? '' : 'raw_expr', subBuilder: Node.create)
    ..aOS(8, _omitFieldNames ? '' : 'cooked_expr')
    ..aOS(9, _omitFieldNames ? '' : 'generated_when')
    ..aOB(10, _omitFieldNames ? '' : 'nulls_not_distinct')
    ..pc<Node>(11, _omitFieldNames ? '' : 'keys', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(12, _omitFieldNames ? '' : 'including', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(13, _omitFieldNames ? '' : 'exclusions', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(14, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(15, _omitFieldNames ? '' : 'indexname')
    ..aOS(16, _omitFieldNames ? '' : 'indexspace')
    ..aOB(17, _omitFieldNames ? '' : 'reset_default_tblspc')
    ..aOS(18, _omitFieldNames ? '' : 'access_method')
    ..aOM<Node>(19, _omitFieldNames ? '' : 'where_clause', subBuilder: Node.create)
    ..aOM<RangeVar>(20, _omitFieldNames ? '' : 'pktable', subBuilder: RangeVar.create)
    ..pc<Node>(21, _omitFieldNames ? '' : 'fk_attrs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(22, _omitFieldNames ? '' : 'pk_attrs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(23, _omitFieldNames ? '' : 'fk_matchtype')
    ..aOS(24, _omitFieldNames ? '' : 'fk_upd_action')
    ..aOS(25, _omitFieldNames ? '' : 'fk_del_action')
    ..pc<Node>(26, _omitFieldNames ? '' : 'fk_del_set_cols', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(27, _omitFieldNames ? '' : 'old_conpfeqop', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(28, _omitFieldNames ? '' : 'old_pktable_oid', $pb.PbFieldType.OU3)
    ..aOB(29, _omitFieldNames ? '' : 'skip_validation')
    ..aOB(30, _omitFieldNames ? '' : 'initially_valid')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  Constraint clone() => Constraint()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  Constraint copyWith(void Function(Constraint) updates) => super.copyWith((message) => updates(message as Constraint)) as Constraint;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static Constraint create() => Constraint._();
  Constraint createEmptyInstance() => create();
  static $pb.PbList<Constraint> createRepeated() => $pb.PbList<Constraint>();
  @$core.pragma('dart2js:noInline')
  static Constraint getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<Constraint>(create);
  static Constraint? _defaultInstance;

  @$pb.TagNumber(1)
  ConstrType get contype => $_getN(0);
  @$pb.TagNumber(1)
  set contype(ConstrType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasContype() => $_has(0);
  @$pb.TagNumber(1)
  void clearContype() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get conname => $_getSZ(1);
  @$pb.TagNumber(2)
  set conname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasConname() => $_has(1);
  @$pb.TagNumber(2)
  void clearConname() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get deferrable => $_getBF(2);
  @$pb.TagNumber(3)
  set deferrable($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasDeferrable() => $_has(2);
  @$pb.TagNumber(3)
  void clearDeferrable() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get initdeferred => $_getBF(3);
  @$pb.TagNumber(4)
  set initdeferred($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasInitdeferred() => $_has(3);
  @$pb.TagNumber(4)
  void clearInitdeferred() => clearField(4);

  @$pb.TagNumber(5)
  $core.int get location => $_getIZ(4);
  @$pb.TagNumber(5)
  set location($core.int v) { $_setSignedInt32(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasLocation() => $_has(4);
  @$pb.TagNumber(5)
  void clearLocation() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get isNoInherit => $_getBF(5);
  @$pb.TagNumber(6)
  set isNoInherit($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasIsNoInherit() => $_has(5);
  @$pb.TagNumber(6)
  void clearIsNoInherit() => clearField(6);

  @$pb.TagNumber(7)
  Node get rawExpr => $_getN(6);
  @$pb.TagNumber(7)
  set rawExpr(Node v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasRawExpr() => $_has(6);
  @$pb.TagNumber(7)
  void clearRawExpr() => clearField(7);
  @$pb.TagNumber(7)
  Node ensureRawExpr() => $_ensure(6);

  @$pb.TagNumber(8)
  $core.String get cookedExpr => $_getSZ(7);
  @$pb.TagNumber(8)
  set cookedExpr($core.String v) { $_setString(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasCookedExpr() => $_has(7);
  @$pb.TagNumber(8)
  void clearCookedExpr() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get generatedWhen => $_getSZ(8);
  @$pb.TagNumber(9)
  set generatedWhen($core.String v) { $_setString(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasGeneratedWhen() => $_has(8);
  @$pb.TagNumber(9)
  void clearGeneratedWhen() => clearField(9);

  @$pb.TagNumber(10)
  $core.bool get nullsNotDistinct => $_getBF(9);
  @$pb.TagNumber(10)
  set nullsNotDistinct($core.bool v) { $_setBool(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasNullsNotDistinct() => $_has(9);
  @$pb.TagNumber(10)
  void clearNullsNotDistinct() => clearField(10);

  @$pb.TagNumber(11)
  $core.List<Node> get keys => $_getList(10);

  @$pb.TagNumber(12)
  $core.List<Node> get including => $_getList(11);

  @$pb.TagNumber(13)
  $core.List<Node> get exclusions => $_getList(12);

  @$pb.TagNumber(14)
  $core.List<Node> get options => $_getList(13);

  @$pb.TagNumber(15)
  $core.String get indexname => $_getSZ(14);
  @$pb.TagNumber(15)
  set indexname($core.String v) { $_setString(14, v); }
  @$pb.TagNumber(15)
  $core.bool hasIndexname() => $_has(14);
  @$pb.TagNumber(15)
  void clearIndexname() => clearField(15);

  @$pb.TagNumber(16)
  $core.String get indexspace => $_getSZ(15);
  @$pb.TagNumber(16)
  set indexspace($core.String v) { $_setString(15, v); }
  @$pb.TagNumber(16)
  $core.bool hasIndexspace() => $_has(15);
  @$pb.TagNumber(16)
  void clearIndexspace() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get resetDefaultTblspc => $_getBF(16);
  @$pb.TagNumber(17)
  set resetDefaultTblspc($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(17)
  $core.bool hasResetDefaultTblspc() => $_has(16);
  @$pb.TagNumber(17)
  void clearResetDefaultTblspc() => clearField(17);

  @$pb.TagNumber(18)
  $core.String get accessMethod => $_getSZ(17);
  @$pb.TagNumber(18)
  set accessMethod($core.String v) { $_setString(17, v); }
  @$pb.TagNumber(18)
  $core.bool hasAccessMethod() => $_has(17);
  @$pb.TagNumber(18)
  void clearAccessMethod() => clearField(18);

  @$pb.TagNumber(19)
  Node get whereClause => $_getN(18);
  @$pb.TagNumber(19)
  set whereClause(Node v) { setField(19, v); }
  @$pb.TagNumber(19)
  $core.bool hasWhereClause() => $_has(18);
  @$pb.TagNumber(19)
  void clearWhereClause() => clearField(19);
  @$pb.TagNumber(19)
  Node ensureWhereClause() => $_ensure(18);

  @$pb.TagNumber(20)
  RangeVar get pktable => $_getN(19);
  @$pb.TagNumber(20)
  set pktable(RangeVar v) { setField(20, v); }
  @$pb.TagNumber(20)
  $core.bool hasPktable() => $_has(19);
  @$pb.TagNumber(20)
  void clearPktable() => clearField(20);
  @$pb.TagNumber(20)
  RangeVar ensurePktable() => $_ensure(19);

  @$pb.TagNumber(21)
  $core.List<Node> get fkAttrs => $_getList(20);

  @$pb.TagNumber(22)
  $core.List<Node> get pkAttrs => $_getList(21);

  @$pb.TagNumber(23)
  $core.String get fkMatchtype => $_getSZ(22);
  @$pb.TagNumber(23)
  set fkMatchtype($core.String v) { $_setString(22, v); }
  @$pb.TagNumber(23)
  $core.bool hasFkMatchtype() => $_has(22);
  @$pb.TagNumber(23)
  void clearFkMatchtype() => clearField(23);

  @$pb.TagNumber(24)
  $core.String get fkUpdAction => $_getSZ(23);
  @$pb.TagNumber(24)
  set fkUpdAction($core.String v) { $_setString(23, v); }
  @$pb.TagNumber(24)
  $core.bool hasFkUpdAction() => $_has(23);
  @$pb.TagNumber(24)
  void clearFkUpdAction() => clearField(24);

  @$pb.TagNumber(25)
  $core.String get fkDelAction => $_getSZ(24);
  @$pb.TagNumber(25)
  set fkDelAction($core.String v) { $_setString(24, v); }
  @$pb.TagNumber(25)
  $core.bool hasFkDelAction() => $_has(24);
  @$pb.TagNumber(25)
  void clearFkDelAction() => clearField(25);

  @$pb.TagNumber(26)
  $core.List<Node> get fkDelSetCols => $_getList(25);

  @$pb.TagNumber(27)
  $core.List<Node> get oldConpfeqop => $_getList(26);

  @$pb.TagNumber(28)
  $core.int get oldPktableOid => $_getIZ(27);
  @$pb.TagNumber(28)
  set oldPktableOid($core.int v) { $_setUnsignedInt32(27, v); }
  @$pb.TagNumber(28)
  $core.bool hasOldPktableOid() => $_has(27);
  @$pb.TagNumber(28)
  void clearOldPktableOid() => clearField(28);

  @$pb.TagNumber(29)
  $core.bool get skipValidation => $_getBF(28);
  @$pb.TagNumber(29)
  set skipValidation($core.bool v) { $_setBool(28, v); }
  @$pb.TagNumber(29)
  $core.bool hasSkipValidation() => $_has(28);
  @$pb.TagNumber(29)
  void clearSkipValidation() => clearField(29);

  @$pb.TagNumber(30)
  $core.bool get initiallyValid => $_getBF(29);
  @$pb.TagNumber(30)
  set initiallyValid($core.bool v) { $_setBool(29, v); }
  @$pb.TagNumber(30)
  $core.bool hasInitiallyValid() => $_has(29);
  @$pb.TagNumber(30)
  void clearInitiallyValid() => clearField(30);
}

class CreateTableSpaceStmt extends $pb.GeneratedMessage {
  factory CreateTableSpaceStmt({
    $core.String? tablespacename,
    RoleSpec? owner,
    $core.String? location,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (tablespacename != null) {
      $result.tablespacename = tablespacename;
    }
    if (owner != null) {
      $result.owner = owner;
    }
    if (location != null) {
      $result.location = location;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreateTableSpaceStmt._() : super();
  factory CreateTableSpaceStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateTableSpaceStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateTableSpaceStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'tablespacename')
    ..aOM<RoleSpec>(2, _omitFieldNames ? '' : 'owner', subBuilder: RoleSpec.create)
    ..aOS(3, _omitFieldNames ? '' : 'location')
    ..pc<Node>(4, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateTableSpaceStmt clone() => CreateTableSpaceStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateTableSpaceStmt copyWith(void Function(CreateTableSpaceStmt) updates) => super.copyWith((message) => updates(message as CreateTableSpaceStmt)) as CreateTableSpaceStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateTableSpaceStmt create() => CreateTableSpaceStmt._();
  CreateTableSpaceStmt createEmptyInstance() => create();
  static $pb.PbList<CreateTableSpaceStmt> createRepeated() => $pb.PbList<CreateTableSpaceStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateTableSpaceStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateTableSpaceStmt>(create);
  static CreateTableSpaceStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get tablespacename => $_getSZ(0);
  @$pb.TagNumber(1)
  set tablespacename($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasTablespacename() => $_has(0);
  @$pb.TagNumber(1)
  void clearTablespacename() => clearField(1);

  @$pb.TagNumber(2)
  RoleSpec get owner => $_getN(1);
  @$pb.TagNumber(2)
  set owner(RoleSpec v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasOwner() => $_has(1);
  @$pb.TagNumber(2)
  void clearOwner() => clearField(2);
  @$pb.TagNumber(2)
  RoleSpec ensureOwner() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get location => $_getSZ(2);
  @$pb.TagNumber(3)
  set location($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocation() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocation() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get options => $_getList(3);
}

class DropTableSpaceStmt extends $pb.GeneratedMessage {
  factory DropTableSpaceStmt({
    $core.String? tablespacename,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (tablespacename != null) {
      $result.tablespacename = tablespacename;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  DropTableSpaceStmt._() : super();
  factory DropTableSpaceStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DropTableSpaceStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DropTableSpaceStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'tablespacename')
    ..aOB(2, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DropTableSpaceStmt clone() => DropTableSpaceStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DropTableSpaceStmt copyWith(void Function(DropTableSpaceStmt) updates) => super.copyWith((message) => updates(message as DropTableSpaceStmt)) as DropTableSpaceStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DropTableSpaceStmt create() => DropTableSpaceStmt._();
  DropTableSpaceStmt createEmptyInstance() => create();
  static $pb.PbList<DropTableSpaceStmt> createRepeated() => $pb.PbList<DropTableSpaceStmt>();
  @$core.pragma('dart2js:noInline')
  static DropTableSpaceStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DropTableSpaceStmt>(create);
  static DropTableSpaceStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get tablespacename => $_getSZ(0);
  @$pb.TagNumber(1)
  set tablespacename($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasTablespacename() => $_has(0);
  @$pb.TagNumber(1)
  void clearTablespacename() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get missingOk => $_getBF(1);
  @$pb.TagNumber(2)
  set missingOk($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasMissingOk() => $_has(1);
  @$pb.TagNumber(2)
  void clearMissingOk() => clearField(2);
}

class AlterTableSpaceOptionsStmt extends $pb.GeneratedMessage {
  factory AlterTableSpaceOptionsStmt({
    $core.String? tablespacename,
    $core.Iterable<Node>? options,
    $core.bool? isReset,
  }) {
    final $result = create();
    if (tablespacename != null) {
      $result.tablespacename = tablespacename;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (isReset != null) {
      $result.isReset = isReset;
    }
    return $result;
  }
  AlterTableSpaceOptionsStmt._() : super();
  factory AlterTableSpaceOptionsStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterTableSpaceOptionsStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterTableSpaceOptionsStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'tablespacename')
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(3, _omitFieldNames ? '' : 'isReset')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterTableSpaceOptionsStmt clone() => AlterTableSpaceOptionsStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterTableSpaceOptionsStmt copyWith(void Function(AlterTableSpaceOptionsStmt) updates) => super.copyWith((message) => updates(message as AlterTableSpaceOptionsStmt)) as AlterTableSpaceOptionsStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterTableSpaceOptionsStmt create() => AlterTableSpaceOptionsStmt._();
  AlterTableSpaceOptionsStmt createEmptyInstance() => create();
  static $pb.PbList<AlterTableSpaceOptionsStmt> createRepeated() => $pb.PbList<AlterTableSpaceOptionsStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterTableSpaceOptionsStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterTableSpaceOptionsStmt>(create);
  static AlterTableSpaceOptionsStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get tablespacename => $_getSZ(0);
  @$pb.TagNumber(1)
  set tablespacename($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasTablespacename() => $_has(0);
  @$pb.TagNumber(1)
  void clearTablespacename() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);

  @$pb.TagNumber(3)
  $core.bool get isReset => $_getBF(2);
  @$pb.TagNumber(3)
  set isReset($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasIsReset() => $_has(2);
  @$pb.TagNumber(3)
  void clearIsReset() => clearField(3);
}

class AlterTableMoveAllStmt extends $pb.GeneratedMessage {
  factory AlterTableMoveAllStmt({
    $core.String? origTablespacename,
    ObjectType? objtype,
    $core.Iterable<Node>? roles,
    $core.String? newTablespacename,
    $core.bool? nowait,
  }) {
    final $result = create();
    if (origTablespacename != null) {
      $result.origTablespacename = origTablespacename;
    }
    if (objtype != null) {
      $result.objtype = objtype;
    }
    if (roles != null) {
      $result.roles.addAll(roles);
    }
    if (newTablespacename != null) {
      $result.newTablespacename = newTablespacename;
    }
    if (nowait != null) {
      $result.nowait = nowait;
    }
    return $result;
  }
  AlterTableMoveAllStmt._() : super();
  factory AlterTableMoveAllStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterTableMoveAllStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterTableMoveAllStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'orig_tablespacename')
    ..e<ObjectType>(2, _omitFieldNames ? '' : 'objtype', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..pc<Node>(3, _omitFieldNames ? '' : 'roles', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(4, _omitFieldNames ? '' : 'new_tablespacename')
    ..aOB(5, _omitFieldNames ? '' : 'nowait')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterTableMoveAllStmt clone() => AlterTableMoveAllStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterTableMoveAllStmt copyWith(void Function(AlterTableMoveAllStmt) updates) => super.copyWith((message) => updates(message as AlterTableMoveAllStmt)) as AlterTableMoveAllStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterTableMoveAllStmt create() => AlterTableMoveAllStmt._();
  AlterTableMoveAllStmt createEmptyInstance() => create();
  static $pb.PbList<AlterTableMoveAllStmt> createRepeated() => $pb.PbList<AlterTableMoveAllStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterTableMoveAllStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterTableMoveAllStmt>(create);
  static AlterTableMoveAllStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get origTablespacename => $_getSZ(0);
  @$pb.TagNumber(1)
  set origTablespacename($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasOrigTablespacename() => $_has(0);
  @$pb.TagNumber(1)
  void clearOrigTablespacename() => clearField(1);

  @$pb.TagNumber(2)
  ObjectType get objtype => $_getN(1);
  @$pb.TagNumber(2)
  set objtype(ObjectType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasObjtype() => $_has(1);
  @$pb.TagNumber(2)
  void clearObjtype() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get roles => $_getList(2);

  @$pb.TagNumber(4)
  $core.String get newTablespacename => $_getSZ(3);
  @$pb.TagNumber(4)
  set newTablespacename($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasNewTablespacename() => $_has(3);
  @$pb.TagNumber(4)
  void clearNewTablespacename() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get nowait => $_getBF(4);
  @$pb.TagNumber(5)
  set nowait($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasNowait() => $_has(4);
  @$pb.TagNumber(5)
  void clearNowait() => clearField(5);
}

class CreateExtensionStmt extends $pb.GeneratedMessage {
  factory CreateExtensionStmt({
    $core.String? extname,
    $core.bool? ifNotExists,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (extname != null) {
      $result.extname = extname;
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreateExtensionStmt._() : super();
  factory CreateExtensionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateExtensionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateExtensionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'extname')
    ..aOB(2, _omitFieldNames ? '' : 'if_not_exists')
    ..pc<Node>(3, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateExtensionStmt clone() => CreateExtensionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateExtensionStmt copyWith(void Function(CreateExtensionStmt) updates) => super.copyWith((message) => updates(message as CreateExtensionStmt)) as CreateExtensionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateExtensionStmt create() => CreateExtensionStmt._();
  CreateExtensionStmt createEmptyInstance() => create();
  static $pb.PbList<CreateExtensionStmt> createRepeated() => $pb.PbList<CreateExtensionStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateExtensionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateExtensionStmt>(create);
  static CreateExtensionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get extname => $_getSZ(0);
  @$pb.TagNumber(1)
  set extname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasExtname() => $_has(0);
  @$pb.TagNumber(1)
  void clearExtname() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get ifNotExists => $_getBF(1);
  @$pb.TagNumber(2)
  set ifNotExists($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasIfNotExists() => $_has(1);
  @$pb.TagNumber(2)
  void clearIfNotExists() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get options => $_getList(2);
}

class AlterExtensionStmt extends $pb.GeneratedMessage {
  factory AlterExtensionStmt({
    $core.String? extname,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (extname != null) {
      $result.extname = extname;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  AlterExtensionStmt._() : super();
  factory AlterExtensionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterExtensionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterExtensionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'extname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterExtensionStmt clone() => AlterExtensionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterExtensionStmt copyWith(void Function(AlterExtensionStmt) updates) => super.copyWith((message) => updates(message as AlterExtensionStmt)) as AlterExtensionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterExtensionStmt create() => AlterExtensionStmt._();
  AlterExtensionStmt createEmptyInstance() => create();
  static $pb.PbList<AlterExtensionStmt> createRepeated() => $pb.PbList<AlterExtensionStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterExtensionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterExtensionStmt>(create);
  static AlterExtensionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get extname => $_getSZ(0);
  @$pb.TagNumber(1)
  set extname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasExtname() => $_has(0);
  @$pb.TagNumber(1)
  void clearExtname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);
}

class AlterExtensionContentsStmt extends $pb.GeneratedMessage {
  factory AlterExtensionContentsStmt({
    $core.String? extname,
    $core.int? action,
    ObjectType? objtype,
    Node? object,
  }) {
    final $result = create();
    if (extname != null) {
      $result.extname = extname;
    }
    if (action != null) {
      $result.action = action;
    }
    if (objtype != null) {
      $result.objtype = objtype;
    }
    if (object != null) {
      $result.object = object;
    }
    return $result;
  }
  AlterExtensionContentsStmt._() : super();
  factory AlterExtensionContentsStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterExtensionContentsStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterExtensionContentsStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'extname')
    ..a<$core.int>(2, _omitFieldNames ? '' : 'action', $pb.PbFieldType.O3)
    ..e<ObjectType>(3, _omitFieldNames ? '' : 'objtype', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'object', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterExtensionContentsStmt clone() => AlterExtensionContentsStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterExtensionContentsStmt copyWith(void Function(AlterExtensionContentsStmt) updates) => super.copyWith((message) => updates(message as AlterExtensionContentsStmt)) as AlterExtensionContentsStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterExtensionContentsStmt create() => AlterExtensionContentsStmt._();
  AlterExtensionContentsStmt createEmptyInstance() => create();
  static $pb.PbList<AlterExtensionContentsStmt> createRepeated() => $pb.PbList<AlterExtensionContentsStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterExtensionContentsStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterExtensionContentsStmt>(create);
  static AlterExtensionContentsStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get extname => $_getSZ(0);
  @$pb.TagNumber(1)
  set extname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasExtname() => $_has(0);
  @$pb.TagNumber(1)
  void clearExtname() => clearField(1);

  @$pb.TagNumber(2)
  $core.int get action => $_getIZ(1);
  @$pb.TagNumber(2)
  set action($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasAction() => $_has(1);
  @$pb.TagNumber(2)
  void clearAction() => clearField(2);

  @$pb.TagNumber(3)
  ObjectType get objtype => $_getN(2);
  @$pb.TagNumber(3)
  set objtype(ObjectType v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasObjtype() => $_has(2);
  @$pb.TagNumber(3)
  void clearObjtype() => clearField(3);

  @$pb.TagNumber(4)
  Node get object => $_getN(3);
  @$pb.TagNumber(4)
  set object(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasObject() => $_has(3);
  @$pb.TagNumber(4)
  void clearObject() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureObject() => $_ensure(3);
}

class CreateFdwStmt extends $pb.GeneratedMessage {
  factory CreateFdwStmt({
    $core.String? fdwname,
    $core.Iterable<Node>? funcOptions,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (fdwname != null) {
      $result.fdwname = fdwname;
    }
    if (funcOptions != null) {
      $result.funcOptions.addAll(funcOptions);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreateFdwStmt._() : super();
  factory CreateFdwStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateFdwStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateFdwStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'fdwname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'func_options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateFdwStmt clone() => CreateFdwStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateFdwStmt copyWith(void Function(CreateFdwStmt) updates) => super.copyWith((message) => updates(message as CreateFdwStmt)) as CreateFdwStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateFdwStmt create() => CreateFdwStmt._();
  CreateFdwStmt createEmptyInstance() => create();
  static $pb.PbList<CreateFdwStmt> createRepeated() => $pb.PbList<CreateFdwStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateFdwStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateFdwStmt>(create);
  static CreateFdwStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get fdwname => $_getSZ(0);
  @$pb.TagNumber(1)
  set fdwname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasFdwname() => $_has(0);
  @$pb.TagNumber(1)
  void clearFdwname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get funcOptions => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get options => $_getList(2);
}

class AlterFdwStmt extends $pb.GeneratedMessage {
  factory AlterFdwStmt({
    $core.String? fdwname,
    $core.Iterable<Node>? funcOptions,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (fdwname != null) {
      $result.fdwname = fdwname;
    }
    if (funcOptions != null) {
      $result.funcOptions.addAll(funcOptions);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  AlterFdwStmt._() : super();
  factory AlterFdwStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterFdwStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterFdwStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'fdwname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'func_options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterFdwStmt clone() => AlterFdwStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterFdwStmt copyWith(void Function(AlterFdwStmt) updates) => super.copyWith((message) => updates(message as AlterFdwStmt)) as AlterFdwStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterFdwStmt create() => AlterFdwStmt._();
  AlterFdwStmt createEmptyInstance() => create();
  static $pb.PbList<AlterFdwStmt> createRepeated() => $pb.PbList<AlterFdwStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterFdwStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterFdwStmt>(create);
  static AlterFdwStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get fdwname => $_getSZ(0);
  @$pb.TagNumber(1)
  set fdwname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasFdwname() => $_has(0);
  @$pb.TagNumber(1)
  void clearFdwname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get funcOptions => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get options => $_getList(2);
}

class CreateForeignServerStmt extends $pb.GeneratedMessage {
  factory CreateForeignServerStmt({
    $core.String? servername,
    $core.String? servertype,
    $core.String? version,
    $core.String? fdwname,
    $core.bool? ifNotExists,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (servername != null) {
      $result.servername = servername;
    }
    if (servertype != null) {
      $result.servertype = servertype;
    }
    if (version != null) {
      $result.version = version;
    }
    if (fdwname != null) {
      $result.fdwname = fdwname;
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreateForeignServerStmt._() : super();
  factory CreateForeignServerStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateForeignServerStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateForeignServerStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'servername')
    ..aOS(2, _omitFieldNames ? '' : 'servertype')
    ..aOS(3, _omitFieldNames ? '' : 'version')
    ..aOS(4, _omitFieldNames ? '' : 'fdwname')
    ..aOB(5, _omitFieldNames ? '' : 'if_not_exists')
    ..pc<Node>(6, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateForeignServerStmt clone() => CreateForeignServerStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateForeignServerStmt copyWith(void Function(CreateForeignServerStmt) updates) => super.copyWith((message) => updates(message as CreateForeignServerStmt)) as CreateForeignServerStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateForeignServerStmt create() => CreateForeignServerStmt._();
  CreateForeignServerStmt createEmptyInstance() => create();
  static $pb.PbList<CreateForeignServerStmt> createRepeated() => $pb.PbList<CreateForeignServerStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateForeignServerStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateForeignServerStmt>(create);
  static CreateForeignServerStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get servername => $_getSZ(0);
  @$pb.TagNumber(1)
  set servername($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasServername() => $_has(0);
  @$pb.TagNumber(1)
  void clearServername() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get servertype => $_getSZ(1);
  @$pb.TagNumber(2)
  set servertype($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasServertype() => $_has(1);
  @$pb.TagNumber(2)
  void clearServertype() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get version => $_getSZ(2);
  @$pb.TagNumber(3)
  set version($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasVersion() => $_has(2);
  @$pb.TagNumber(3)
  void clearVersion() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get fdwname => $_getSZ(3);
  @$pb.TagNumber(4)
  set fdwname($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasFdwname() => $_has(3);
  @$pb.TagNumber(4)
  void clearFdwname() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get ifNotExists => $_getBF(4);
  @$pb.TagNumber(5)
  set ifNotExists($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasIfNotExists() => $_has(4);
  @$pb.TagNumber(5)
  void clearIfNotExists() => clearField(5);

  @$pb.TagNumber(6)
  $core.List<Node> get options => $_getList(5);
}

class AlterForeignServerStmt extends $pb.GeneratedMessage {
  factory AlterForeignServerStmt({
    $core.String? servername,
    $core.String? version,
    $core.Iterable<Node>? options,
    $core.bool? hasVersion_4,
  }) {
    final $result = create();
    if (servername != null) {
      $result.servername = servername;
    }
    if (version != null) {
      $result.version = version;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (hasVersion_4 != null) {
      $result.hasVersion_4 = hasVersion_4;
    }
    return $result;
  }
  AlterForeignServerStmt._() : super();
  factory AlterForeignServerStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterForeignServerStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterForeignServerStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'servername')
    ..aOS(2, _omitFieldNames ? '' : 'version')
    ..pc<Node>(3, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(4, _omitFieldNames ? '' : 'has_version')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterForeignServerStmt clone() => AlterForeignServerStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterForeignServerStmt copyWith(void Function(AlterForeignServerStmt) updates) => super.copyWith((message) => updates(message as AlterForeignServerStmt)) as AlterForeignServerStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterForeignServerStmt create() => AlterForeignServerStmt._();
  AlterForeignServerStmt createEmptyInstance() => create();
  static $pb.PbList<AlterForeignServerStmt> createRepeated() => $pb.PbList<AlterForeignServerStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterForeignServerStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterForeignServerStmt>(create);
  static AlterForeignServerStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get servername => $_getSZ(0);
  @$pb.TagNumber(1)
  set servername($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasServername() => $_has(0);
  @$pb.TagNumber(1)
  void clearServername() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get version => $_getSZ(1);
  @$pb.TagNumber(2)
  set version($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasVersion() => $_has(1);
  @$pb.TagNumber(2)
  void clearVersion() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get options => $_getList(2);

  @$pb.TagNumber(4)
  $core.bool get hasVersion_4 => $_getBF(3);
  @$pb.TagNumber(4)
  set hasVersion_4($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasHasVersion_4() => $_has(3);
  @$pb.TagNumber(4)
  void clearHasVersion_4() => clearField(4);
}

class CreateForeignTableStmt extends $pb.GeneratedMessage {
  factory CreateForeignTableStmt({
    CreateStmt? baseStmt,
    $core.String? servername,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (baseStmt != null) {
      $result.baseStmt = baseStmt;
    }
    if (servername != null) {
      $result.servername = servername;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreateForeignTableStmt._() : super();
  factory CreateForeignTableStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateForeignTableStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateForeignTableStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<CreateStmt>(1, _omitFieldNames ? '' : 'base', protoName: 'base_stmt', subBuilder: CreateStmt.create)
    ..aOS(2, _omitFieldNames ? '' : 'servername')
    ..pc<Node>(3, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateForeignTableStmt clone() => CreateForeignTableStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateForeignTableStmt copyWith(void Function(CreateForeignTableStmt) updates) => super.copyWith((message) => updates(message as CreateForeignTableStmt)) as CreateForeignTableStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateForeignTableStmt create() => CreateForeignTableStmt._();
  CreateForeignTableStmt createEmptyInstance() => create();
  static $pb.PbList<CreateForeignTableStmt> createRepeated() => $pb.PbList<CreateForeignTableStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateForeignTableStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateForeignTableStmt>(create);
  static CreateForeignTableStmt? _defaultInstance;

  @$pb.TagNumber(1)
  CreateStmt get baseStmt => $_getN(0);
  @$pb.TagNumber(1)
  set baseStmt(CreateStmt v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasBaseStmt() => $_has(0);
  @$pb.TagNumber(1)
  void clearBaseStmt() => clearField(1);
  @$pb.TagNumber(1)
  CreateStmt ensureBaseStmt() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.String get servername => $_getSZ(1);
  @$pb.TagNumber(2)
  set servername($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasServername() => $_has(1);
  @$pb.TagNumber(2)
  void clearServername() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get options => $_getList(2);
}

class CreateUserMappingStmt extends $pb.GeneratedMessage {
  factory CreateUserMappingStmt({
    RoleSpec? user,
    $core.String? servername,
    $core.bool? ifNotExists,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (user != null) {
      $result.user = user;
    }
    if (servername != null) {
      $result.servername = servername;
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreateUserMappingStmt._() : super();
  factory CreateUserMappingStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateUserMappingStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateUserMappingStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RoleSpec>(1, _omitFieldNames ? '' : 'user', subBuilder: RoleSpec.create)
    ..aOS(2, _omitFieldNames ? '' : 'servername')
    ..aOB(3, _omitFieldNames ? '' : 'if_not_exists')
    ..pc<Node>(4, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateUserMappingStmt clone() => CreateUserMappingStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateUserMappingStmt copyWith(void Function(CreateUserMappingStmt) updates) => super.copyWith((message) => updates(message as CreateUserMappingStmt)) as CreateUserMappingStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateUserMappingStmt create() => CreateUserMappingStmt._();
  CreateUserMappingStmt createEmptyInstance() => create();
  static $pb.PbList<CreateUserMappingStmt> createRepeated() => $pb.PbList<CreateUserMappingStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateUserMappingStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateUserMappingStmt>(create);
  static CreateUserMappingStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RoleSpec get user => $_getN(0);
  @$pb.TagNumber(1)
  set user(RoleSpec v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasUser() => $_has(0);
  @$pb.TagNumber(1)
  void clearUser() => clearField(1);
  @$pb.TagNumber(1)
  RoleSpec ensureUser() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.String get servername => $_getSZ(1);
  @$pb.TagNumber(2)
  set servername($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasServername() => $_has(1);
  @$pb.TagNumber(2)
  void clearServername() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get ifNotExists => $_getBF(2);
  @$pb.TagNumber(3)
  set ifNotExists($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasIfNotExists() => $_has(2);
  @$pb.TagNumber(3)
  void clearIfNotExists() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get options => $_getList(3);
}

class AlterUserMappingStmt extends $pb.GeneratedMessage {
  factory AlterUserMappingStmt({
    RoleSpec? user,
    $core.String? servername,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (user != null) {
      $result.user = user;
    }
    if (servername != null) {
      $result.servername = servername;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  AlterUserMappingStmt._() : super();
  factory AlterUserMappingStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterUserMappingStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterUserMappingStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RoleSpec>(1, _omitFieldNames ? '' : 'user', subBuilder: RoleSpec.create)
    ..aOS(2, _omitFieldNames ? '' : 'servername')
    ..pc<Node>(3, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterUserMappingStmt clone() => AlterUserMappingStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterUserMappingStmt copyWith(void Function(AlterUserMappingStmt) updates) => super.copyWith((message) => updates(message as AlterUserMappingStmt)) as AlterUserMappingStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterUserMappingStmt create() => AlterUserMappingStmt._();
  AlterUserMappingStmt createEmptyInstance() => create();
  static $pb.PbList<AlterUserMappingStmt> createRepeated() => $pb.PbList<AlterUserMappingStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterUserMappingStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterUserMappingStmt>(create);
  static AlterUserMappingStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RoleSpec get user => $_getN(0);
  @$pb.TagNumber(1)
  set user(RoleSpec v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasUser() => $_has(0);
  @$pb.TagNumber(1)
  void clearUser() => clearField(1);
  @$pb.TagNumber(1)
  RoleSpec ensureUser() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.String get servername => $_getSZ(1);
  @$pb.TagNumber(2)
  set servername($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasServername() => $_has(1);
  @$pb.TagNumber(2)
  void clearServername() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get options => $_getList(2);
}

class DropUserMappingStmt extends $pb.GeneratedMessage {
  factory DropUserMappingStmt({
    RoleSpec? user,
    $core.String? servername,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (user != null) {
      $result.user = user;
    }
    if (servername != null) {
      $result.servername = servername;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  DropUserMappingStmt._() : super();
  factory DropUserMappingStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DropUserMappingStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DropUserMappingStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RoleSpec>(1, _omitFieldNames ? '' : 'user', subBuilder: RoleSpec.create)
    ..aOS(2, _omitFieldNames ? '' : 'servername')
    ..aOB(3, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DropUserMappingStmt clone() => DropUserMappingStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DropUserMappingStmt copyWith(void Function(DropUserMappingStmt) updates) => super.copyWith((message) => updates(message as DropUserMappingStmt)) as DropUserMappingStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DropUserMappingStmt create() => DropUserMappingStmt._();
  DropUserMappingStmt createEmptyInstance() => create();
  static $pb.PbList<DropUserMappingStmt> createRepeated() => $pb.PbList<DropUserMappingStmt>();
  @$core.pragma('dart2js:noInline')
  static DropUserMappingStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DropUserMappingStmt>(create);
  static DropUserMappingStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RoleSpec get user => $_getN(0);
  @$pb.TagNumber(1)
  set user(RoleSpec v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasUser() => $_has(0);
  @$pb.TagNumber(1)
  void clearUser() => clearField(1);
  @$pb.TagNumber(1)
  RoleSpec ensureUser() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.String get servername => $_getSZ(1);
  @$pb.TagNumber(2)
  set servername($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasServername() => $_has(1);
  @$pb.TagNumber(2)
  void clearServername() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get missingOk => $_getBF(2);
  @$pb.TagNumber(3)
  set missingOk($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasMissingOk() => $_has(2);
  @$pb.TagNumber(3)
  void clearMissingOk() => clearField(3);
}

class ImportForeignSchemaStmt extends $pb.GeneratedMessage {
  factory ImportForeignSchemaStmt({
    $core.String? serverName,
    $core.String? remoteSchema,
    $core.String? localSchema,
    ImportForeignSchemaType? listType,
    $core.Iterable<Node>? tableList,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (serverName != null) {
      $result.serverName = serverName;
    }
    if (remoteSchema != null) {
      $result.remoteSchema = remoteSchema;
    }
    if (localSchema != null) {
      $result.localSchema = localSchema;
    }
    if (listType != null) {
      $result.listType = listType;
    }
    if (tableList != null) {
      $result.tableList.addAll(tableList);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  ImportForeignSchemaStmt._() : super();
  factory ImportForeignSchemaStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ImportForeignSchemaStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ImportForeignSchemaStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'server_name')
    ..aOS(2, _omitFieldNames ? '' : 'remote_schema')
    ..aOS(3, _omitFieldNames ? '' : 'local_schema')
    ..e<ImportForeignSchemaType>(4, _omitFieldNames ? '' : 'list_type', $pb.PbFieldType.OE, defaultOrMaker: ImportForeignSchemaType.IMPORT_FOREIGN_SCHEMA_TYPE_UNDEFINED, valueOf: ImportForeignSchemaType.valueOf, enumValues: ImportForeignSchemaType.values)
    ..pc<Node>(5, _omitFieldNames ? '' : 'table_list', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ImportForeignSchemaStmt clone() => ImportForeignSchemaStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ImportForeignSchemaStmt copyWith(void Function(ImportForeignSchemaStmt) updates) => super.copyWith((message) => updates(message as ImportForeignSchemaStmt)) as ImportForeignSchemaStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ImportForeignSchemaStmt create() => ImportForeignSchemaStmt._();
  ImportForeignSchemaStmt createEmptyInstance() => create();
  static $pb.PbList<ImportForeignSchemaStmt> createRepeated() => $pb.PbList<ImportForeignSchemaStmt>();
  @$core.pragma('dart2js:noInline')
  static ImportForeignSchemaStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ImportForeignSchemaStmt>(create);
  static ImportForeignSchemaStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get serverName => $_getSZ(0);
  @$pb.TagNumber(1)
  set serverName($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasServerName() => $_has(0);
  @$pb.TagNumber(1)
  void clearServerName() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get remoteSchema => $_getSZ(1);
  @$pb.TagNumber(2)
  set remoteSchema($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRemoteSchema() => $_has(1);
  @$pb.TagNumber(2)
  void clearRemoteSchema() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get localSchema => $_getSZ(2);
  @$pb.TagNumber(3)
  set localSchema($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLocalSchema() => $_has(2);
  @$pb.TagNumber(3)
  void clearLocalSchema() => clearField(3);

  @$pb.TagNumber(4)
  ImportForeignSchemaType get listType => $_getN(3);
  @$pb.TagNumber(4)
  set listType(ImportForeignSchemaType v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasListType() => $_has(3);
  @$pb.TagNumber(4)
  void clearListType() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get tableList => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get options => $_getList(5);
}

class CreatePolicyStmt extends $pb.GeneratedMessage {
  factory CreatePolicyStmt({
    $core.String? policyName,
    RangeVar? table,
    $core.String? cmdName,
    $core.bool? permissive,
    $core.Iterable<Node>? roles,
    Node? qual,
    Node? withCheck,
  }) {
    final $result = create();
    if (policyName != null) {
      $result.policyName = policyName;
    }
    if (table != null) {
      $result.table = table;
    }
    if (cmdName != null) {
      $result.cmdName = cmdName;
    }
    if (permissive != null) {
      $result.permissive = permissive;
    }
    if (roles != null) {
      $result.roles.addAll(roles);
    }
    if (qual != null) {
      $result.qual = qual;
    }
    if (withCheck != null) {
      $result.withCheck = withCheck;
    }
    return $result;
  }
  CreatePolicyStmt._() : super();
  factory CreatePolicyStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreatePolicyStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreatePolicyStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'policy_name')
    ..aOM<RangeVar>(2, _omitFieldNames ? '' : 'table', subBuilder: RangeVar.create)
    ..aOS(3, _omitFieldNames ? '' : 'cmd_name')
    ..aOB(4, _omitFieldNames ? '' : 'permissive')
    ..pc<Node>(5, _omitFieldNames ? '' : 'roles', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(6, _omitFieldNames ? '' : 'qual', subBuilder: Node.create)
    ..aOM<Node>(7, _omitFieldNames ? '' : 'with_check', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreatePolicyStmt clone() => CreatePolicyStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreatePolicyStmt copyWith(void Function(CreatePolicyStmt) updates) => super.copyWith((message) => updates(message as CreatePolicyStmt)) as CreatePolicyStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreatePolicyStmt create() => CreatePolicyStmt._();
  CreatePolicyStmt createEmptyInstance() => create();
  static $pb.PbList<CreatePolicyStmt> createRepeated() => $pb.PbList<CreatePolicyStmt>();
  @$core.pragma('dart2js:noInline')
  static CreatePolicyStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreatePolicyStmt>(create);
  static CreatePolicyStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get policyName => $_getSZ(0);
  @$pb.TagNumber(1)
  set policyName($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasPolicyName() => $_has(0);
  @$pb.TagNumber(1)
  void clearPolicyName() => clearField(1);

  @$pb.TagNumber(2)
  RangeVar get table => $_getN(1);
  @$pb.TagNumber(2)
  set table(RangeVar v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTable() => $_has(1);
  @$pb.TagNumber(2)
  void clearTable() => clearField(2);
  @$pb.TagNumber(2)
  RangeVar ensureTable() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get cmdName => $_getSZ(2);
  @$pb.TagNumber(3)
  set cmdName($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasCmdName() => $_has(2);
  @$pb.TagNumber(3)
  void clearCmdName() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get permissive => $_getBF(3);
  @$pb.TagNumber(4)
  set permissive($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasPermissive() => $_has(3);
  @$pb.TagNumber(4)
  void clearPermissive() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get roles => $_getList(4);

  @$pb.TagNumber(6)
  Node get qual => $_getN(5);
  @$pb.TagNumber(6)
  set qual(Node v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasQual() => $_has(5);
  @$pb.TagNumber(6)
  void clearQual() => clearField(6);
  @$pb.TagNumber(6)
  Node ensureQual() => $_ensure(5);

  @$pb.TagNumber(7)
  Node get withCheck => $_getN(6);
  @$pb.TagNumber(7)
  set withCheck(Node v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasWithCheck() => $_has(6);
  @$pb.TagNumber(7)
  void clearWithCheck() => clearField(7);
  @$pb.TagNumber(7)
  Node ensureWithCheck() => $_ensure(6);
}

class AlterPolicyStmt extends $pb.GeneratedMessage {
  factory AlterPolicyStmt({
    $core.String? policyName,
    RangeVar? table,
    $core.Iterable<Node>? roles,
    Node? qual,
    Node? withCheck,
  }) {
    final $result = create();
    if (policyName != null) {
      $result.policyName = policyName;
    }
    if (table != null) {
      $result.table = table;
    }
    if (roles != null) {
      $result.roles.addAll(roles);
    }
    if (qual != null) {
      $result.qual = qual;
    }
    if (withCheck != null) {
      $result.withCheck = withCheck;
    }
    return $result;
  }
  AlterPolicyStmt._() : super();
  factory AlterPolicyStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterPolicyStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterPolicyStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'policy_name')
    ..aOM<RangeVar>(2, _omitFieldNames ? '' : 'table', subBuilder: RangeVar.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'roles', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'qual', subBuilder: Node.create)
    ..aOM<Node>(5, _omitFieldNames ? '' : 'with_check', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterPolicyStmt clone() => AlterPolicyStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterPolicyStmt copyWith(void Function(AlterPolicyStmt) updates) => super.copyWith((message) => updates(message as AlterPolicyStmt)) as AlterPolicyStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterPolicyStmt create() => AlterPolicyStmt._();
  AlterPolicyStmt createEmptyInstance() => create();
  static $pb.PbList<AlterPolicyStmt> createRepeated() => $pb.PbList<AlterPolicyStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterPolicyStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterPolicyStmt>(create);
  static AlterPolicyStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get policyName => $_getSZ(0);
  @$pb.TagNumber(1)
  set policyName($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasPolicyName() => $_has(0);
  @$pb.TagNumber(1)
  void clearPolicyName() => clearField(1);

  @$pb.TagNumber(2)
  RangeVar get table => $_getN(1);
  @$pb.TagNumber(2)
  set table(RangeVar v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTable() => $_has(1);
  @$pb.TagNumber(2)
  void clearTable() => clearField(2);
  @$pb.TagNumber(2)
  RangeVar ensureTable() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get roles => $_getList(2);

  @$pb.TagNumber(4)
  Node get qual => $_getN(3);
  @$pb.TagNumber(4)
  set qual(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasQual() => $_has(3);
  @$pb.TagNumber(4)
  void clearQual() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureQual() => $_ensure(3);

  @$pb.TagNumber(5)
  Node get withCheck => $_getN(4);
  @$pb.TagNumber(5)
  set withCheck(Node v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasWithCheck() => $_has(4);
  @$pb.TagNumber(5)
  void clearWithCheck() => clearField(5);
  @$pb.TagNumber(5)
  Node ensureWithCheck() => $_ensure(4);
}

class CreateAmStmt extends $pb.GeneratedMessage {
  factory CreateAmStmt({
    $core.String? amname,
    $core.Iterable<Node>? handlerName,
    $core.String? amtype,
  }) {
    final $result = create();
    if (amname != null) {
      $result.amname = amname;
    }
    if (handlerName != null) {
      $result.handlerName.addAll(handlerName);
    }
    if (amtype != null) {
      $result.amtype = amtype;
    }
    return $result;
  }
  CreateAmStmt._() : super();
  factory CreateAmStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateAmStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateAmStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'amname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'handler_name', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'amtype')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateAmStmt clone() => CreateAmStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateAmStmt copyWith(void Function(CreateAmStmt) updates) => super.copyWith((message) => updates(message as CreateAmStmt)) as CreateAmStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateAmStmt create() => CreateAmStmt._();
  CreateAmStmt createEmptyInstance() => create();
  static $pb.PbList<CreateAmStmt> createRepeated() => $pb.PbList<CreateAmStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateAmStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateAmStmt>(create);
  static CreateAmStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get amname => $_getSZ(0);
  @$pb.TagNumber(1)
  set amname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasAmname() => $_has(0);
  @$pb.TagNumber(1)
  void clearAmname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get handlerName => $_getList(1);

  @$pb.TagNumber(3)
  $core.String get amtype => $_getSZ(2);
  @$pb.TagNumber(3)
  set amtype($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAmtype() => $_has(2);
  @$pb.TagNumber(3)
  void clearAmtype() => clearField(3);
}

class CreateTrigStmt extends $pb.GeneratedMessage {
  factory CreateTrigStmt({
    $core.bool? replace,
    $core.bool? isconstraint,
    $core.String? trigname,
    RangeVar? relation,
    $core.Iterable<Node>? funcname,
    $core.Iterable<Node>? args,
    $core.bool? row,
    $core.int? timing,
    $core.int? events,
    $core.Iterable<Node>? columns,
    Node? whenClause,
    $core.Iterable<Node>? transitionRels,
    $core.bool? deferrable,
    $core.bool? initdeferred,
    RangeVar? constrrel,
  }) {
    final $result = create();
    if (replace != null) {
      $result.replace = replace;
    }
    if (isconstraint != null) {
      $result.isconstraint = isconstraint;
    }
    if (trigname != null) {
      $result.trigname = trigname;
    }
    if (relation != null) {
      $result.relation = relation;
    }
    if (funcname != null) {
      $result.funcname.addAll(funcname);
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (row != null) {
      $result.row = row;
    }
    if (timing != null) {
      $result.timing = timing;
    }
    if (events != null) {
      $result.events = events;
    }
    if (columns != null) {
      $result.columns.addAll(columns);
    }
    if (whenClause != null) {
      $result.whenClause = whenClause;
    }
    if (transitionRels != null) {
      $result.transitionRels.addAll(transitionRels);
    }
    if (deferrable != null) {
      $result.deferrable = deferrable;
    }
    if (initdeferred != null) {
      $result.initdeferred = initdeferred;
    }
    if (constrrel != null) {
      $result.constrrel = constrrel;
    }
    return $result;
  }
  CreateTrigStmt._() : super();
  factory CreateTrigStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateTrigStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateTrigStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'replace')
    ..aOB(2, _omitFieldNames ? '' : 'isconstraint')
    ..aOS(3, _omitFieldNames ? '' : 'trigname')
    ..aOM<RangeVar>(4, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'funcname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(7, _omitFieldNames ? '' : 'row')
    ..a<$core.int>(8, _omitFieldNames ? '' : 'timing', $pb.PbFieldType.O3)
    ..a<$core.int>(9, _omitFieldNames ? '' : 'events', $pb.PbFieldType.O3)
    ..pc<Node>(10, _omitFieldNames ? '' : 'columns', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(11, _omitFieldNames ? '' : 'whenClause', subBuilder: Node.create)
    ..pc<Node>(12, _omitFieldNames ? '' : 'transitionRels', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(13, _omitFieldNames ? '' : 'deferrable')
    ..aOB(14, _omitFieldNames ? '' : 'initdeferred')
    ..aOM<RangeVar>(15, _omitFieldNames ? '' : 'constrrel', subBuilder: RangeVar.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateTrigStmt clone() => CreateTrigStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateTrigStmt copyWith(void Function(CreateTrigStmt) updates) => super.copyWith((message) => updates(message as CreateTrigStmt)) as CreateTrigStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateTrigStmt create() => CreateTrigStmt._();
  CreateTrigStmt createEmptyInstance() => create();
  static $pb.PbList<CreateTrigStmt> createRepeated() => $pb.PbList<CreateTrigStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateTrigStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateTrigStmt>(create);
  static CreateTrigStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get replace => $_getBF(0);
  @$pb.TagNumber(1)
  set replace($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasReplace() => $_has(0);
  @$pb.TagNumber(1)
  void clearReplace() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get isconstraint => $_getBF(1);
  @$pb.TagNumber(2)
  set isconstraint($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasIsconstraint() => $_has(1);
  @$pb.TagNumber(2)
  void clearIsconstraint() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get trigname => $_getSZ(2);
  @$pb.TagNumber(3)
  set trigname($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasTrigname() => $_has(2);
  @$pb.TagNumber(3)
  void clearTrigname() => clearField(3);

  @$pb.TagNumber(4)
  RangeVar get relation => $_getN(3);
  @$pb.TagNumber(4)
  set relation(RangeVar v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasRelation() => $_has(3);
  @$pb.TagNumber(4)
  void clearRelation() => clearField(4);
  @$pb.TagNumber(4)
  RangeVar ensureRelation() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get funcname => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get args => $_getList(5);

  @$pb.TagNumber(7)
  $core.bool get row => $_getBF(6);
  @$pb.TagNumber(7)
  set row($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasRow() => $_has(6);
  @$pb.TagNumber(7)
  void clearRow() => clearField(7);

  @$pb.TagNumber(8)
  $core.int get timing => $_getIZ(7);
  @$pb.TagNumber(8)
  set timing($core.int v) { $_setSignedInt32(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasTiming() => $_has(7);
  @$pb.TagNumber(8)
  void clearTiming() => clearField(8);

  @$pb.TagNumber(9)
  $core.int get events => $_getIZ(8);
  @$pb.TagNumber(9)
  set events($core.int v) { $_setSignedInt32(8, v); }
  @$pb.TagNumber(9)
  $core.bool hasEvents() => $_has(8);
  @$pb.TagNumber(9)
  void clearEvents() => clearField(9);

  @$pb.TagNumber(10)
  $core.List<Node> get columns => $_getList(9);

  @$pb.TagNumber(11)
  Node get whenClause => $_getN(10);
  @$pb.TagNumber(11)
  set whenClause(Node v) { setField(11, v); }
  @$pb.TagNumber(11)
  $core.bool hasWhenClause() => $_has(10);
  @$pb.TagNumber(11)
  void clearWhenClause() => clearField(11);
  @$pb.TagNumber(11)
  Node ensureWhenClause() => $_ensure(10);

  @$pb.TagNumber(12)
  $core.List<Node> get transitionRels => $_getList(11);

  @$pb.TagNumber(13)
  $core.bool get deferrable => $_getBF(12);
  @$pb.TagNumber(13)
  set deferrable($core.bool v) { $_setBool(12, v); }
  @$pb.TagNumber(13)
  $core.bool hasDeferrable() => $_has(12);
  @$pb.TagNumber(13)
  void clearDeferrable() => clearField(13);

  @$pb.TagNumber(14)
  $core.bool get initdeferred => $_getBF(13);
  @$pb.TagNumber(14)
  set initdeferred($core.bool v) { $_setBool(13, v); }
  @$pb.TagNumber(14)
  $core.bool hasInitdeferred() => $_has(13);
  @$pb.TagNumber(14)
  void clearInitdeferred() => clearField(14);

  @$pb.TagNumber(15)
  RangeVar get constrrel => $_getN(14);
  @$pb.TagNumber(15)
  set constrrel(RangeVar v) { setField(15, v); }
  @$pb.TagNumber(15)
  $core.bool hasConstrrel() => $_has(14);
  @$pb.TagNumber(15)
  void clearConstrrel() => clearField(15);
  @$pb.TagNumber(15)
  RangeVar ensureConstrrel() => $_ensure(14);
}

class CreateEventTrigStmt extends $pb.GeneratedMessage {
  factory CreateEventTrigStmt({
    $core.String? trigname,
    $core.String? eventname,
    $core.Iterable<Node>? whenclause,
    $core.Iterable<Node>? funcname,
  }) {
    final $result = create();
    if (trigname != null) {
      $result.trigname = trigname;
    }
    if (eventname != null) {
      $result.eventname = eventname;
    }
    if (whenclause != null) {
      $result.whenclause.addAll(whenclause);
    }
    if (funcname != null) {
      $result.funcname.addAll(funcname);
    }
    return $result;
  }
  CreateEventTrigStmt._() : super();
  factory CreateEventTrigStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateEventTrigStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateEventTrigStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'trigname')
    ..aOS(2, _omitFieldNames ? '' : 'eventname')
    ..pc<Node>(3, _omitFieldNames ? '' : 'whenclause', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'funcname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateEventTrigStmt clone() => CreateEventTrigStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateEventTrigStmt copyWith(void Function(CreateEventTrigStmt) updates) => super.copyWith((message) => updates(message as CreateEventTrigStmt)) as CreateEventTrigStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateEventTrigStmt create() => CreateEventTrigStmt._();
  CreateEventTrigStmt createEmptyInstance() => create();
  static $pb.PbList<CreateEventTrigStmt> createRepeated() => $pb.PbList<CreateEventTrigStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateEventTrigStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateEventTrigStmt>(create);
  static CreateEventTrigStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get trigname => $_getSZ(0);
  @$pb.TagNumber(1)
  set trigname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasTrigname() => $_has(0);
  @$pb.TagNumber(1)
  void clearTrigname() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get eventname => $_getSZ(1);
  @$pb.TagNumber(2)
  set eventname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasEventname() => $_has(1);
  @$pb.TagNumber(2)
  void clearEventname() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get whenclause => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get funcname => $_getList(3);
}

class AlterEventTrigStmt extends $pb.GeneratedMessage {
  factory AlterEventTrigStmt({
    $core.String? trigname,
    $core.String? tgenabled,
  }) {
    final $result = create();
    if (trigname != null) {
      $result.trigname = trigname;
    }
    if (tgenabled != null) {
      $result.tgenabled = tgenabled;
    }
    return $result;
  }
  AlterEventTrigStmt._() : super();
  factory AlterEventTrigStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterEventTrigStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterEventTrigStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'trigname')
    ..aOS(2, _omitFieldNames ? '' : 'tgenabled')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterEventTrigStmt clone() => AlterEventTrigStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterEventTrigStmt copyWith(void Function(AlterEventTrigStmt) updates) => super.copyWith((message) => updates(message as AlterEventTrigStmt)) as AlterEventTrigStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterEventTrigStmt create() => AlterEventTrigStmt._();
  AlterEventTrigStmt createEmptyInstance() => create();
  static $pb.PbList<AlterEventTrigStmt> createRepeated() => $pb.PbList<AlterEventTrigStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterEventTrigStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterEventTrigStmt>(create);
  static AlterEventTrigStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get trigname => $_getSZ(0);
  @$pb.TagNumber(1)
  set trigname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasTrigname() => $_has(0);
  @$pb.TagNumber(1)
  void clearTrigname() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get tgenabled => $_getSZ(1);
  @$pb.TagNumber(2)
  set tgenabled($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasTgenabled() => $_has(1);
  @$pb.TagNumber(2)
  void clearTgenabled() => clearField(2);
}

class CreatePLangStmt extends $pb.GeneratedMessage {
  factory CreatePLangStmt({
    $core.bool? replace,
    $core.String? plname,
    $core.Iterable<Node>? plhandler,
    $core.Iterable<Node>? plinline,
    $core.Iterable<Node>? plvalidator,
    $core.bool? pltrusted,
  }) {
    final $result = create();
    if (replace != null) {
      $result.replace = replace;
    }
    if (plname != null) {
      $result.plname = plname;
    }
    if (plhandler != null) {
      $result.plhandler.addAll(plhandler);
    }
    if (plinline != null) {
      $result.plinline.addAll(plinline);
    }
    if (plvalidator != null) {
      $result.plvalidator.addAll(plvalidator);
    }
    if (pltrusted != null) {
      $result.pltrusted = pltrusted;
    }
    return $result;
  }
  CreatePLangStmt._() : super();
  factory CreatePLangStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreatePLangStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreatePLangStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'replace')
    ..aOS(2, _omitFieldNames ? '' : 'plname')
    ..pc<Node>(3, _omitFieldNames ? '' : 'plhandler', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'plinline', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'plvalidator', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(6, _omitFieldNames ? '' : 'pltrusted')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreatePLangStmt clone() => CreatePLangStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreatePLangStmt copyWith(void Function(CreatePLangStmt) updates) => super.copyWith((message) => updates(message as CreatePLangStmt)) as CreatePLangStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreatePLangStmt create() => CreatePLangStmt._();
  CreatePLangStmt createEmptyInstance() => create();
  static $pb.PbList<CreatePLangStmt> createRepeated() => $pb.PbList<CreatePLangStmt>();
  @$core.pragma('dart2js:noInline')
  static CreatePLangStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreatePLangStmt>(create);
  static CreatePLangStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get replace => $_getBF(0);
  @$pb.TagNumber(1)
  set replace($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasReplace() => $_has(0);
  @$pb.TagNumber(1)
  void clearReplace() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get plname => $_getSZ(1);
  @$pb.TagNumber(2)
  set plname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasPlname() => $_has(1);
  @$pb.TagNumber(2)
  void clearPlname() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get plhandler => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get plinline => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get plvalidator => $_getList(4);

  @$pb.TagNumber(6)
  $core.bool get pltrusted => $_getBF(5);
  @$pb.TagNumber(6)
  set pltrusted($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasPltrusted() => $_has(5);
  @$pb.TagNumber(6)
  void clearPltrusted() => clearField(6);
}

class CreateRoleStmt extends $pb.GeneratedMessage {
  factory CreateRoleStmt({
    RoleStmtType? stmtType,
    $core.String? role,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (stmtType != null) {
      $result.stmtType = stmtType;
    }
    if (role != null) {
      $result.role = role;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreateRoleStmt._() : super();
  factory CreateRoleStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateRoleStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateRoleStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<RoleStmtType>(1, _omitFieldNames ? '' : 'stmt_type', $pb.PbFieldType.OE, defaultOrMaker: RoleStmtType.ROLE_STMT_TYPE_UNDEFINED, valueOf: RoleStmtType.valueOf, enumValues: RoleStmtType.values)
    ..aOS(2, _omitFieldNames ? '' : 'role')
    ..pc<Node>(3, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateRoleStmt clone() => CreateRoleStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateRoleStmt copyWith(void Function(CreateRoleStmt) updates) => super.copyWith((message) => updates(message as CreateRoleStmt)) as CreateRoleStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateRoleStmt create() => CreateRoleStmt._();
  CreateRoleStmt createEmptyInstance() => create();
  static $pb.PbList<CreateRoleStmt> createRepeated() => $pb.PbList<CreateRoleStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateRoleStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateRoleStmt>(create);
  static CreateRoleStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RoleStmtType get stmtType => $_getN(0);
  @$pb.TagNumber(1)
  set stmtType(RoleStmtType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasStmtType() => $_has(0);
  @$pb.TagNumber(1)
  void clearStmtType() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get role => $_getSZ(1);
  @$pb.TagNumber(2)
  set role($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRole() => $_has(1);
  @$pb.TagNumber(2)
  void clearRole() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get options => $_getList(2);
}

class AlterRoleStmt extends $pb.GeneratedMessage {
  factory AlterRoleStmt({
    RoleSpec? role,
    $core.Iterable<Node>? options,
    $core.int? action,
  }) {
    final $result = create();
    if (role != null) {
      $result.role = role;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (action != null) {
      $result.action = action;
    }
    return $result;
  }
  AlterRoleStmt._() : super();
  factory AlterRoleStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterRoleStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterRoleStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RoleSpec>(1, _omitFieldNames ? '' : 'role', subBuilder: RoleSpec.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'action', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterRoleStmt clone() => AlterRoleStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterRoleStmt copyWith(void Function(AlterRoleStmt) updates) => super.copyWith((message) => updates(message as AlterRoleStmt)) as AlterRoleStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterRoleStmt create() => AlterRoleStmt._();
  AlterRoleStmt createEmptyInstance() => create();
  static $pb.PbList<AlterRoleStmt> createRepeated() => $pb.PbList<AlterRoleStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterRoleStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterRoleStmt>(create);
  static AlterRoleStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RoleSpec get role => $_getN(0);
  @$pb.TagNumber(1)
  set role(RoleSpec v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRole() => $_has(0);
  @$pb.TagNumber(1)
  void clearRole() => clearField(1);
  @$pb.TagNumber(1)
  RoleSpec ensureRole() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);

  @$pb.TagNumber(3)
  $core.int get action => $_getIZ(2);
  @$pb.TagNumber(3)
  set action($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAction() => $_has(2);
  @$pb.TagNumber(3)
  void clearAction() => clearField(3);
}

class AlterRoleSetStmt extends $pb.GeneratedMessage {
  factory AlterRoleSetStmt({
    RoleSpec? role,
    $core.String? database,
    VariableSetStmt? setstmt,
  }) {
    final $result = create();
    if (role != null) {
      $result.role = role;
    }
    if (database != null) {
      $result.database = database;
    }
    if (setstmt != null) {
      $result.setstmt = setstmt;
    }
    return $result;
  }
  AlterRoleSetStmt._() : super();
  factory AlterRoleSetStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterRoleSetStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterRoleSetStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RoleSpec>(1, _omitFieldNames ? '' : 'role', subBuilder: RoleSpec.create)
    ..aOS(2, _omitFieldNames ? '' : 'database')
    ..aOM<VariableSetStmt>(3, _omitFieldNames ? '' : 'setstmt', subBuilder: VariableSetStmt.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterRoleSetStmt clone() => AlterRoleSetStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterRoleSetStmt copyWith(void Function(AlterRoleSetStmt) updates) => super.copyWith((message) => updates(message as AlterRoleSetStmt)) as AlterRoleSetStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterRoleSetStmt create() => AlterRoleSetStmt._();
  AlterRoleSetStmt createEmptyInstance() => create();
  static $pb.PbList<AlterRoleSetStmt> createRepeated() => $pb.PbList<AlterRoleSetStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterRoleSetStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterRoleSetStmt>(create);
  static AlterRoleSetStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RoleSpec get role => $_getN(0);
  @$pb.TagNumber(1)
  set role(RoleSpec v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRole() => $_has(0);
  @$pb.TagNumber(1)
  void clearRole() => clearField(1);
  @$pb.TagNumber(1)
  RoleSpec ensureRole() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.String get database => $_getSZ(1);
  @$pb.TagNumber(2)
  set database($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasDatabase() => $_has(1);
  @$pb.TagNumber(2)
  void clearDatabase() => clearField(2);

  @$pb.TagNumber(3)
  VariableSetStmt get setstmt => $_getN(2);
  @$pb.TagNumber(3)
  set setstmt(VariableSetStmt v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasSetstmt() => $_has(2);
  @$pb.TagNumber(3)
  void clearSetstmt() => clearField(3);
  @$pb.TagNumber(3)
  VariableSetStmt ensureSetstmt() => $_ensure(2);
}

class DropRoleStmt extends $pb.GeneratedMessage {
  factory DropRoleStmt({
    $core.Iterable<Node>? roles,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (roles != null) {
      $result.roles.addAll(roles);
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  DropRoleStmt._() : super();
  factory DropRoleStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DropRoleStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DropRoleStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'roles', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(2, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DropRoleStmt clone() => DropRoleStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DropRoleStmt copyWith(void Function(DropRoleStmt) updates) => super.copyWith((message) => updates(message as DropRoleStmt)) as DropRoleStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DropRoleStmt create() => DropRoleStmt._();
  DropRoleStmt createEmptyInstance() => create();
  static $pb.PbList<DropRoleStmt> createRepeated() => $pb.PbList<DropRoleStmt>();
  @$core.pragma('dart2js:noInline')
  static DropRoleStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DropRoleStmt>(create);
  static DropRoleStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get roles => $_getList(0);

  @$pb.TagNumber(2)
  $core.bool get missingOk => $_getBF(1);
  @$pb.TagNumber(2)
  set missingOk($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasMissingOk() => $_has(1);
  @$pb.TagNumber(2)
  void clearMissingOk() => clearField(2);
}

class CreateSeqStmt extends $pb.GeneratedMessage {
  factory CreateSeqStmt({
    RangeVar? sequence,
    $core.Iterable<Node>? options,
    $core.int? ownerId,
    $core.bool? forIdentity,
    $core.bool? ifNotExists,
  }) {
    final $result = create();
    if (sequence != null) {
      $result.sequence = sequence;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (ownerId != null) {
      $result.ownerId = ownerId;
    }
    if (forIdentity != null) {
      $result.forIdentity = forIdentity;
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    return $result;
  }
  CreateSeqStmt._() : super();
  factory CreateSeqStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateSeqStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateSeqStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'sequence', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'ownerId', $pb.PbFieldType.OU3)
    ..aOB(4, _omitFieldNames ? '' : 'for_identity')
    ..aOB(5, _omitFieldNames ? '' : 'if_not_exists')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateSeqStmt clone() => CreateSeqStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateSeqStmt copyWith(void Function(CreateSeqStmt) updates) => super.copyWith((message) => updates(message as CreateSeqStmt)) as CreateSeqStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateSeqStmt create() => CreateSeqStmt._();
  CreateSeqStmt createEmptyInstance() => create();
  static $pb.PbList<CreateSeqStmt> createRepeated() => $pb.PbList<CreateSeqStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateSeqStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateSeqStmt>(create);
  static CreateSeqStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get sequence => $_getN(0);
  @$pb.TagNumber(1)
  set sequence(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasSequence() => $_has(0);
  @$pb.TagNumber(1)
  void clearSequence() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureSequence() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);

  @$pb.TagNumber(3)
  $core.int get ownerId => $_getIZ(2);
  @$pb.TagNumber(3)
  set ownerId($core.int v) { $_setUnsignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasOwnerId() => $_has(2);
  @$pb.TagNumber(3)
  void clearOwnerId() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get forIdentity => $_getBF(3);
  @$pb.TagNumber(4)
  set forIdentity($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasForIdentity() => $_has(3);
  @$pb.TagNumber(4)
  void clearForIdentity() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get ifNotExists => $_getBF(4);
  @$pb.TagNumber(5)
  set ifNotExists($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasIfNotExists() => $_has(4);
  @$pb.TagNumber(5)
  void clearIfNotExists() => clearField(5);
}

class AlterSeqStmt extends $pb.GeneratedMessage {
  factory AlterSeqStmt({
    RangeVar? sequence,
    $core.Iterable<Node>? options,
    $core.bool? forIdentity,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (sequence != null) {
      $result.sequence = sequence;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (forIdentity != null) {
      $result.forIdentity = forIdentity;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  AlterSeqStmt._() : super();
  factory AlterSeqStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterSeqStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterSeqStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'sequence', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(3, _omitFieldNames ? '' : 'for_identity')
    ..aOB(4, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterSeqStmt clone() => AlterSeqStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterSeqStmt copyWith(void Function(AlterSeqStmt) updates) => super.copyWith((message) => updates(message as AlterSeqStmt)) as AlterSeqStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterSeqStmt create() => AlterSeqStmt._();
  AlterSeqStmt createEmptyInstance() => create();
  static $pb.PbList<AlterSeqStmt> createRepeated() => $pb.PbList<AlterSeqStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterSeqStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterSeqStmt>(create);
  static AlterSeqStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get sequence => $_getN(0);
  @$pb.TagNumber(1)
  set sequence(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasSequence() => $_has(0);
  @$pb.TagNumber(1)
  void clearSequence() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureSequence() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);

  @$pb.TagNumber(3)
  $core.bool get forIdentity => $_getBF(2);
  @$pb.TagNumber(3)
  set forIdentity($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasForIdentity() => $_has(2);
  @$pb.TagNumber(3)
  void clearForIdentity() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get missingOk => $_getBF(3);
  @$pb.TagNumber(4)
  set missingOk($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasMissingOk() => $_has(3);
  @$pb.TagNumber(4)
  void clearMissingOk() => clearField(4);
}

class DefineStmt extends $pb.GeneratedMessage {
  factory DefineStmt({
    ObjectType? kind,
    $core.bool? oldstyle,
    $core.Iterable<Node>? defnames,
    $core.Iterable<Node>? args,
    $core.Iterable<Node>? definition,
    $core.bool? ifNotExists,
    $core.bool? replace,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (oldstyle != null) {
      $result.oldstyle = oldstyle;
    }
    if (defnames != null) {
      $result.defnames.addAll(defnames);
    }
    if (args != null) {
      $result.args.addAll(args);
    }
    if (definition != null) {
      $result.definition.addAll(definition);
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    if (replace != null) {
      $result.replace = replace;
    }
    return $result;
  }
  DefineStmt._() : super();
  factory DefineStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DefineStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DefineStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ObjectType>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOB(2, _omitFieldNames ? '' : 'oldstyle')
    ..pc<Node>(3, _omitFieldNames ? '' : 'defnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'definition', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(6, _omitFieldNames ? '' : 'if_not_exists')
    ..aOB(7, _omitFieldNames ? '' : 'replace')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DefineStmt clone() => DefineStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DefineStmt copyWith(void Function(DefineStmt) updates) => super.copyWith((message) => updates(message as DefineStmt)) as DefineStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DefineStmt create() => DefineStmt._();
  DefineStmt createEmptyInstance() => create();
  static $pb.PbList<DefineStmt> createRepeated() => $pb.PbList<DefineStmt>();
  @$core.pragma('dart2js:noInline')
  static DefineStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DefineStmt>(create);
  static DefineStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectType get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(ObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get oldstyle => $_getBF(1);
  @$pb.TagNumber(2)
  set oldstyle($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOldstyle() => $_has(1);
  @$pb.TagNumber(2)
  void clearOldstyle() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get defnames => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get args => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get definition => $_getList(4);

  @$pb.TagNumber(6)
  $core.bool get ifNotExists => $_getBF(5);
  @$pb.TagNumber(6)
  set ifNotExists($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasIfNotExists() => $_has(5);
  @$pb.TagNumber(6)
  void clearIfNotExists() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get replace => $_getBF(6);
  @$pb.TagNumber(7)
  set replace($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasReplace() => $_has(6);
  @$pb.TagNumber(7)
  void clearReplace() => clearField(7);
}

class CreateDomainStmt extends $pb.GeneratedMessage {
  factory CreateDomainStmt({
    $core.Iterable<Node>? domainname,
    TypeName? typeName,
    CollateClause? collClause,
    $core.Iterable<Node>? constraints,
  }) {
    final $result = create();
    if (domainname != null) {
      $result.domainname.addAll(domainname);
    }
    if (typeName != null) {
      $result.typeName = typeName;
    }
    if (collClause != null) {
      $result.collClause = collClause;
    }
    if (constraints != null) {
      $result.constraints.addAll(constraints);
    }
    return $result;
  }
  CreateDomainStmt._() : super();
  factory CreateDomainStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateDomainStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateDomainStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'domainname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<TypeName>(2, _omitFieldNames ? '' : 'typeName', subBuilder: TypeName.create)
    ..aOM<CollateClause>(3, _omitFieldNames ? '' : 'collClause', subBuilder: CollateClause.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'constraints', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateDomainStmt clone() => CreateDomainStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateDomainStmt copyWith(void Function(CreateDomainStmt) updates) => super.copyWith((message) => updates(message as CreateDomainStmt)) as CreateDomainStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateDomainStmt create() => CreateDomainStmt._();
  CreateDomainStmt createEmptyInstance() => create();
  static $pb.PbList<CreateDomainStmt> createRepeated() => $pb.PbList<CreateDomainStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateDomainStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateDomainStmt>(create);
  static CreateDomainStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get domainname => $_getList(0);

  @$pb.TagNumber(2)
  TypeName get typeName => $_getN(1);
  @$pb.TagNumber(2)
  set typeName(TypeName v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeName() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeName() => clearField(2);
  @$pb.TagNumber(2)
  TypeName ensureTypeName() => $_ensure(1);

  @$pb.TagNumber(3)
  CollateClause get collClause => $_getN(2);
  @$pb.TagNumber(3)
  set collClause(CollateClause v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasCollClause() => $_has(2);
  @$pb.TagNumber(3)
  void clearCollClause() => clearField(3);
  @$pb.TagNumber(3)
  CollateClause ensureCollClause() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.List<Node> get constraints => $_getList(3);
}

class CreateOpClassStmt extends $pb.GeneratedMessage {
  factory CreateOpClassStmt({
    $core.Iterable<Node>? opclassname,
    $core.Iterable<Node>? opfamilyname,
    $core.String? amname,
    TypeName? datatype,
    $core.Iterable<Node>? items,
    $core.bool? isDefault,
  }) {
    final $result = create();
    if (opclassname != null) {
      $result.opclassname.addAll(opclassname);
    }
    if (opfamilyname != null) {
      $result.opfamilyname.addAll(opfamilyname);
    }
    if (amname != null) {
      $result.amname = amname;
    }
    if (datatype != null) {
      $result.datatype = datatype;
    }
    if (items != null) {
      $result.items.addAll(items);
    }
    if (isDefault != null) {
      $result.isDefault = isDefault;
    }
    return $result;
  }
  CreateOpClassStmt._() : super();
  factory CreateOpClassStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateOpClassStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateOpClassStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'opclassname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'opfamilyname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'amname')
    ..aOM<TypeName>(4, _omitFieldNames ? '' : 'datatype', subBuilder: TypeName.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'items', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(6, _omitFieldNames ? '' : 'isDefault')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateOpClassStmt clone() => CreateOpClassStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateOpClassStmt copyWith(void Function(CreateOpClassStmt) updates) => super.copyWith((message) => updates(message as CreateOpClassStmt)) as CreateOpClassStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateOpClassStmt create() => CreateOpClassStmt._();
  CreateOpClassStmt createEmptyInstance() => create();
  static $pb.PbList<CreateOpClassStmt> createRepeated() => $pb.PbList<CreateOpClassStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateOpClassStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateOpClassStmt>(create);
  static CreateOpClassStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get opclassname => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get opfamilyname => $_getList(1);

  @$pb.TagNumber(3)
  $core.String get amname => $_getSZ(2);
  @$pb.TagNumber(3)
  set amname($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAmname() => $_has(2);
  @$pb.TagNumber(3)
  void clearAmname() => clearField(3);

  @$pb.TagNumber(4)
  TypeName get datatype => $_getN(3);
  @$pb.TagNumber(4)
  set datatype(TypeName v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasDatatype() => $_has(3);
  @$pb.TagNumber(4)
  void clearDatatype() => clearField(4);
  @$pb.TagNumber(4)
  TypeName ensureDatatype() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<Node> get items => $_getList(4);

  @$pb.TagNumber(6)
  $core.bool get isDefault => $_getBF(5);
  @$pb.TagNumber(6)
  set isDefault($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasIsDefault() => $_has(5);
  @$pb.TagNumber(6)
  void clearIsDefault() => clearField(6);
}

class CreateOpClassItem extends $pb.GeneratedMessage {
  factory CreateOpClassItem({
    $core.int? itemtype,
    ObjectWithArgs? name,
    $core.int? number,
    $core.Iterable<Node>? orderFamily,
    $core.Iterable<Node>? classArgs,
    TypeName? storedtype,
  }) {
    final $result = create();
    if (itemtype != null) {
      $result.itemtype = itemtype;
    }
    if (name != null) {
      $result.name = name;
    }
    if (number != null) {
      $result.number = number;
    }
    if (orderFamily != null) {
      $result.orderFamily.addAll(orderFamily);
    }
    if (classArgs != null) {
      $result.classArgs.addAll(classArgs);
    }
    if (storedtype != null) {
      $result.storedtype = storedtype;
    }
    return $result;
  }
  CreateOpClassItem._() : super();
  factory CreateOpClassItem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateOpClassItem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateOpClassItem', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'itemtype', $pb.PbFieldType.O3)
    ..aOM<ObjectWithArgs>(2, _omitFieldNames ? '' : 'name', subBuilder: ObjectWithArgs.create)
    ..a<$core.int>(3, _omitFieldNames ? '' : 'number', $pb.PbFieldType.O3)
    ..pc<Node>(4, _omitFieldNames ? '' : 'order_family', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'class_args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<TypeName>(6, _omitFieldNames ? '' : 'storedtype', subBuilder: TypeName.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateOpClassItem clone() => CreateOpClassItem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateOpClassItem copyWith(void Function(CreateOpClassItem) updates) => super.copyWith((message) => updates(message as CreateOpClassItem)) as CreateOpClassItem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateOpClassItem create() => CreateOpClassItem._();
  CreateOpClassItem createEmptyInstance() => create();
  static $pb.PbList<CreateOpClassItem> createRepeated() => $pb.PbList<CreateOpClassItem>();
  @$core.pragma('dart2js:noInline')
  static CreateOpClassItem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateOpClassItem>(create);
  static CreateOpClassItem? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get itemtype => $_getIZ(0);
  @$pb.TagNumber(1)
  set itemtype($core.int v) { $_setSignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasItemtype() => $_has(0);
  @$pb.TagNumber(1)
  void clearItemtype() => clearField(1);

  @$pb.TagNumber(2)
  ObjectWithArgs get name => $_getN(1);
  @$pb.TagNumber(2)
  set name(ObjectWithArgs v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasName() => $_has(1);
  @$pb.TagNumber(2)
  void clearName() => clearField(2);
  @$pb.TagNumber(2)
  ObjectWithArgs ensureName() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.int get number => $_getIZ(2);
  @$pb.TagNumber(3)
  set number($core.int v) { $_setSignedInt32(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasNumber() => $_has(2);
  @$pb.TagNumber(3)
  void clearNumber() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get orderFamily => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get classArgs => $_getList(4);

  @$pb.TagNumber(6)
  TypeName get storedtype => $_getN(5);
  @$pb.TagNumber(6)
  set storedtype(TypeName v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasStoredtype() => $_has(5);
  @$pb.TagNumber(6)
  void clearStoredtype() => clearField(6);
  @$pb.TagNumber(6)
  TypeName ensureStoredtype() => $_ensure(5);
}

class CreateOpFamilyStmt extends $pb.GeneratedMessage {
  factory CreateOpFamilyStmt({
    $core.Iterable<Node>? opfamilyname,
    $core.String? amname,
  }) {
    final $result = create();
    if (opfamilyname != null) {
      $result.opfamilyname.addAll(opfamilyname);
    }
    if (amname != null) {
      $result.amname = amname;
    }
    return $result;
  }
  CreateOpFamilyStmt._() : super();
  factory CreateOpFamilyStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateOpFamilyStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateOpFamilyStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'opfamilyname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(2, _omitFieldNames ? '' : 'amname')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateOpFamilyStmt clone() => CreateOpFamilyStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateOpFamilyStmt copyWith(void Function(CreateOpFamilyStmt) updates) => super.copyWith((message) => updates(message as CreateOpFamilyStmt)) as CreateOpFamilyStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateOpFamilyStmt create() => CreateOpFamilyStmt._();
  CreateOpFamilyStmt createEmptyInstance() => create();
  static $pb.PbList<CreateOpFamilyStmt> createRepeated() => $pb.PbList<CreateOpFamilyStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateOpFamilyStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateOpFamilyStmt>(create);
  static CreateOpFamilyStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get opfamilyname => $_getList(0);

  @$pb.TagNumber(2)
  $core.String get amname => $_getSZ(1);
  @$pb.TagNumber(2)
  set amname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasAmname() => $_has(1);
  @$pb.TagNumber(2)
  void clearAmname() => clearField(2);
}

class AlterOpFamilyStmt extends $pb.GeneratedMessage {
  factory AlterOpFamilyStmt({
    $core.Iterable<Node>? opfamilyname,
    $core.String? amname,
    $core.bool? isDrop,
    $core.Iterable<Node>? items,
  }) {
    final $result = create();
    if (opfamilyname != null) {
      $result.opfamilyname.addAll(opfamilyname);
    }
    if (amname != null) {
      $result.amname = amname;
    }
    if (isDrop != null) {
      $result.isDrop = isDrop;
    }
    if (items != null) {
      $result.items.addAll(items);
    }
    return $result;
  }
  AlterOpFamilyStmt._() : super();
  factory AlterOpFamilyStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterOpFamilyStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterOpFamilyStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'opfamilyname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(2, _omitFieldNames ? '' : 'amname')
    ..aOB(3, _omitFieldNames ? '' : 'isDrop')
    ..pc<Node>(4, _omitFieldNames ? '' : 'items', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterOpFamilyStmt clone() => AlterOpFamilyStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterOpFamilyStmt copyWith(void Function(AlterOpFamilyStmt) updates) => super.copyWith((message) => updates(message as AlterOpFamilyStmt)) as AlterOpFamilyStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterOpFamilyStmt create() => AlterOpFamilyStmt._();
  AlterOpFamilyStmt createEmptyInstance() => create();
  static $pb.PbList<AlterOpFamilyStmt> createRepeated() => $pb.PbList<AlterOpFamilyStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterOpFamilyStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterOpFamilyStmt>(create);
  static AlterOpFamilyStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get opfamilyname => $_getList(0);

  @$pb.TagNumber(2)
  $core.String get amname => $_getSZ(1);
  @$pb.TagNumber(2)
  set amname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasAmname() => $_has(1);
  @$pb.TagNumber(2)
  void clearAmname() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get isDrop => $_getBF(2);
  @$pb.TagNumber(3)
  set isDrop($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasIsDrop() => $_has(2);
  @$pb.TagNumber(3)
  void clearIsDrop() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get items => $_getList(3);
}

class DropStmt extends $pb.GeneratedMessage {
  factory DropStmt({
    $core.Iterable<Node>? objects,
    ObjectType? removeType,
    DropBehavior? behavior,
    $core.bool? missingOk,
    $core.bool? concurrent,
  }) {
    final $result = create();
    if (objects != null) {
      $result.objects.addAll(objects);
    }
    if (removeType != null) {
      $result.removeType = removeType;
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    if (concurrent != null) {
      $result.concurrent = concurrent;
    }
    return $result;
  }
  DropStmt._() : super();
  factory DropStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DropStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DropStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'objects', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<ObjectType>(2, _omitFieldNames ? '' : 'removeType', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..e<DropBehavior>(3, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..aOB(4, _omitFieldNames ? '' : 'missing_ok')
    ..aOB(5, _omitFieldNames ? '' : 'concurrent')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DropStmt clone() => DropStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DropStmt copyWith(void Function(DropStmt) updates) => super.copyWith((message) => updates(message as DropStmt)) as DropStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DropStmt create() => DropStmt._();
  DropStmt createEmptyInstance() => create();
  static $pb.PbList<DropStmt> createRepeated() => $pb.PbList<DropStmt>();
  @$core.pragma('dart2js:noInline')
  static DropStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DropStmt>(create);
  static DropStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get objects => $_getList(0);

  @$pb.TagNumber(2)
  ObjectType get removeType => $_getN(1);
  @$pb.TagNumber(2)
  set removeType(ObjectType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRemoveType() => $_has(1);
  @$pb.TagNumber(2)
  void clearRemoveType() => clearField(2);

  @$pb.TagNumber(3)
  DropBehavior get behavior => $_getN(2);
  @$pb.TagNumber(3)
  set behavior(DropBehavior v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBehavior() => $_has(2);
  @$pb.TagNumber(3)
  void clearBehavior() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get missingOk => $_getBF(3);
  @$pb.TagNumber(4)
  set missingOk($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasMissingOk() => $_has(3);
  @$pb.TagNumber(4)
  void clearMissingOk() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get concurrent => $_getBF(4);
  @$pb.TagNumber(5)
  set concurrent($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasConcurrent() => $_has(4);
  @$pb.TagNumber(5)
  void clearConcurrent() => clearField(5);
}

class TruncateStmt extends $pb.GeneratedMessage {
  factory TruncateStmt({
    $core.Iterable<Node>? relations,
    $core.bool? restartSeqs,
    DropBehavior? behavior,
  }) {
    final $result = create();
    if (relations != null) {
      $result.relations.addAll(relations);
    }
    if (restartSeqs != null) {
      $result.restartSeqs = restartSeqs;
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    return $result;
  }
  TruncateStmt._() : super();
  factory TruncateStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TruncateStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TruncateStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'relations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(2, _omitFieldNames ? '' : 'restart_seqs')
    ..e<DropBehavior>(3, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TruncateStmt clone() => TruncateStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TruncateStmt copyWith(void Function(TruncateStmt) updates) => super.copyWith((message) => updates(message as TruncateStmt)) as TruncateStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TruncateStmt create() => TruncateStmt._();
  TruncateStmt createEmptyInstance() => create();
  static $pb.PbList<TruncateStmt> createRepeated() => $pb.PbList<TruncateStmt>();
  @$core.pragma('dart2js:noInline')
  static TruncateStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TruncateStmt>(create);
  static TruncateStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get relations => $_getList(0);

  @$pb.TagNumber(2)
  $core.bool get restartSeqs => $_getBF(1);
  @$pb.TagNumber(2)
  set restartSeqs($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRestartSeqs() => $_has(1);
  @$pb.TagNumber(2)
  void clearRestartSeqs() => clearField(2);

  @$pb.TagNumber(3)
  DropBehavior get behavior => $_getN(2);
  @$pb.TagNumber(3)
  set behavior(DropBehavior v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBehavior() => $_has(2);
  @$pb.TagNumber(3)
  void clearBehavior() => clearField(3);
}

class CommentStmt extends $pb.GeneratedMessage {
  factory CommentStmt({
    ObjectType? objtype,
    Node? object,
    $core.String? comment,
  }) {
    final $result = create();
    if (objtype != null) {
      $result.objtype = objtype;
    }
    if (object != null) {
      $result.object = object;
    }
    if (comment != null) {
      $result.comment = comment;
    }
    return $result;
  }
  CommentStmt._() : super();
  factory CommentStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CommentStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CommentStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ObjectType>(1, _omitFieldNames ? '' : 'objtype', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'object', subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'comment')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CommentStmt clone() => CommentStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CommentStmt copyWith(void Function(CommentStmt) updates) => super.copyWith((message) => updates(message as CommentStmt)) as CommentStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CommentStmt create() => CommentStmt._();
  CommentStmt createEmptyInstance() => create();
  static $pb.PbList<CommentStmt> createRepeated() => $pb.PbList<CommentStmt>();
  @$core.pragma('dart2js:noInline')
  static CommentStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CommentStmt>(create);
  static CommentStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectType get objtype => $_getN(0);
  @$pb.TagNumber(1)
  set objtype(ObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasObjtype() => $_has(0);
  @$pb.TagNumber(1)
  void clearObjtype() => clearField(1);

  @$pb.TagNumber(2)
  Node get object => $_getN(1);
  @$pb.TagNumber(2)
  set object(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasObject() => $_has(1);
  @$pb.TagNumber(2)
  void clearObject() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureObject() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get comment => $_getSZ(2);
  @$pb.TagNumber(3)
  set comment($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasComment() => $_has(2);
  @$pb.TagNumber(3)
  void clearComment() => clearField(3);
}

class SecLabelStmt extends $pb.GeneratedMessage {
  factory SecLabelStmt({
    ObjectType? objtype,
    Node? object,
    $core.String? provider,
    $core.String? label,
  }) {
    final $result = create();
    if (objtype != null) {
      $result.objtype = objtype;
    }
    if (object != null) {
      $result.object = object;
    }
    if (provider != null) {
      $result.provider = provider;
    }
    if (label != null) {
      $result.label = label;
    }
    return $result;
  }
  SecLabelStmt._() : super();
  factory SecLabelStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory SecLabelStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'SecLabelStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ObjectType>(1, _omitFieldNames ? '' : 'objtype', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'object', subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'provider')
    ..aOS(4, _omitFieldNames ? '' : 'label')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  SecLabelStmt clone() => SecLabelStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  SecLabelStmt copyWith(void Function(SecLabelStmt) updates) => super.copyWith((message) => updates(message as SecLabelStmt)) as SecLabelStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static SecLabelStmt create() => SecLabelStmt._();
  SecLabelStmt createEmptyInstance() => create();
  static $pb.PbList<SecLabelStmt> createRepeated() => $pb.PbList<SecLabelStmt>();
  @$core.pragma('dart2js:noInline')
  static SecLabelStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<SecLabelStmt>(create);
  static SecLabelStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectType get objtype => $_getN(0);
  @$pb.TagNumber(1)
  set objtype(ObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasObjtype() => $_has(0);
  @$pb.TagNumber(1)
  void clearObjtype() => clearField(1);

  @$pb.TagNumber(2)
  Node get object => $_getN(1);
  @$pb.TagNumber(2)
  set object(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasObject() => $_has(1);
  @$pb.TagNumber(2)
  void clearObject() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureObject() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get provider => $_getSZ(2);
  @$pb.TagNumber(3)
  set provider($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasProvider() => $_has(2);
  @$pb.TagNumber(3)
  void clearProvider() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get label => $_getSZ(3);
  @$pb.TagNumber(4)
  set label($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLabel() => $_has(3);
  @$pb.TagNumber(4)
  void clearLabel() => clearField(4);
}

class DeclareCursorStmt extends $pb.GeneratedMessage {
  factory DeclareCursorStmt({
    $core.String? portalname,
    $core.int? options,
    Node? query,
  }) {
    final $result = create();
    if (portalname != null) {
      $result.portalname = portalname;
    }
    if (options != null) {
      $result.options = options;
    }
    if (query != null) {
      $result.query = query;
    }
    return $result;
  }
  DeclareCursorStmt._() : super();
  factory DeclareCursorStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DeclareCursorStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DeclareCursorStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'portalname')
    ..a<$core.int>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.O3)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'query', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DeclareCursorStmt clone() => DeclareCursorStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DeclareCursorStmt copyWith(void Function(DeclareCursorStmt) updates) => super.copyWith((message) => updates(message as DeclareCursorStmt)) as DeclareCursorStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DeclareCursorStmt create() => DeclareCursorStmt._();
  DeclareCursorStmt createEmptyInstance() => create();
  static $pb.PbList<DeclareCursorStmt> createRepeated() => $pb.PbList<DeclareCursorStmt>();
  @$core.pragma('dart2js:noInline')
  static DeclareCursorStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DeclareCursorStmt>(create);
  static DeclareCursorStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get portalname => $_getSZ(0);
  @$pb.TagNumber(1)
  set portalname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasPortalname() => $_has(0);
  @$pb.TagNumber(1)
  void clearPortalname() => clearField(1);

  @$pb.TagNumber(2)
  $core.int get options => $_getIZ(1);
  @$pb.TagNumber(2)
  set options($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOptions() => $_has(1);
  @$pb.TagNumber(2)
  void clearOptions() => clearField(2);

  @$pb.TagNumber(3)
  Node get query => $_getN(2);
  @$pb.TagNumber(3)
  set query(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasQuery() => $_has(2);
  @$pb.TagNumber(3)
  void clearQuery() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureQuery() => $_ensure(2);
}

class ClosePortalStmt extends $pb.GeneratedMessage {
  factory ClosePortalStmt({
    $core.String? portalname,
  }) {
    final $result = create();
    if (portalname != null) {
      $result.portalname = portalname;
    }
    return $result;
  }
  ClosePortalStmt._() : super();
  factory ClosePortalStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ClosePortalStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ClosePortalStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'portalname')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ClosePortalStmt clone() => ClosePortalStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ClosePortalStmt copyWith(void Function(ClosePortalStmt) updates) => super.copyWith((message) => updates(message as ClosePortalStmt)) as ClosePortalStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ClosePortalStmt create() => ClosePortalStmt._();
  ClosePortalStmt createEmptyInstance() => create();
  static $pb.PbList<ClosePortalStmt> createRepeated() => $pb.PbList<ClosePortalStmt>();
  @$core.pragma('dart2js:noInline')
  static ClosePortalStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ClosePortalStmt>(create);
  static ClosePortalStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get portalname => $_getSZ(0);
  @$pb.TagNumber(1)
  set portalname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasPortalname() => $_has(0);
  @$pb.TagNumber(1)
  void clearPortalname() => clearField(1);
}

class FetchStmt extends $pb.GeneratedMessage {
  factory FetchStmt({
    FetchDirection? direction,
    $fixnum.Int64? howMany,
    $core.String? portalname,
    $core.bool? ismove,
  }) {
    final $result = create();
    if (direction != null) {
      $result.direction = direction;
    }
    if (howMany != null) {
      $result.howMany = howMany;
    }
    if (portalname != null) {
      $result.portalname = portalname;
    }
    if (ismove != null) {
      $result.ismove = ismove;
    }
    return $result;
  }
  FetchStmt._() : super();
  factory FetchStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FetchStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FetchStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<FetchDirection>(1, _omitFieldNames ? '' : 'direction', $pb.PbFieldType.OE, defaultOrMaker: FetchDirection.FETCH_DIRECTION_UNDEFINED, valueOf: FetchDirection.valueOf, enumValues: FetchDirection.values)
    ..aInt64(2, _omitFieldNames ? '' : 'howMany')
    ..aOS(3, _omitFieldNames ? '' : 'portalname')
    ..aOB(4, _omitFieldNames ? '' : 'ismove')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FetchStmt clone() => FetchStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FetchStmt copyWith(void Function(FetchStmt) updates) => super.copyWith((message) => updates(message as FetchStmt)) as FetchStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FetchStmt create() => FetchStmt._();
  FetchStmt createEmptyInstance() => create();
  static $pb.PbList<FetchStmt> createRepeated() => $pb.PbList<FetchStmt>();
  @$core.pragma('dart2js:noInline')
  static FetchStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FetchStmt>(create);
  static FetchStmt? _defaultInstance;

  @$pb.TagNumber(1)
  FetchDirection get direction => $_getN(0);
  @$pb.TagNumber(1)
  set direction(FetchDirection v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasDirection() => $_has(0);
  @$pb.TagNumber(1)
  void clearDirection() => clearField(1);

  @$pb.TagNumber(2)
  $fixnum.Int64 get howMany => $_getI64(1);
  @$pb.TagNumber(2)
  set howMany($fixnum.Int64 v) { $_setInt64(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasHowMany() => $_has(1);
  @$pb.TagNumber(2)
  void clearHowMany() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get portalname => $_getSZ(2);
  @$pb.TagNumber(3)
  set portalname($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasPortalname() => $_has(2);
  @$pb.TagNumber(3)
  void clearPortalname() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get ismove => $_getBF(3);
  @$pb.TagNumber(4)
  set ismove($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasIsmove() => $_has(3);
  @$pb.TagNumber(4)
  void clearIsmove() => clearField(4);
}

class IndexStmt extends $pb.GeneratedMessage {
  factory IndexStmt({
    $core.String? idxname,
    RangeVar? relation,
    $core.String? accessMethod,
    $core.String? tableSpace,
    $core.Iterable<Node>? indexParams,
    $core.Iterable<Node>? indexIncludingParams,
    $core.Iterable<Node>? options,
    Node? whereClause,
    $core.Iterable<Node>? excludeOpNames,
    $core.String? idxcomment,
    $core.int? indexOid,
    $core.int? oldNumber,
    $core.int? oldCreateSubid,
    $core.int? oldFirstRelfilelocatorSubid,
    $core.bool? unique,
    $core.bool? nullsNotDistinct,
    $core.bool? primary,
    $core.bool? isconstraint,
    $core.bool? deferrable,
    $core.bool? initdeferred,
    $core.bool? transformed,
    $core.bool? concurrent,
    $core.bool? ifNotExists,
    $core.bool? resetDefaultTblspc,
  }) {
    final $result = create();
    if (idxname != null) {
      $result.idxname = idxname;
    }
    if (relation != null) {
      $result.relation = relation;
    }
    if (accessMethod != null) {
      $result.accessMethod = accessMethod;
    }
    if (tableSpace != null) {
      $result.tableSpace = tableSpace;
    }
    if (indexParams != null) {
      $result.indexParams.addAll(indexParams);
    }
    if (indexIncludingParams != null) {
      $result.indexIncludingParams.addAll(indexIncludingParams);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (excludeOpNames != null) {
      $result.excludeOpNames.addAll(excludeOpNames);
    }
    if (idxcomment != null) {
      $result.idxcomment = idxcomment;
    }
    if (indexOid != null) {
      $result.indexOid = indexOid;
    }
    if (oldNumber != null) {
      $result.oldNumber = oldNumber;
    }
    if (oldCreateSubid != null) {
      $result.oldCreateSubid = oldCreateSubid;
    }
    if (oldFirstRelfilelocatorSubid != null) {
      $result.oldFirstRelfilelocatorSubid = oldFirstRelfilelocatorSubid;
    }
    if (unique != null) {
      $result.unique = unique;
    }
    if (nullsNotDistinct != null) {
      $result.nullsNotDistinct = nullsNotDistinct;
    }
    if (primary != null) {
      $result.primary = primary;
    }
    if (isconstraint != null) {
      $result.isconstraint = isconstraint;
    }
    if (deferrable != null) {
      $result.deferrable = deferrable;
    }
    if (initdeferred != null) {
      $result.initdeferred = initdeferred;
    }
    if (transformed != null) {
      $result.transformed = transformed;
    }
    if (concurrent != null) {
      $result.concurrent = concurrent;
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    if (resetDefaultTblspc != null) {
      $result.resetDefaultTblspc = resetDefaultTblspc;
    }
    return $result;
  }
  IndexStmt._() : super();
  factory IndexStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory IndexStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'IndexStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'idxname')
    ..aOM<RangeVar>(2, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOS(3, _omitFieldNames ? '' : 'accessMethod')
    ..aOS(4, _omitFieldNames ? '' : 'tableSpace')
    ..pc<Node>(5, _omitFieldNames ? '' : 'indexParams', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'indexIncludingParams', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(7, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(8, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..pc<Node>(9, _omitFieldNames ? '' : 'excludeOpNames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(10, _omitFieldNames ? '' : 'idxcomment')
    ..a<$core.int>(11, _omitFieldNames ? '' : 'indexOid', $pb.PbFieldType.OU3)
    ..a<$core.int>(12, _omitFieldNames ? '' : 'oldNumber', $pb.PbFieldType.OU3)
    ..a<$core.int>(13, _omitFieldNames ? '' : 'oldCreateSubid', $pb.PbFieldType.OU3)
    ..a<$core.int>(14, _omitFieldNames ? '' : 'oldFirstRelfilelocatorSubid', $pb.PbFieldType.OU3)
    ..aOB(15, _omitFieldNames ? '' : 'unique')
    ..aOB(16, _omitFieldNames ? '' : 'nulls_not_distinct')
    ..aOB(17, _omitFieldNames ? '' : 'primary')
    ..aOB(18, _omitFieldNames ? '' : 'isconstraint')
    ..aOB(19, _omitFieldNames ? '' : 'deferrable')
    ..aOB(20, _omitFieldNames ? '' : 'initdeferred')
    ..aOB(21, _omitFieldNames ? '' : 'transformed')
    ..aOB(22, _omitFieldNames ? '' : 'concurrent')
    ..aOB(23, _omitFieldNames ? '' : 'if_not_exists')
    ..aOB(24, _omitFieldNames ? '' : 'reset_default_tblspc')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  IndexStmt clone() => IndexStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  IndexStmt copyWith(void Function(IndexStmt) updates) => super.copyWith((message) => updates(message as IndexStmt)) as IndexStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static IndexStmt create() => IndexStmt._();
  IndexStmt createEmptyInstance() => create();
  static $pb.PbList<IndexStmt> createRepeated() => $pb.PbList<IndexStmt>();
  @$core.pragma('dart2js:noInline')
  static IndexStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<IndexStmt>(create);
  static IndexStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get idxname => $_getSZ(0);
  @$pb.TagNumber(1)
  set idxname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasIdxname() => $_has(0);
  @$pb.TagNumber(1)
  void clearIdxname() => clearField(1);

  @$pb.TagNumber(2)
  RangeVar get relation => $_getN(1);
  @$pb.TagNumber(2)
  set relation(RangeVar v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRelation() => $_has(1);
  @$pb.TagNumber(2)
  void clearRelation() => clearField(2);
  @$pb.TagNumber(2)
  RangeVar ensureRelation() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get accessMethod => $_getSZ(2);
  @$pb.TagNumber(3)
  set accessMethod($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasAccessMethod() => $_has(2);
  @$pb.TagNumber(3)
  void clearAccessMethod() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get tableSpace => $_getSZ(3);
  @$pb.TagNumber(4)
  set tableSpace($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasTableSpace() => $_has(3);
  @$pb.TagNumber(4)
  void clearTableSpace() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get indexParams => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<Node> get indexIncludingParams => $_getList(5);

  @$pb.TagNumber(7)
  $core.List<Node> get options => $_getList(6);

  @$pb.TagNumber(8)
  Node get whereClause => $_getN(7);
  @$pb.TagNumber(8)
  set whereClause(Node v) { setField(8, v); }
  @$pb.TagNumber(8)
  $core.bool hasWhereClause() => $_has(7);
  @$pb.TagNumber(8)
  void clearWhereClause() => clearField(8);
  @$pb.TagNumber(8)
  Node ensureWhereClause() => $_ensure(7);

  @$pb.TagNumber(9)
  $core.List<Node> get excludeOpNames => $_getList(8);

  @$pb.TagNumber(10)
  $core.String get idxcomment => $_getSZ(9);
  @$pb.TagNumber(10)
  set idxcomment($core.String v) { $_setString(9, v); }
  @$pb.TagNumber(10)
  $core.bool hasIdxcomment() => $_has(9);
  @$pb.TagNumber(10)
  void clearIdxcomment() => clearField(10);

  @$pb.TagNumber(11)
  $core.int get indexOid => $_getIZ(10);
  @$pb.TagNumber(11)
  set indexOid($core.int v) { $_setUnsignedInt32(10, v); }
  @$pb.TagNumber(11)
  $core.bool hasIndexOid() => $_has(10);
  @$pb.TagNumber(11)
  void clearIndexOid() => clearField(11);

  @$pb.TagNumber(12)
  $core.int get oldNumber => $_getIZ(11);
  @$pb.TagNumber(12)
  set oldNumber($core.int v) { $_setUnsignedInt32(11, v); }
  @$pb.TagNumber(12)
  $core.bool hasOldNumber() => $_has(11);
  @$pb.TagNumber(12)
  void clearOldNumber() => clearField(12);

  @$pb.TagNumber(13)
  $core.int get oldCreateSubid => $_getIZ(12);
  @$pb.TagNumber(13)
  set oldCreateSubid($core.int v) { $_setUnsignedInt32(12, v); }
  @$pb.TagNumber(13)
  $core.bool hasOldCreateSubid() => $_has(12);
  @$pb.TagNumber(13)
  void clearOldCreateSubid() => clearField(13);

  @$pb.TagNumber(14)
  $core.int get oldFirstRelfilelocatorSubid => $_getIZ(13);
  @$pb.TagNumber(14)
  set oldFirstRelfilelocatorSubid($core.int v) { $_setUnsignedInt32(13, v); }
  @$pb.TagNumber(14)
  $core.bool hasOldFirstRelfilelocatorSubid() => $_has(13);
  @$pb.TagNumber(14)
  void clearOldFirstRelfilelocatorSubid() => clearField(14);

  @$pb.TagNumber(15)
  $core.bool get unique => $_getBF(14);
  @$pb.TagNumber(15)
  set unique($core.bool v) { $_setBool(14, v); }
  @$pb.TagNumber(15)
  $core.bool hasUnique() => $_has(14);
  @$pb.TagNumber(15)
  void clearUnique() => clearField(15);

  @$pb.TagNumber(16)
  $core.bool get nullsNotDistinct => $_getBF(15);
  @$pb.TagNumber(16)
  set nullsNotDistinct($core.bool v) { $_setBool(15, v); }
  @$pb.TagNumber(16)
  $core.bool hasNullsNotDistinct() => $_has(15);
  @$pb.TagNumber(16)
  void clearNullsNotDistinct() => clearField(16);

  @$pb.TagNumber(17)
  $core.bool get primary => $_getBF(16);
  @$pb.TagNumber(17)
  set primary($core.bool v) { $_setBool(16, v); }
  @$pb.TagNumber(17)
  $core.bool hasPrimary() => $_has(16);
  @$pb.TagNumber(17)
  void clearPrimary() => clearField(17);

  @$pb.TagNumber(18)
  $core.bool get isconstraint => $_getBF(17);
  @$pb.TagNumber(18)
  set isconstraint($core.bool v) { $_setBool(17, v); }
  @$pb.TagNumber(18)
  $core.bool hasIsconstraint() => $_has(17);
  @$pb.TagNumber(18)
  void clearIsconstraint() => clearField(18);

  @$pb.TagNumber(19)
  $core.bool get deferrable => $_getBF(18);
  @$pb.TagNumber(19)
  set deferrable($core.bool v) { $_setBool(18, v); }
  @$pb.TagNumber(19)
  $core.bool hasDeferrable() => $_has(18);
  @$pb.TagNumber(19)
  void clearDeferrable() => clearField(19);

  @$pb.TagNumber(20)
  $core.bool get initdeferred => $_getBF(19);
  @$pb.TagNumber(20)
  set initdeferred($core.bool v) { $_setBool(19, v); }
  @$pb.TagNumber(20)
  $core.bool hasInitdeferred() => $_has(19);
  @$pb.TagNumber(20)
  void clearInitdeferred() => clearField(20);

  @$pb.TagNumber(21)
  $core.bool get transformed => $_getBF(20);
  @$pb.TagNumber(21)
  set transformed($core.bool v) { $_setBool(20, v); }
  @$pb.TagNumber(21)
  $core.bool hasTransformed() => $_has(20);
  @$pb.TagNumber(21)
  void clearTransformed() => clearField(21);

  @$pb.TagNumber(22)
  $core.bool get concurrent => $_getBF(21);
  @$pb.TagNumber(22)
  set concurrent($core.bool v) { $_setBool(21, v); }
  @$pb.TagNumber(22)
  $core.bool hasConcurrent() => $_has(21);
  @$pb.TagNumber(22)
  void clearConcurrent() => clearField(22);

  @$pb.TagNumber(23)
  $core.bool get ifNotExists => $_getBF(22);
  @$pb.TagNumber(23)
  set ifNotExists($core.bool v) { $_setBool(22, v); }
  @$pb.TagNumber(23)
  $core.bool hasIfNotExists() => $_has(22);
  @$pb.TagNumber(23)
  void clearIfNotExists() => clearField(23);

  @$pb.TagNumber(24)
  $core.bool get resetDefaultTblspc => $_getBF(23);
  @$pb.TagNumber(24)
  set resetDefaultTblspc($core.bool v) { $_setBool(23, v); }
  @$pb.TagNumber(24)
  $core.bool hasResetDefaultTblspc() => $_has(23);
  @$pb.TagNumber(24)
  void clearResetDefaultTblspc() => clearField(24);
}

class CreateStatsStmt extends $pb.GeneratedMessage {
  factory CreateStatsStmt({
    $core.Iterable<Node>? defnames,
    $core.Iterable<Node>? statTypes,
    $core.Iterable<Node>? exprs,
    $core.Iterable<Node>? relations,
    $core.String? stxcomment,
    $core.bool? transformed,
    $core.bool? ifNotExists,
  }) {
    final $result = create();
    if (defnames != null) {
      $result.defnames.addAll(defnames);
    }
    if (statTypes != null) {
      $result.statTypes.addAll(statTypes);
    }
    if (exprs != null) {
      $result.exprs.addAll(exprs);
    }
    if (relations != null) {
      $result.relations.addAll(relations);
    }
    if (stxcomment != null) {
      $result.stxcomment = stxcomment;
    }
    if (transformed != null) {
      $result.transformed = transformed;
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    return $result;
  }
  CreateStatsStmt._() : super();
  factory CreateStatsStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateStatsStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateStatsStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'defnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'stat_types', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'exprs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'relations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(5, _omitFieldNames ? '' : 'stxcomment')
    ..aOB(6, _omitFieldNames ? '' : 'transformed')
    ..aOB(7, _omitFieldNames ? '' : 'if_not_exists')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateStatsStmt clone() => CreateStatsStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateStatsStmt copyWith(void Function(CreateStatsStmt) updates) => super.copyWith((message) => updates(message as CreateStatsStmt)) as CreateStatsStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateStatsStmt create() => CreateStatsStmt._();
  CreateStatsStmt createEmptyInstance() => create();
  static $pb.PbList<CreateStatsStmt> createRepeated() => $pb.PbList<CreateStatsStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateStatsStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateStatsStmt>(create);
  static CreateStatsStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get defnames => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get statTypes => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get exprs => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get relations => $_getList(3);

  @$pb.TagNumber(5)
  $core.String get stxcomment => $_getSZ(4);
  @$pb.TagNumber(5)
  set stxcomment($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasStxcomment() => $_has(4);
  @$pb.TagNumber(5)
  void clearStxcomment() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get transformed => $_getBF(5);
  @$pb.TagNumber(6)
  set transformed($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasTransformed() => $_has(5);
  @$pb.TagNumber(6)
  void clearTransformed() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get ifNotExists => $_getBF(6);
  @$pb.TagNumber(7)
  set ifNotExists($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasIfNotExists() => $_has(6);
  @$pb.TagNumber(7)
  void clearIfNotExists() => clearField(7);
}

class StatsElem extends $pb.GeneratedMessage {
  factory StatsElem({
    $core.String? name,
    Node? expr,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (expr != null) {
      $result.expr = expr;
    }
    return $result;
  }
  StatsElem._() : super();
  factory StatsElem.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory StatsElem.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'StatsElem', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..aOM<Node>(2, _omitFieldNames ? '' : 'expr', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  StatsElem clone() => StatsElem()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  StatsElem copyWith(void Function(StatsElem) updates) => super.copyWith((message) => updates(message as StatsElem)) as StatsElem;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static StatsElem create() => StatsElem._();
  StatsElem createEmptyInstance() => create();
  static $pb.PbList<StatsElem> createRepeated() => $pb.PbList<StatsElem>();
  @$core.pragma('dart2js:noInline')
  static StatsElem getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<StatsElem>(create);
  static StatsElem? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  Node get expr => $_getN(1);
  @$pb.TagNumber(2)
  set expr(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasExpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearExpr() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureExpr() => $_ensure(1);
}

class AlterStatsStmt extends $pb.GeneratedMessage {
  factory AlterStatsStmt({
    $core.Iterable<Node>? defnames,
    $core.int? stxstattarget,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (defnames != null) {
      $result.defnames.addAll(defnames);
    }
    if (stxstattarget != null) {
      $result.stxstattarget = stxstattarget;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  AlterStatsStmt._() : super();
  factory AlterStatsStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterStatsStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterStatsStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'defnames', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'stxstattarget', $pb.PbFieldType.O3)
    ..aOB(3, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterStatsStmt clone() => AlterStatsStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterStatsStmt copyWith(void Function(AlterStatsStmt) updates) => super.copyWith((message) => updates(message as AlterStatsStmt)) as AlterStatsStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterStatsStmt create() => AlterStatsStmt._();
  AlterStatsStmt createEmptyInstance() => create();
  static $pb.PbList<AlterStatsStmt> createRepeated() => $pb.PbList<AlterStatsStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterStatsStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterStatsStmt>(create);
  static AlterStatsStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get defnames => $_getList(0);

  @$pb.TagNumber(2)
  $core.int get stxstattarget => $_getIZ(1);
  @$pb.TagNumber(2)
  set stxstattarget($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasStxstattarget() => $_has(1);
  @$pb.TagNumber(2)
  void clearStxstattarget() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get missingOk => $_getBF(2);
  @$pb.TagNumber(3)
  set missingOk($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasMissingOk() => $_has(2);
  @$pb.TagNumber(3)
  void clearMissingOk() => clearField(3);
}

class CreateFunctionStmt extends $pb.GeneratedMessage {
  factory CreateFunctionStmt({
    $core.bool? isProcedure,
    $core.bool? replace,
    $core.Iterable<Node>? funcname,
    $core.Iterable<Node>? parameters,
    TypeName? returnType,
    $core.Iterable<Node>? options,
    Node? sqlBody,
  }) {
    final $result = create();
    if (isProcedure != null) {
      $result.isProcedure = isProcedure;
    }
    if (replace != null) {
      $result.replace = replace;
    }
    if (funcname != null) {
      $result.funcname.addAll(funcname);
    }
    if (parameters != null) {
      $result.parameters.addAll(parameters);
    }
    if (returnType != null) {
      $result.returnType = returnType;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (sqlBody != null) {
      $result.sqlBody = sqlBody;
    }
    return $result;
  }
  CreateFunctionStmt._() : super();
  factory CreateFunctionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateFunctionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateFunctionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'is_procedure')
    ..aOB(2, _omitFieldNames ? '' : 'replace')
    ..pc<Node>(3, _omitFieldNames ? '' : 'funcname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'parameters', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<TypeName>(5, _omitFieldNames ? '' : 'returnType', subBuilder: TypeName.create)
    ..pc<Node>(6, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(7, _omitFieldNames ? '' : 'sql_body', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateFunctionStmt clone() => CreateFunctionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateFunctionStmt copyWith(void Function(CreateFunctionStmt) updates) => super.copyWith((message) => updates(message as CreateFunctionStmt)) as CreateFunctionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateFunctionStmt create() => CreateFunctionStmt._();
  CreateFunctionStmt createEmptyInstance() => create();
  static $pb.PbList<CreateFunctionStmt> createRepeated() => $pb.PbList<CreateFunctionStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateFunctionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateFunctionStmt>(create);
  static CreateFunctionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get isProcedure => $_getBF(0);
  @$pb.TagNumber(1)
  set isProcedure($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasIsProcedure() => $_has(0);
  @$pb.TagNumber(1)
  void clearIsProcedure() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get replace => $_getBF(1);
  @$pb.TagNumber(2)
  set replace($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasReplace() => $_has(1);
  @$pb.TagNumber(2)
  void clearReplace() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get funcname => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get parameters => $_getList(3);

  @$pb.TagNumber(5)
  TypeName get returnType => $_getN(4);
  @$pb.TagNumber(5)
  set returnType(TypeName v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasReturnType() => $_has(4);
  @$pb.TagNumber(5)
  void clearReturnType() => clearField(5);
  @$pb.TagNumber(5)
  TypeName ensureReturnType() => $_ensure(4);

  @$pb.TagNumber(6)
  $core.List<Node> get options => $_getList(5);

  @$pb.TagNumber(7)
  Node get sqlBody => $_getN(6);
  @$pb.TagNumber(7)
  set sqlBody(Node v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasSqlBody() => $_has(6);
  @$pb.TagNumber(7)
  void clearSqlBody() => clearField(7);
  @$pb.TagNumber(7)
  Node ensureSqlBody() => $_ensure(6);
}

class FunctionParameter extends $pb.GeneratedMessage {
  factory FunctionParameter({
    $core.String? name,
    TypeName? argType,
    FunctionParameterMode? mode,
    Node? defexpr,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (argType != null) {
      $result.argType = argType;
    }
    if (mode != null) {
      $result.mode = mode;
    }
    if (defexpr != null) {
      $result.defexpr = defexpr;
    }
    return $result;
  }
  FunctionParameter._() : super();
  factory FunctionParameter.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory FunctionParameter.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'FunctionParameter', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..aOM<TypeName>(2, _omitFieldNames ? '' : 'argType', subBuilder: TypeName.create)
    ..e<FunctionParameterMode>(3, _omitFieldNames ? '' : 'mode', $pb.PbFieldType.OE, defaultOrMaker: FunctionParameterMode.FUNCTION_PARAMETER_MODE_UNDEFINED, valueOf: FunctionParameterMode.valueOf, enumValues: FunctionParameterMode.values)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'defexpr', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  FunctionParameter clone() => FunctionParameter()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  FunctionParameter copyWith(void Function(FunctionParameter) updates) => super.copyWith((message) => updates(message as FunctionParameter)) as FunctionParameter;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static FunctionParameter create() => FunctionParameter._();
  FunctionParameter createEmptyInstance() => create();
  static $pb.PbList<FunctionParameter> createRepeated() => $pb.PbList<FunctionParameter>();
  @$core.pragma('dart2js:noInline')
  static FunctionParameter getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<FunctionParameter>(create);
  static FunctionParameter? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  TypeName get argType => $_getN(1);
  @$pb.TagNumber(2)
  set argType(TypeName v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasArgType() => $_has(1);
  @$pb.TagNumber(2)
  void clearArgType() => clearField(2);
  @$pb.TagNumber(2)
  TypeName ensureArgType() => $_ensure(1);

  @$pb.TagNumber(3)
  FunctionParameterMode get mode => $_getN(2);
  @$pb.TagNumber(3)
  set mode(FunctionParameterMode v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasMode() => $_has(2);
  @$pb.TagNumber(3)
  void clearMode() => clearField(3);

  @$pb.TagNumber(4)
  Node get defexpr => $_getN(3);
  @$pb.TagNumber(4)
  set defexpr(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasDefexpr() => $_has(3);
  @$pb.TagNumber(4)
  void clearDefexpr() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureDefexpr() => $_ensure(3);
}

class AlterFunctionStmt extends $pb.GeneratedMessage {
  factory AlterFunctionStmt({
    ObjectType? objtype,
    ObjectWithArgs? func,
    $core.Iterable<Node>? actions,
  }) {
    final $result = create();
    if (objtype != null) {
      $result.objtype = objtype;
    }
    if (func != null) {
      $result.func = func;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    return $result;
  }
  AlterFunctionStmt._() : super();
  factory AlterFunctionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterFunctionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterFunctionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ObjectType>(1, _omitFieldNames ? '' : 'objtype', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOM<ObjectWithArgs>(2, _omitFieldNames ? '' : 'func', subBuilder: ObjectWithArgs.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterFunctionStmt clone() => AlterFunctionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterFunctionStmt copyWith(void Function(AlterFunctionStmt) updates) => super.copyWith((message) => updates(message as AlterFunctionStmt)) as AlterFunctionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterFunctionStmt create() => AlterFunctionStmt._();
  AlterFunctionStmt createEmptyInstance() => create();
  static $pb.PbList<AlterFunctionStmt> createRepeated() => $pb.PbList<AlterFunctionStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterFunctionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterFunctionStmt>(create);
  static AlterFunctionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectType get objtype => $_getN(0);
  @$pb.TagNumber(1)
  set objtype(ObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasObjtype() => $_has(0);
  @$pb.TagNumber(1)
  void clearObjtype() => clearField(1);

  @$pb.TagNumber(2)
  ObjectWithArgs get func => $_getN(1);
  @$pb.TagNumber(2)
  set func(ObjectWithArgs v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasFunc() => $_has(1);
  @$pb.TagNumber(2)
  void clearFunc() => clearField(2);
  @$pb.TagNumber(2)
  ObjectWithArgs ensureFunc() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get actions => $_getList(2);
}

class DoStmt extends $pb.GeneratedMessage {
  factory DoStmt({
    $core.Iterable<Node>? args,
  }) {
    final $result = create();
    if (args != null) {
      $result.args.addAll(args);
    }
    return $result;
  }
  DoStmt._() : super();
  factory DoStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DoStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DoStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'args', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DoStmt clone() => DoStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DoStmt copyWith(void Function(DoStmt) updates) => super.copyWith((message) => updates(message as DoStmt)) as DoStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DoStmt create() => DoStmt._();
  DoStmt createEmptyInstance() => create();
  static $pb.PbList<DoStmt> createRepeated() => $pb.PbList<DoStmt>();
  @$core.pragma('dart2js:noInline')
  static DoStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DoStmt>(create);
  static DoStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get args => $_getList(0);
}

class InlineCodeBlock extends $pb.GeneratedMessage {
  factory InlineCodeBlock({
    $core.String? sourceText,
    $core.int? langOid,
    $core.bool? langIsTrusted,
    $core.bool? atomic,
  }) {
    final $result = create();
    if (sourceText != null) {
      $result.sourceText = sourceText;
    }
    if (langOid != null) {
      $result.langOid = langOid;
    }
    if (langIsTrusted != null) {
      $result.langIsTrusted = langIsTrusted;
    }
    if (atomic != null) {
      $result.atomic = atomic;
    }
    return $result;
  }
  InlineCodeBlock._() : super();
  factory InlineCodeBlock.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory InlineCodeBlock.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'InlineCodeBlock', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'source_text')
    ..a<$core.int>(2, _omitFieldNames ? '' : 'langOid', $pb.PbFieldType.OU3)
    ..aOB(3, _omitFieldNames ? '' : 'langIsTrusted')
    ..aOB(4, _omitFieldNames ? '' : 'atomic')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  InlineCodeBlock clone() => InlineCodeBlock()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  InlineCodeBlock copyWith(void Function(InlineCodeBlock) updates) => super.copyWith((message) => updates(message as InlineCodeBlock)) as InlineCodeBlock;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static InlineCodeBlock create() => InlineCodeBlock._();
  InlineCodeBlock createEmptyInstance() => create();
  static $pb.PbList<InlineCodeBlock> createRepeated() => $pb.PbList<InlineCodeBlock>();
  @$core.pragma('dart2js:noInline')
  static InlineCodeBlock getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<InlineCodeBlock>(create);
  static InlineCodeBlock? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get sourceText => $_getSZ(0);
  @$pb.TagNumber(1)
  set sourceText($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasSourceText() => $_has(0);
  @$pb.TagNumber(1)
  void clearSourceText() => clearField(1);

  @$pb.TagNumber(2)
  $core.int get langOid => $_getIZ(1);
  @$pb.TagNumber(2)
  set langOid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasLangOid() => $_has(1);
  @$pb.TagNumber(2)
  void clearLangOid() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get langIsTrusted => $_getBF(2);
  @$pb.TagNumber(3)
  set langIsTrusted($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLangIsTrusted() => $_has(2);
  @$pb.TagNumber(3)
  void clearLangIsTrusted() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get atomic => $_getBF(3);
  @$pb.TagNumber(4)
  set atomic($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasAtomic() => $_has(3);
  @$pb.TagNumber(4)
  void clearAtomic() => clearField(4);
}

class CallStmt extends $pb.GeneratedMessage {
  factory CallStmt({
    FuncCall? funccall,
    FuncExpr? funcexpr,
    $core.Iterable<Node>? outargs,
  }) {
    final $result = create();
    if (funccall != null) {
      $result.funccall = funccall;
    }
    if (funcexpr != null) {
      $result.funcexpr = funcexpr;
    }
    if (outargs != null) {
      $result.outargs.addAll(outargs);
    }
    return $result;
  }
  CallStmt._() : super();
  factory CallStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CallStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CallStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<FuncCall>(1, _omitFieldNames ? '' : 'funccall', subBuilder: FuncCall.create)
    ..aOM<FuncExpr>(2, _omitFieldNames ? '' : 'funcexpr', subBuilder: FuncExpr.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'outargs', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CallStmt clone() => CallStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CallStmt copyWith(void Function(CallStmt) updates) => super.copyWith((message) => updates(message as CallStmt)) as CallStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CallStmt create() => CallStmt._();
  CallStmt createEmptyInstance() => create();
  static $pb.PbList<CallStmt> createRepeated() => $pb.PbList<CallStmt>();
  @$core.pragma('dart2js:noInline')
  static CallStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CallStmt>(create);
  static CallStmt? _defaultInstance;

  @$pb.TagNumber(1)
  FuncCall get funccall => $_getN(0);
  @$pb.TagNumber(1)
  set funccall(FuncCall v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasFunccall() => $_has(0);
  @$pb.TagNumber(1)
  void clearFunccall() => clearField(1);
  @$pb.TagNumber(1)
  FuncCall ensureFunccall() => $_ensure(0);

  @$pb.TagNumber(2)
  FuncExpr get funcexpr => $_getN(1);
  @$pb.TagNumber(2)
  set funcexpr(FuncExpr v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasFuncexpr() => $_has(1);
  @$pb.TagNumber(2)
  void clearFuncexpr() => clearField(2);
  @$pb.TagNumber(2)
  FuncExpr ensureFuncexpr() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get outargs => $_getList(2);
}

class CallContext extends $pb.GeneratedMessage {
  factory CallContext({
    $core.bool? atomic,
  }) {
    final $result = create();
    if (atomic != null) {
      $result.atomic = atomic;
    }
    return $result;
  }
  CallContext._() : super();
  factory CallContext.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CallContext.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CallContext', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'atomic')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CallContext clone() => CallContext()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CallContext copyWith(void Function(CallContext) updates) => super.copyWith((message) => updates(message as CallContext)) as CallContext;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CallContext create() => CallContext._();
  CallContext createEmptyInstance() => create();
  static $pb.PbList<CallContext> createRepeated() => $pb.PbList<CallContext>();
  @$core.pragma('dart2js:noInline')
  static CallContext getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CallContext>(create);
  static CallContext? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get atomic => $_getBF(0);
  @$pb.TagNumber(1)
  set atomic($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasAtomic() => $_has(0);
  @$pb.TagNumber(1)
  void clearAtomic() => clearField(1);
}

class RenameStmt extends $pb.GeneratedMessage {
  factory RenameStmt({
    ObjectType? renameType,
    ObjectType? relationType,
    RangeVar? relation,
    Node? object,
    $core.String? subname,
    $core.String? newname,
    DropBehavior? behavior,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (renameType != null) {
      $result.renameType = renameType;
    }
    if (relationType != null) {
      $result.relationType = relationType;
    }
    if (relation != null) {
      $result.relation = relation;
    }
    if (object != null) {
      $result.object = object;
    }
    if (subname != null) {
      $result.subname = subname;
    }
    if (newname != null) {
      $result.newname = newname;
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  RenameStmt._() : super();
  factory RenameStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RenameStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RenameStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ObjectType>(1, _omitFieldNames ? '' : 'renameType', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..e<ObjectType>(2, _omitFieldNames ? '' : 'relationType', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOM<RangeVar>(3, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOM<Node>(4, _omitFieldNames ? '' : 'object', subBuilder: Node.create)
    ..aOS(5, _omitFieldNames ? '' : 'subname')
    ..aOS(6, _omitFieldNames ? '' : 'newname')
    ..e<DropBehavior>(7, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..aOB(8, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RenameStmt clone() => RenameStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RenameStmt copyWith(void Function(RenameStmt) updates) => super.copyWith((message) => updates(message as RenameStmt)) as RenameStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RenameStmt create() => RenameStmt._();
  RenameStmt createEmptyInstance() => create();
  static $pb.PbList<RenameStmt> createRepeated() => $pb.PbList<RenameStmt>();
  @$core.pragma('dart2js:noInline')
  static RenameStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RenameStmt>(create);
  static RenameStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectType get renameType => $_getN(0);
  @$pb.TagNumber(1)
  set renameType(ObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRenameType() => $_has(0);
  @$pb.TagNumber(1)
  void clearRenameType() => clearField(1);

  @$pb.TagNumber(2)
  ObjectType get relationType => $_getN(1);
  @$pb.TagNumber(2)
  set relationType(ObjectType v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRelationType() => $_has(1);
  @$pb.TagNumber(2)
  void clearRelationType() => clearField(2);

  @$pb.TagNumber(3)
  RangeVar get relation => $_getN(2);
  @$pb.TagNumber(3)
  set relation(RangeVar v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasRelation() => $_has(2);
  @$pb.TagNumber(3)
  void clearRelation() => clearField(3);
  @$pb.TagNumber(3)
  RangeVar ensureRelation() => $_ensure(2);

  @$pb.TagNumber(4)
  Node get object => $_getN(3);
  @$pb.TagNumber(4)
  set object(Node v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasObject() => $_has(3);
  @$pb.TagNumber(4)
  void clearObject() => clearField(4);
  @$pb.TagNumber(4)
  Node ensureObject() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.String get subname => $_getSZ(4);
  @$pb.TagNumber(5)
  set subname($core.String v) { $_setString(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasSubname() => $_has(4);
  @$pb.TagNumber(5)
  void clearSubname() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get newname => $_getSZ(5);
  @$pb.TagNumber(6)
  set newname($core.String v) { $_setString(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasNewname() => $_has(5);
  @$pb.TagNumber(6)
  void clearNewname() => clearField(6);

  @$pb.TagNumber(7)
  DropBehavior get behavior => $_getN(6);
  @$pb.TagNumber(7)
  set behavior(DropBehavior v) { setField(7, v); }
  @$pb.TagNumber(7)
  $core.bool hasBehavior() => $_has(6);
  @$pb.TagNumber(7)
  void clearBehavior() => clearField(7);

  @$pb.TagNumber(8)
  $core.bool get missingOk => $_getBF(7);
  @$pb.TagNumber(8)
  set missingOk($core.bool v) { $_setBool(7, v); }
  @$pb.TagNumber(8)
  $core.bool hasMissingOk() => $_has(7);
  @$pb.TagNumber(8)
  void clearMissingOk() => clearField(8);
}

class AlterObjectDependsStmt extends $pb.GeneratedMessage {
  factory AlterObjectDependsStmt({
    ObjectType? objectType,
    RangeVar? relation,
    Node? object,
    PgString? extname,
    $core.bool? remove,
  }) {
    final $result = create();
    if (objectType != null) {
      $result.objectType = objectType;
    }
    if (relation != null) {
      $result.relation = relation;
    }
    if (object != null) {
      $result.object = object;
    }
    if (extname != null) {
      $result.extname = extname;
    }
    if (remove != null) {
      $result.remove = remove;
    }
    return $result;
  }
  AlterObjectDependsStmt._() : super();
  factory AlterObjectDependsStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterObjectDependsStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterObjectDependsStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ObjectType>(1, _omitFieldNames ? '' : 'objectType', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOM<RangeVar>(2, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'object', subBuilder: Node.create)
    ..aOM<PgString>(4, _omitFieldNames ? '' : 'extname', subBuilder: PgString.create)
    ..aOB(5, _omitFieldNames ? '' : 'remove')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterObjectDependsStmt clone() => AlterObjectDependsStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterObjectDependsStmt copyWith(void Function(AlterObjectDependsStmt) updates) => super.copyWith((message) => updates(message as AlterObjectDependsStmt)) as AlterObjectDependsStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterObjectDependsStmt create() => AlterObjectDependsStmt._();
  AlterObjectDependsStmt createEmptyInstance() => create();
  static $pb.PbList<AlterObjectDependsStmt> createRepeated() => $pb.PbList<AlterObjectDependsStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterObjectDependsStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterObjectDependsStmt>(create);
  static AlterObjectDependsStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectType get objectType => $_getN(0);
  @$pb.TagNumber(1)
  set objectType(ObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasObjectType() => $_has(0);
  @$pb.TagNumber(1)
  void clearObjectType() => clearField(1);

  @$pb.TagNumber(2)
  RangeVar get relation => $_getN(1);
  @$pb.TagNumber(2)
  set relation(RangeVar v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRelation() => $_has(1);
  @$pb.TagNumber(2)
  void clearRelation() => clearField(2);
  @$pb.TagNumber(2)
  RangeVar ensureRelation() => $_ensure(1);

  @$pb.TagNumber(3)
  Node get object => $_getN(2);
  @$pb.TagNumber(3)
  set object(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasObject() => $_has(2);
  @$pb.TagNumber(3)
  void clearObject() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureObject() => $_ensure(2);

  @$pb.TagNumber(4)
  PgString get extname => $_getN(3);
  @$pb.TagNumber(4)
  set extname(PgString v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasExtname() => $_has(3);
  @$pb.TagNumber(4)
  void clearExtname() => clearField(4);
  @$pb.TagNumber(4)
  PgString ensureExtname() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.bool get remove => $_getBF(4);
  @$pb.TagNumber(5)
  set remove($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasRemove() => $_has(4);
  @$pb.TagNumber(5)
  void clearRemove() => clearField(5);
}

class AlterObjectSchemaStmt extends $pb.GeneratedMessage {
  factory AlterObjectSchemaStmt({
    ObjectType? objectType,
    RangeVar? relation,
    Node? object,
    $core.String? newschema,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (objectType != null) {
      $result.objectType = objectType;
    }
    if (relation != null) {
      $result.relation = relation;
    }
    if (object != null) {
      $result.object = object;
    }
    if (newschema != null) {
      $result.newschema = newschema;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  AlterObjectSchemaStmt._() : super();
  factory AlterObjectSchemaStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterObjectSchemaStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterObjectSchemaStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ObjectType>(1, _omitFieldNames ? '' : 'objectType', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOM<RangeVar>(2, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'object', subBuilder: Node.create)
    ..aOS(4, _omitFieldNames ? '' : 'newschema')
    ..aOB(5, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterObjectSchemaStmt clone() => AlterObjectSchemaStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterObjectSchemaStmt copyWith(void Function(AlterObjectSchemaStmt) updates) => super.copyWith((message) => updates(message as AlterObjectSchemaStmt)) as AlterObjectSchemaStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterObjectSchemaStmt create() => AlterObjectSchemaStmt._();
  AlterObjectSchemaStmt createEmptyInstance() => create();
  static $pb.PbList<AlterObjectSchemaStmt> createRepeated() => $pb.PbList<AlterObjectSchemaStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterObjectSchemaStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterObjectSchemaStmt>(create);
  static AlterObjectSchemaStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectType get objectType => $_getN(0);
  @$pb.TagNumber(1)
  set objectType(ObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasObjectType() => $_has(0);
  @$pb.TagNumber(1)
  void clearObjectType() => clearField(1);

  @$pb.TagNumber(2)
  RangeVar get relation => $_getN(1);
  @$pb.TagNumber(2)
  set relation(RangeVar v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRelation() => $_has(1);
  @$pb.TagNumber(2)
  void clearRelation() => clearField(2);
  @$pb.TagNumber(2)
  RangeVar ensureRelation() => $_ensure(1);

  @$pb.TagNumber(3)
  Node get object => $_getN(2);
  @$pb.TagNumber(3)
  set object(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasObject() => $_has(2);
  @$pb.TagNumber(3)
  void clearObject() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureObject() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.String get newschema => $_getSZ(3);
  @$pb.TagNumber(4)
  set newschema($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasNewschema() => $_has(3);
  @$pb.TagNumber(4)
  void clearNewschema() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get missingOk => $_getBF(4);
  @$pb.TagNumber(5)
  set missingOk($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasMissingOk() => $_has(4);
  @$pb.TagNumber(5)
  void clearMissingOk() => clearField(5);
}

class AlterOwnerStmt extends $pb.GeneratedMessage {
  factory AlterOwnerStmt({
    ObjectType? objectType,
    RangeVar? relation,
    Node? object,
    RoleSpec? newowner,
  }) {
    final $result = create();
    if (objectType != null) {
      $result.objectType = objectType;
    }
    if (relation != null) {
      $result.relation = relation;
    }
    if (object != null) {
      $result.object = object;
    }
    if (newowner != null) {
      $result.newowner = newowner;
    }
    return $result;
  }
  AlterOwnerStmt._() : super();
  factory AlterOwnerStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterOwnerStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterOwnerStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ObjectType>(1, _omitFieldNames ? '' : 'objectType', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOM<RangeVar>(2, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'object', subBuilder: Node.create)
    ..aOM<RoleSpec>(4, _omitFieldNames ? '' : 'newowner', subBuilder: RoleSpec.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterOwnerStmt clone() => AlterOwnerStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterOwnerStmt copyWith(void Function(AlterOwnerStmt) updates) => super.copyWith((message) => updates(message as AlterOwnerStmt)) as AlterOwnerStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterOwnerStmt create() => AlterOwnerStmt._();
  AlterOwnerStmt createEmptyInstance() => create();
  static $pb.PbList<AlterOwnerStmt> createRepeated() => $pb.PbList<AlterOwnerStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterOwnerStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterOwnerStmt>(create);
  static AlterOwnerStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectType get objectType => $_getN(0);
  @$pb.TagNumber(1)
  set objectType(ObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasObjectType() => $_has(0);
  @$pb.TagNumber(1)
  void clearObjectType() => clearField(1);

  @$pb.TagNumber(2)
  RangeVar get relation => $_getN(1);
  @$pb.TagNumber(2)
  set relation(RangeVar v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRelation() => $_has(1);
  @$pb.TagNumber(2)
  void clearRelation() => clearField(2);
  @$pb.TagNumber(2)
  RangeVar ensureRelation() => $_ensure(1);

  @$pb.TagNumber(3)
  Node get object => $_getN(2);
  @$pb.TagNumber(3)
  set object(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasObject() => $_has(2);
  @$pb.TagNumber(3)
  void clearObject() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureObject() => $_ensure(2);

  @$pb.TagNumber(4)
  RoleSpec get newowner => $_getN(3);
  @$pb.TagNumber(4)
  set newowner(RoleSpec v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasNewowner() => $_has(3);
  @$pb.TagNumber(4)
  void clearNewowner() => clearField(4);
  @$pb.TagNumber(4)
  RoleSpec ensureNewowner() => $_ensure(3);
}

class AlterOperatorStmt extends $pb.GeneratedMessage {
  factory AlterOperatorStmt({
    ObjectWithArgs? opername,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (opername != null) {
      $result.opername = opername;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  AlterOperatorStmt._() : super();
  factory AlterOperatorStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterOperatorStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterOperatorStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<ObjectWithArgs>(1, _omitFieldNames ? '' : 'opername', subBuilder: ObjectWithArgs.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterOperatorStmt clone() => AlterOperatorStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterOperatorStmt copyWith(void Function(AlterOperatorStmt) updates) => super.copyWith((message) => updates(message as AlterOperatorStmt)) as AlterOperatorStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterOperatorStmt create() => AlterOperatorStmt._();
  AlterOperatorStmt createEmptyInstance() => create();
  static $pb.PbList<AlterOperatorStmt> createRepeated() => $pb.PbList<AlterOperatorStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterOperatorStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterOperatorStmt>(create);
  static AlterOperatorStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ObjectWithArgs get opername => $_getN(0);
  @$pb.TagNumber(1)
  set opername(ObjectWithArgs v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasOpername() => $_has(0);
  @$pb.TagNumber(1)
  void clearOpername() => clearField(1);
  @$pb.TagNumber(1)
  ObjectWithArgs ensureOpername() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);
}

class AlterTypeStmt extends $pb.GeneratedMessage {
  factory AlterTypeStmt({
    $core.Iterable<Node>? typeName,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (typeName != null) {
      $result.typeName.addAll(typeName);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  AlterTypeStmt._() : super();
  factory AlterTypeStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterTypeStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterTypeStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'typeName', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterTypeStmt clone() => AlterTypeStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterTypeStmt copyWith(void Function(AlterTypeStmt) updates) => super.copyWith((message) => updates(message as AlterTypeStmt)) as AlterTypeStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterTypeStmt create() => AlterTypeStmt._();
  AlterTypeStmt createEmptyInstance() => create();
  static $pb.PbList<AlterTypeStmt> createRepeated() => $pb.PbList<AlterTypeStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterTypeStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterTypeStmt>(create);
  static AlterTypeStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get typeName => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);
}

class RuleStmt extends $pb.GeneratedMessage {
  factory RuleStmt({
    RangeVar? relation,
    $core.String? rulename,
    Node? whereClause,
    CmdType? event,
    $core.bool? instead,
    $core.Iterable<Node>? actions,
    $core.bool? replace,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (rulename != null) {
      $result.rulename = rulename;
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (event != null) {
      $result.event = event;
    }
    if (instead != null) {
      $result.instead = instead;
    }
    if (actions != null) {
      $result.actions.addAll(actions);
    }
    if (replace != null) {
      $result.replace = replace;
    }
    return $result;
  }
  RuleStmt._() : super();
  factory RuleStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RuleStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RuleStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOS(2, _omitFieldNames ? '' : 'rulename')
    ..aOM<Node>(3, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..e<CmdType>(4, _omitFieldNames ? '' : 'event', $pb.PbFieldType.OE, defaultOrMaker: CmdType.CMD_TYPE_UNDEFINED, valueOf: CmdType.valueOf, enumValues: CmdType.values)
    ..aOB(5, _omitFieldNames ? '' : 'instead')
    ..pc<Node>(6, _omitFieldNames ? '' : 'actions', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(7, _omitFieldNames ? '' : 'replace')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RuleStmt clone() => RuleStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RuleStmt copyWith(void Function(RuleStmt) updates) => super.copyWith((message) => updates(message as RuleStmt)) as RuleStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RuleStmt create() => RuleStmt._();
  RuleStmt createEmptyInstance() => create();
  static $pb.PbList<RuleStmt> createRepeated() => $pb.PbList<RuleStmt>();
  @$core.pragma('dart2js:noInline')
  static RuleStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RuleStmt>(create);
  static RuleStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.String get rulename => $_getSZ(1);
  @$pb.TagNumber(2)
  set rulename($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasRulename() => $_has(1);
  @$pb.TagNumber(2)
  void clearRulename() => clearField(2);

  @$pb.TagNumber(3)
  Node get whereClause => $_getN(2);
  @$pb.TagNumber(3)
  set whereClause(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasWhereClause() => $_has(2);
  @$pb.TagNumber(3)
  void clearWhereClause() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureWhereClause() => $_ensure(2);

  @$pb.TagNumber(4)
  CmdType get event => $_getN(3);
  @$pb.TagNumber(4)
  set event(CmdType v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasEvent() => $_has(3);
  @$pb.TagNumber(4)
  void clearEvent() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get instead => $_getBF(4);
  @$pb.TagNumber(5)
  set instead($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasInstead() => $_has(4);
  @$pb.TagNumber(5)
  void clearInstead() => clearField(5);

  @$pb.TagNumber(6)
  $core.List<Node> get actions => $_getList(5);

  @$pb.TagNumber(7)
  $core.bool get replace => $_getBF(6);
  @$pb.TagNumber(7)
  set replace($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasReplace() => $_has(6);
  @$pb.TagNumber(7)
  void clearReplace() => clearField(7);
}

class NotifyStmt extends $pb.GeneratedMessage {
  factory NotifyStmt({
    $core.String? conditionname,
    $core.String? payload,
  }) {
    final $result = create();
    if (conditionname != null) {
      $result.conditionname = conditionname;
    }
    if (payload != null) {
      $result.payload = payload;
    }
    return $result;
  }
  NotifyStmt._() : super();
  factory NotifyStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory NotifyStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'NotifyStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'conditionname')
    ..aOS(2, _omitFieldNames ? '' : 'payload')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  NotifyStmt clone() => NotifyStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  NotifyStmt copyWith(void Function(NotifyStmt) updates) => super.copyWith((message) => updates(message as NotifyStmt)) as NotifyStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static NotifyStmt create() => NotifyStmt._();
  NotifyStmt createEmptyInstance() => create();
  static $pb.PbList<NotifyStmt> createRepeated() => $pb.PbList<NotifyStmt>();
  @$core.pragma('dart2js:noInline')
  static NotifyStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<NotifyStmt>(create);
  static NotifyStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get conditionname => $_getSZ(0);
  @$pb.TagNumber(1)
  set conditionname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasConditionname() => $_has(0);
  @$pb.TagNumber(1)
  void clearConditionname() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get payload => $_getSZ(1);
  @$pb.TagNumber(2)
  set payload($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasPayload() => $_has(1);
  @$pb.TagNumber(2)
  void clearPayload() => clearField(2);
}

class ListenStmt extends $pb.GeneratedMessage {
  factory ListenStmt({
    $core.String? conditionname,
  }) {
    final $result = create();
    if (conditionname != null) {
      $result.conditionname = conditionname;
    }
    return $result;
  }
  ListenStmt._() : super();
  factory ListenStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ListenStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ListenStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'conditionname')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ListenStmt clone() => ListenStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ListenStmt copyWith(void Function(ListenStmt) updates) => super.copyWith((message) => updates(message as ListenStmt)) as ListenStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ListenStmt create() => ListenStmt._();
  ListenStmt createEmptyInstance() => create();
  static $pb.PbList<ListenStmt> createRepeated() => $pb.PbList<ListenStmt>();
  @$core.pragma('dart2js:noInline')
  static ListenStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ListenStmt>(create);
  static ListenStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get conditionname => $_getSZ(0);
  @$pb.TagNumber(1)
  set conditionname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasConditionname() => $_has(0);
  @$pb.TagNumber(1)
  void clearConditionname() => clearField(1);
}

class UnlistenStmt extends $pb.GeneratedMessage {
  factory UnlistenStmt({
    $core.String? conditionname,
  }) {
    final $result = create();
    if (conditionname != null) {
      $result.conditionname = conditionname;
    }
    return $result;
  }
  UnlistenStmt._() : super();
  factory UnlistenStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory UnlistenStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'UnlistenStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'conditionname')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  UnlistenStmt clone() => UnlistenStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  UnlistenStmt copyWith(void Function(UnlistenStmt) updates) => super.copyWith((message) => updates(message as UnlistenStmt)) as UnlistenStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static UnlistenStmt create() => UnlistenStmt._();
  UnlistenStmt createEmptyInstance() => create();
  static $pb.PbList<UnlistenStmt> createRepeated() => $pb.PbList<UnlistenStmt>();
  @$core.pragma('dart2js:noInline')
  static UnlistenStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<UnlistenStmt>(create);
  static UnlistenStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get conditionname => $_getSZ(0);
  @$pb.TagNumber(1)
  set conditionname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasConditionname() => $_has(0);
  @$pb.TagNumber(1)
  void clearConditionname() => clearField(1);
}

class TransactionStmt extends $pb.GeneratedMessage {
  factory TransactionStmt({
    TransactionStmtKind? kind,
    $core.Iterable<Node>? options,
    $core.String? savepointName,
    $core.String? gid,
    $core.bool? chain,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (savepointName != null) {
      $result.savepointName = savepointName;
    }
    if (gid != null) {
      $result.gid = gid;
    }
    if (chain != null) {
      $result.chain = chain;
    }
    return $result;
  }
  TransactionStmt._() : super();
  factory TransactionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory TransactionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'TransactionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<TransactionStmtKind>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: TransactionStmtKind.TRANSACTION_STMT_KIND_UNDEFINED, valueOf: TransactionStmtKind.valueOf, enumValues: TransactionStmtKind.values)
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(3, _omitFieldNames ? '' : 'savepoint_name')
    ..aOS(4, _omitFieldNames ? '' : 'gid')
    ..aOB(5, _omitFieldNames ? '' : 'chain')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  TransactionStmt clone() => TransactionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  TransactionStmt copyWith(void Function(TransactionStmt) updates) => super.copyWith((message) => updates(message as TransactionStmt)) as TransactionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static TransactionStmt create() => TransactionStmt._();
  TransactionStmt createEmptyInstance() => create();
  static $pb.PbList<TransactionStmt> createRepeated() => $pb.PbList<TransactionStmt>();
  @$core.pragma('dart2js:noInline')
  static TransactionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<TransactionStmt>(create);
  static TransactionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  TransactionStmtKind get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(TransactionStmtKind v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);

  @$pb.TagNumber(3)
  $core.String get savepointName => $_getSZ(2);
  @$pb.TagNumber(3)
  set savepointName($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasSavepointName() => $_has(2);
  @$pb.TagNumber(3)
  void clearSavepointName() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get gid => $_getSZ(3);
  @$pb.TagNumber(4)
  set gid($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasGid() => $_has(3);
  @$pb.TagNumber(4)
  void clearGid() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get chain => $_getBF(4);
  @$pb.TagNumber(5)
  set chain($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasChain() => $_has(4);
  @$pb.TagNumber(5)
  void clearChain() => clearField(5);
}

class CompositeTypeStmt extends $pb.GeneratedMessage {
  factory CompositeTypeStmt({
    RangeVar? typevar,
    $core.Iterable<Node>? coldeflist,
  }) {
    final $result = create();
    if (typevar != null) {
      $result.typevar = typevar;
    }
    if (coldeflist != null) {
      $result.coldeflist.addAll(coldeflist);
    }
    return $result;
  }
  CompositeTypeStmt._() : super();
  factory CompositeTypeStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CompositeTypeStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CompositeTypeStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'typevar', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'coldeflist', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CompositeTypeStmt clone() => CompositeTypeStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CompositeTypeStmt copyWith(void Function(CompositeTypeStmt) updates) => super.copyWith((message) => updates(message as CompositeTypeStmt)) as CompositeTypeStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CompositeTypeStmt create() => CompositeTypeStmt._();
  CompositeTypeStmt createEmptyInstance() => create();
  static $pb.PbList<CompositeTypeStmt> createRepeated() => $pb.PbList<CompositeTypeStmt>();
  @$core.pragma('dart2js:noInline')
  static CompositeTypeStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CompositeTypeStmt>(create);
  static CompositeTypeStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get typevar => $_getN(0);
  @$pb.TagNumber(1)
  set typevar(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasTypevar() => $_has(0);
  @$pb.TagNumber(1)
  void clearTypevar() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureTypevar() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get coldeflist => $_getList(1);
}

class CreateEnumStmt extends $pb.GeneratedMessage {
  factory CreateEnumStmt({
    $core.Iterable<Node>? typeName,
    $core.Iterable<Node>? vals,
  }) {
    final $result = create();
    if (typeName != null) {
      $result.typeName.addAll(typeName);
    }
    if (vals != null) {
      $result.vals.addAll(vals);
    }
    return $result;
  }
  CreateEnumStmt._() : super();
  factory CreateEnumStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateEnumStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateEnumStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'typeName', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'vals', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateEnumStmt clone() => CreateEnumStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateEnumStmt copyWith(void Function(CreateEnumStmt) updates) => super.copyWith((message) => updates(message as CreateEnumStmt)) as CreateEnumStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateEnumStmt create() => CreateEnumStmt._();
  CreateEnumStmt createEmptyInstance() => create();
  static $pb.PbList<CreateEnumStmt> createRepeated() => $pb.PbList<CreateEnumStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateEnumStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateEnumStmt>(create);
  static CreateEnumStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get typeName => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get vals => $_getList(1);
}

class CreateRangeStmt extends $pb.GeneratedMessage {
  factory CreateRangeStmt({
    $core.Iterable<Node>? typeName,
    $core.Iterable<Node>? params,
  }) {
    final $result = create();
    if (typeName != null) {
      $result.typeName.addAll(typeName);
    }
    if (params != null) {
      $result.params.addAll(params);
    }
    return $result;
  }
  CreateRangeStmt._() : super();
  factory CreateRangeStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateRangeStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateRangeStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'typeName', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'params', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateRangeStmt clone() => CreateRangeStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateRangeStmt copyWith(void Function(CreateRangeStmt) updates) => super.copyWith((message) => updates(message as CreateRangeStmt)) as CreateRangeStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateRangeStmt create() => CreateRangeStmt._();
  CreateRangeStmt createEmptyInstance() => create();
  static $pb.PbList<CreateRangeStmt> createRepeated() => $pb.PbList<CreateRangeStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateRangeStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateRangeStmt>(create);
  static CreateRangeStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get typeName => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get params => $_getList(1);
}

class AlterEnumStmt extends $pb.GeneratedMessage {
  factory AlterEnumStmt({
    $core.Iterable<Node>? typeName,
    $core.String? oldVal,
    $core.String? newVal,
    $core.String? newValNeighbor,
    $core.bool? newValIsAfter,
    $core.bool? skipIfNewValExists,
  }) {
    final $result = create();
    if (typeName != null) {
      $result.typeName.addAll(typeName);
    }
    if (oldVal != null) {
      $result.oldVal = oldVal;
    }
    if (newVal != null) {
      $result.newVal = newVal;
    }
    if (newValNeighbor != null) {
      $result.newValNeighbor = newValNeighbor;
    }
    if (newValIsAfter != null) {
      $result.newValIsAfter = newValIsAfter;
    }
    if (skipIfNewValExists != null) {
      $result.skipIfNewValExists = skipIfNewValExists;
    }
    return $result;
  }
  AlterEnumStmt._() : super();
  factory AlterEnumStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterEnumStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterEnumStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'typeName', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(2, _omitFieldNames ? '' : 'oldVal')
    ..aOS(3, _omitFieldNames ? '' : 'newVal')
    ..aOS(4, _omitFieldNames ? '' : 'newValNeighbor')
    ..aOB(5, _omitFieldNames ? '' : 'newValIsAfter')
    ..aOB(6, _omitFieldNames ? '' : 'skipIfNewValExists')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterEnumStmt clone() => AlterEnumStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterEnumStmt copyWith(void Function(AlterEnumStmt) updates) => super.copyWith((message) => updates(message as AlterEnumStmt)) as AlterEnumStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterEnumStmt create() => AlterEnumStmt._();
  AlterEnumStmt createEmptyInstance() => create();
  static $pb.PbList<AlterEnumStmt> createRepeated() => $pb.PbList<AlterEnumStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterEnumStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterEnumStmt>(create);
  static AlterEnumStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get typeName => $_getList(0);

  @$pb.TagNumber(2)
  $core.String get oldVal => $_getSZ(1);
  @$pb.TagNumber(2)
  set oldVal($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOldVal() => $_has(1);
  @$pb.TagNumber(2)
  void clearOldVal() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get newVal => $_getSZ(2);
  @$pb.TagNumber(3)
  set newVal($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasNewVal() => $_has(2);
  @$pb.TagNumber(3)
  void clearNewVal() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get newValNeighbor => $_getSZ(3);
  @$pb.TagNumber(4)
  set newValNeighbor($core.String v) { $_setString(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasNewValNeighbor() => $_has(3);
  @$pb.TagNumber(4)
  void clearNewValNeighbor() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get newValIsAfter => $_getBF(4);
  @$pb.TagNumber(5)
  set newValIsAfter($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasNewValIsAfter() => $_has(4);
  @$pb.TagNumber(5)
  void clearNewValIsAfter() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get skipIfNewValExists => $_getBF(5);
  @$pb.TagNumber(6)
  set skipIfNewValExists($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasSkipIfNewValExists() => $_has(5);
  @$pb.TagNumber(6)
  void clearSkipIfNewValExists() => clearField(6);
}

class ViewStmt extends $pb.GeneratedMessage {
  factory ViewStmt({
    RangeVar? view,
    $core.Iterable<Node>? aliases,
    Node? query,
    $core.bool? replace,
    $core.Iterable<Node>? options,
    ViewCheckOption? withCheckOption,
  }) {
    final $result = create();
    if (view != null) {
      $result.view = view;
    }
    if (aliases != null) {
      $result.aliases.addAll(aliases);
    }
    if (query != null) {
      $result.query = query;
    }
    if (replace != null) {
      $result.replace = replace;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (withCheckOption != null) {
      $result.withCheckOption = withCheckOption;
    }
    return $result;
  }
  ViewStmt._() : super();
  factory ViewStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ViewStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ViewStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'view', subBuilder: RangeVar.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'aliases', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'query', subBuilder: Node.create)
    ..aOB(4, _omitFieldNames ? '' : 'replace')
    ..pc<Node>(5, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<ViewCheckOption>(6, _omitFieldNames ? '' : 'withCheckOption', $pb.PbFieldType.OE, defaultOrMaker: ViewCheckOption.VIEW_CHECK_OPTION_UNDEFINED, valueOf: ViewCheckOption.valueOf, enumValues: ViewCheckOption.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ViewStmt clone() => ViewStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ViewStmt copyWith(void Function(ViewStmt) updates) => super.copyWith((message) => updates(message as ViewStmt)) as ViewStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ViewStmt create() => ViewStmt._();
  ViewStmt createEmptyInstance() => create();
  static $pb.PbList<ViewStmt> createRepeated() => $pb.PbList<ViewStmt>();
  @$core.pragma('dart2js:noInline')
  static ViewStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ViewStmt>(create);
  static ViewStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get view => $_getN(0);
  @$pb.TagNumber(1)
  set view(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasView() => $_has(0);
  @$pb.TagNumber(1)
  void clearView() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureView() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get aliases => $_getList(1);

  @$pb.TagNumber(3)
  Node get query => $_getN(2);
  @$pb.TagNumber(3)
  set query(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasQuery() => $_has(2);
  @$pb.TagNumber(3)
  void clearQuery() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureQuery() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.bool get replace => $_getBF(3);
  @$pb.TagNumber(4)
  set replace($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasReplace() => $_has(3);
  @$pb.TagNumber(4)
  void clearReplace() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<Node> get options => $_getList(4);

  @$pb.TagNumber(6)
  ViewCheckOption get withCheckOption => $_getN(5);
  @$pb.TagNumber(6)
  set withCheckOption(ViewCheckOption v) { setField(6, v); }
  @$pb.TagNumber(6)
  $core.bool hasWithCheckOption() => $_has(5);
  @$pb.TagNumber(6)
  void clearWithCheckOption() => clearField(6);
}

class LoadStmt extends $pb.GeneratedMessage {
  factory LoadStmt({
    $core.String? filename,
  }) {
    final $result = create();
    if (filename != null) {
      $result.filename = filename;
    }
    return $result;
  }
  LoadStmt._() : super();
  factory LoadStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory LoadStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'LoadStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'filename')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  LoadStmt clone() => LoadStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  LoadStmt copyWith(void Function(LoadStmt) updates) => super.copyWith((message) => updates(message as LoadStmt)) as LoadStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static LoadStmt create() => LoadStmt._();
  LoadStmt createEmptyInstance() => create();
  static $pb.PbList<LoadStmt> createRepeated() => $pb.PbList<LoadStmt>();
  @$core.pragma('dart2js:noInline')
  static LoadStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<LoadStmt>(create);
  static LoadStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get filename => $_getSZ(0);
  @$pb.TagNumber(1)
  set filename($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasFilename() => $_has(0);
  @$pb.TagNumber(1)
  void clearFilename() => clearField(1);
}

class CreatedbStmt extends $pb.GeneratedMessage {
  factory CreatedbStmt({
    $core.String? dbname,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (dbname != null) {
      $result.dbname = dbname;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreatedbStmt._() : super();
  factory CreatedbStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreatedbStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreatedbStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'dbname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreatedbStmt clone() => CreatedbStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreatedbStmt copyWith(void Function(CreatedbStmt) updates) => super.copyWith((message) => updates(message as CreatedbStmt)) as CreatedbStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreatedbStmt create() => CreatedbStmt._();
  CreatedbStmt createEmptyInstance() => create();
  static $pb.PbList<CreatedbStmt> createRepeated() => $pb.PbList<CreatedbStmt>();
  @$core.pragma('dart2js:noInline')
  static CreatedbStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreatedbStmt>(create);
  static CreatedbStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get dbname => $_getSZ(0);
  @$pb.TagNumber(1)
  set dbname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasDbname() => $_has(0);
  @$pb.TagNumber(1)
  void clearDbname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);
}

class AlterDatabaseStmt extends $pb.GeneratedMessage {
  factory AlterDatabaseStmt({
    $core.String? dbname,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (dbname != null) {
      $result.dbname = dbname;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  AlterDatabaseStmt._() : super();
  factory AlterDatabaseStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterDatabaseStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterDatabaseStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'dbname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterDatabaseStmt clone() => AlterDatabaseStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterDatabaseStmt copyWith(void Function(AlterDatabaseStmt) updates) => super.copyWith((message) => updates(message as AlterDatabaseStmt)) as AlterDatabaseStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterDatabaseStmt create() => AlterDatabaseStmt._();
  AlterDatabaseStmt createEmptyInstance() => create();
  static $pb.PbList<AlterDatabaseStmt> createRepeated() => $pb.PbList<AlterDatabaseStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterDatabaseStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterDatabaseStmt>(create);
  static AlterDatabaseStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get dbname => $_getSZ(0);
  @$pb.TagNumber(1)
  set dbname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasDbname() => $_has(0);
  @$pb.TagNumber(1)
  void clearDbname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);
}

class AlterDatabaseRefreshCollStmt extends $pb.GeneratedMessage {
  factory AlterDatabaseRefreshCollStmt({
    $core.String? dbname,
  }) {
    final $result = create();
    if (dbname != null) {
      $result.dbname = dbname;
    }
    return $result;
  }
  AlterDatabaseRefreshCollStmt._() : super();
  factory AlterDatabaseRefreshCollStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterDatabaseRefreshCollStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterDatabaseRefreshCollStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'dbname')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterDatabaseRefreshCollStmt clone() => AlterDatabaseRefreshCollStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterDatabaseRefreshCollStmt copyWith(void Function(AlterDatabaseRefreshCollStmt) updates) => super.copyWith((message) => updates(message as AlterDatabaseRefreshCollStmt)) as AlterDatabaseRefreshCollStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterDatabaseRefreshCollStmt create() => AlterDatabaseRefreshCollStmt._();
  AlterDatabaseRefreshCollStmt createEmptyInstance() => create();
  static $pb.PbList<AlterDatabaseRefreshCollStmt> createRepeated() => $pb.PbList<AlterDatabaseRefreshCollStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterDatabaseRefreshCollStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterDatabaseRefreshCollStmt>(create);
  static AlterDatabaseRefreshCollStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get dbname => $_getSZ(0);
  @$pb.TagNumber(1)
  set dbname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasDbname() => $_has(0);
  @$pb.TagNumber(1)
  void clearDbname() => clearField(1);
}

class AlterDatabaseSetStmt extends $pb.GeneratedMessage {
  factory AlterDatabaseSetStmt({
    $core.String? dbname,
    VariableSetStmt? setstmt,
  }) {
    final $result = create();
    if (dbname != null) {
      $result.dbname = dbname;
    }
    if (setstmt != null) {
      $result.setstmt = setstmt;
    }
    return $result;
  }
  AlterDatabaseSetStmt._() : super();
  factory AlterDatabaseSetStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterDatabaseSetStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterDatabaseSetStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'dbname')
    ..aOM<VariableSetStmt>(2, _omitFieldNames ? '' : 'setstmt', subBuilder: VariableSetStmt.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterDatabaseSetStmt clone() => AlterDatabaseSetStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterDatabaseSetStmt copyWith(void Function(AlterDatabaseSetStmt) updates) => super.copyWith((message) => updates(message as AlterDatabaseSetStmt)) as AlterDatabaseSetStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterDatabaseSetStmt create() => AlterDatabaseSetStmt._();
  AlterDatabaseSetStmt createEmptyInstance() => create();
  static $pb.PbList<AlterDatabaseSetStmt> createRepeated() => $pb.PbList<AlterDatabaseSetStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterDatabaseSetStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterDatabaseSetStmt>(create);
  static AlterDatabaseSetStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get dbname => $_getSZ(0);
  @$pb.TagNumber(1)
  set dbname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasDbname() => $_has(0);
  @$pb.TagNumber(1)
  void clearDbname() => clearField(1);

  @$pb.TagNumber(2)
  VariableSetStmt get setstmt => $_getN(1);
  @$pb.TagNumber(2)
  set setstmt(VariableSetStmt v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasSetstmt() => $_has(1);
  @$pb.TagNumber(2)
  void clearSetstmt() => clearField(2);
  @$pb.TagNumber(2)
  VariableSetStmt ensureSetstmt() => $_ensure(1);
}

class DropdbStmt extends $pb.GeneratedMessage {
  factory DropdbStmt({
    $core.String? dbname,
    $core.bool? missingOk,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (dbname != null) {
      $result.dbname = dbname;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  DropdbStmt._() : super();
  factory DropdbStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DropdbStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DropdbStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'dbname')
    ..aOB(2, _omitFieldNames ? '' : 'missing_ok')
    ..pc<Node>(3, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DropdbStmt clone() => DropdbStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DropdbStmt copyWith(void Function(DropdbStmt) updates) => super.copyWith((message) => updates(message as DropdbStmt)) as DropdbStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DropdbStmt create() => DropdbStmt._();
  DropdbStmt createEmptyInstance() => create();
  static $pb.PbList<DropdbStmt> createRepeated() => $pb.PbList<DropdbStmt>();
  @$core.pragma('dart2js:noInline')
  static DropdbStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DropdbStmt>(create);
  static DropdbStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get dbname => $_getSZ(0);
  @$pb.TagNumber(1)
  set dbname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasDbname() => $_has(0);
  @$pb.TagNumber(1)
  void clearDbname() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get missingOk => $_getBF(1);
  @$pb.TagNumber(2)
  set missingOk($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasMissingOk() => $_has(1);
  @$pb.TagNumber(2)
  void clearMissingOk() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get options => $_getList(2);
}

class AlterSystemStmt extends $pb.GeneratedMessage {
  factory AlterSystemStmt({
    VariableSetStmt? setstmt,
  }) {
    final $result = create();
    if (setstmt != null) {
      $result.setstmt = setstmt;
    }
    return $result;
  }
  AlterSystemStmt._() : super();
  factory AlterSystemStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterSystemStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterSystemStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<VariableSetStmt>(1, _omitFieldNames ? '' : 'setstmt', subBuilder: VariableSetStmt.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterSystemStmt clone() => AlterSystemStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterSystemStmt copyWith(void Function(AlterSystemStmt) updates) => super.copyWith((message) => updates(message as AlterSystemStmt)) as AlterSystemStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterSystemStmt create() => AlterSystemStmt._();
  AlterSystemStmt createEmptyInstance() => create();
  static $pb.PbList<AlterSystemStmt> createRepeated() => $pb.PbList<AlterSystemStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterSystemStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterSystemStmt>(create);
  static AlterSystemStmt? _defaultInstance;

  @$pb.TagNumber(1)
  VariableSetStmt get setstmt => $_getN(0);
  @$pb.TagNumber(1)
  set setstmt(VariableSetStmt v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasSetstmt() => $_has(0);
  @$pb.TagNumber(1)
  void clearSetstmt() => clearField(1);
  @$pb.TagNumber(1)
  VariableSetStmt ensureSetstmt() => $_ensure(0);
}

class ClusterStmt extends $pb.GeneratedMessage {
  factory ClusterStmt({
    RangeVar? relation,
    $core.String? indexname,
    $core.Iterable<Node>? params,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (indexname != null) {
      $result.indexname = indexname;
    }
    if (params != null) {
      $result.params.addAll(params);
    }
    return $result;
  }
  ClusterStmt._() : super();
  factory ClusterStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ClusterStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ClusterStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOS(2, _omitFieldNames ? '' : 'indexname')
    ..pc<Node>(3, _omitFieldNames ? '' : 'params', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ClusterStmt clone() => ClusterStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ClusterStmt copyWith(void Function(ClusterStmt) updates) => super.copyWith((message) => updates(message as ClusterStmt)) as ClusterStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ClusterStmt create() => ClusterStmt._();
  ClusterStmt createEmptyInstance() => create();
  static $pb.PbList<ClusterStmt> createRepeated() => $pb.PbList<ClusterStmt>();
  @$core.pragma('dart2js:noInline')
  static ClusterStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ClusterStmt>(create);
  static ClusterStmt? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.String get indexname => $_getSZ(1);
  @$pb.TagNumber(2)
  set indexname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasIndexname() => $_has(1);
  @$pb.TagNumber(2)
  void clearIndexname() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get params => $_getList(2);
}

class VacuumStmt extends $pb.GeneratedMessage {
  factory VacuumStmt({
    $core.Iterable<Node>? options,
    $core.Iterable<Node>? rels,
    $core.bool? isVacuumcmd,
  }) {
    final $result = create();
    if (options != null) {
      $result.options.addAll(options);
    }
    if (rels != null) {
      $result.rels.addAll(rels);
    }
    if (isVacuumcmd != null) {
      $result.isVacuumcmd = isVacuumcmd;
    }
    return $result;
  }
  VacuumStmt._() : super();
  factory VacuumStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory VacuumStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'VacuumStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'rels', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(3, _omitFieldNames ? '' : 'is_vacuumcmd')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  VacuumStmt clone() => VacuumStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  VacuumStmt copyWith(void Function(VacuumStmt) updates) => super.copyWith((message) => updates(message as VacuumStmt)) as VacuumStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static VacuumStmt create() => VacuumStmt._();
  VacuumStmt createEmptyInstance() => create();
  static $pb.PbList<VacuumStmt> createRepeated() => $pb.PbList<VacuumStmt>();
  @$core.pragma('dart2js:noInline')
  static VacuumStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<VacuumStmt>(create);
  static VacuumStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get options => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get rels => $_getList(1);

  @$pb.TagNumber(3)
  $core.bool get isVacuumcmd => $_getBF(2);
  @$pb.TagNumber(3)
  set isVacuumcmd($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasIsVacuumcmd() => $_has(2);
  @$pb.TagNumber(3)
  void clearIsVacuumcmd() => clearField(3);
}

class VacuumRelation extends $pb.GeneratedMessage {
  factory VacuumRelation({
    RangeVar? relation,
    $core.int? oid,
    $core.Iterable<Node>? vaCols,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (oid != null) {
      $result.oid = oid;
    }
    if (vaCols != null) {
      $result.vaCols.addAll(vaCols);
    }
    return $result;
  }
  VacuumRelation._() : super();
  factory VacuumRelation.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory VacuumRelation.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'VacuumRelation', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'oid', $pb.PbFieldType.OU3)
    ..pc<Node>(3, _omitFieldNames ? '' : 'va_cols', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  VacuumRelation clone() => VacuumRelation()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  VacuumRelation copyWith(void Function(VacuumRelation) updates) => super.copyWith((message) => updates(message as VacuumRelation)) as VacuumRelation;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static VacuumRelation create() => VacuumRelation._();
  VacuumRelation createEmptyInstance() => create();
  static $pb.PbList<VacuumRelation> createRepeated() => $pb.PbList<VacuumRelation>();
  @$core.pragma('dart2js:noInline')
  static VacuumRelation getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<VacuumRelation>(create);
  static VacuumRelation? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.int get oid => $_getIZ(1);
  @$pb.TagNumber(2)
  set oid($core.int v) { $_setUnsignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasOid() => $_has(1);
  @$pb.TagNumber(2)
  void clearOid() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get vaCols => $_getList(2);
}

class ExplainStmt extends $pb.GeneratedMessage {
  factory ExplainStmt({
    Node? query,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (query != null) {
      $result.query = query;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  ExplainStmt._() : super();
  factory ExplainStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ExplainStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ExplainStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'query', subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ExplainStmt clone() => ExplainStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ExplainStmt copyWith(void Function(ExplainStmt) updates) => super.copyWith((message) => updates(message as ExplainStmt)) as ExplainStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ExplainStmt create() => ExplainStmt._();
  ExplainStmt createEmptyInstance() => create();
  static $pb.PbList<ExplainStmt> createRepeated() => $pb.PbList<ExplainStmt>();
  @$core.pragma('dart2js:noInline')
  static ExplainStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ExplainStmt>(create);
  static ExplainStmt? _defaultInstance;

  @$pb.TagNumber(1)
  Node get query => $_getN(0);
  @$pb.TagNumber(1)
  set query(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasQuery() => $_has(0);
  @$pb.TagNumber(1)
  void clearQuery() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureQuery() => $_ensure(0);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);
}

class CreateTableAsStmt extends $pb.GeneratedMessage {
  factory CreateTableAsStmt({
    Node? query,
    IntoClause? into,
    ObjectType? objtype,
    $core.bool? isSelectInto,
    $core.bool? ifNotExists,
  }) {
    final $result = create();
    if (query != null) {
      $result.query = query;
    }
    if (into != null) {
      $result.into = into;
    }
    if (objtype != null) {
      $result.objtype = objtype;
    }
    if (isSelectInto != null) {
      $result.isSelectInto = isSelectInto;
    }
    if (ifNotExists != null) {
      $result.ifNotExists = ifNotExists;
    }
    return $result;
  }
  CreateTableAsStmt._() : super();
  factory CreateTableAsStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateTableAsStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateTableAsStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<Node>(1, _omitFieldNames ? '' : 'query', subBuilder: Node.create)
    ..aOM<IntoClause>(2, _omitFieldNames ? '' : 'into', subBuilder: IntoClause.create)
    ..e<ObjectType>(3, _omitFieldNames ? '' : 'objtype', $pb.PbFieldType.OE, defaultOrMaker: ObjectType.OBJECT_TYPE_UNDEFINED, valueOf: ObjectType.valueOf, enumValues: ObjectType.values)
    ..aOB(4, _omitFieldNames ? '' : 'is_select_into')
    ..aOB(5, _omitFieldNames ? '' : 'if_not_exists')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateTableAsStmt clone() => CreateTableAsStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateTableAsStmt copyWith(void Function(CreateTableAsStmt) updates) => super.copyWith((message) => updates(message as CreateTableAsStmt)) as CreateTableAsStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateTableAsStmt create() => CreateTableAsStmt._();
  CreateTableAsStmt createEmptyInstance() => create();
  static $pb.PbList<CreateTableAsStmt> createRepeated() => $pb.PbList<CreateTableAsStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateTableAsStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateTableAsStmt>(create);
  static CreateTableAsStmt? _defaultInstance;

  @$pb.TagNumber(1)
  Node get query => $_getN(0);
  @$pb.TagNumber(1)
  set query(Node v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasQuery() => $_has(0);
  @$pb.TagNumber(1)
  void clearQuery() => clearField(1);
  @$pb.TagNumber(1)
  Node ensureQuery() => $_ensure(0);

  @$pb.TagNumber(2)
  IntoClause get into => $_getN(1);
  @$pb.TagNumber(2)
  set into(IntoClause v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasInto() => $_has(1);
  @$pb.TagNumber(2)
  void clearInto() => clearField(2);
  @$pb.TagNumber(2)
  IntoClause ensureInto() => $_ensure(1);

  @$pb.TagNumber(3)
  ObjectType get objtype => $_getN(2);
  @$pb.TagNumber(3)
  set objtype(ObjectType v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasObjtype() => $_has(2);
  @$pb.TagNumber(3)
  void clearObjtype() => clearField(3);

  @$pb.TagNumber(4)
  $core.bool get isSelectInto => $_getBF(3);
  @$pb.TagNumber(4)
  set isSelectInto($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasIsSelectInto() => $_has(3);
  @$pb.TagNumber(4)
  void clearIsSelectInto() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get ifNotExists => $_getBF(4);
  @$pb.TagNumber(5)
  set ifNotExists($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasIfNotExists() => $_has(4);
  @$pb.TagNumber(5)
  void clearIfNotExists() => clearField(5);
}

class RefreshMatViewStmt extends $pb.GeneratedMessage {
  factory RefreshMatViewStmt({
    $core.bool? concurrent,
    $core.bool? skipData,
    RangeVar? relation,
  }) {
    final $result = create();
    if (concurrent != null) {
      $result.concurrent = concurrent;
    }
    if (skipData != null) {
      $result.skipData = skipData;
    }
    if (relation != null) {
      $result.relation = relation;
    }
    return $result;
  }
  RefreshMatViewStmt._() : super();
  factory RefreshMatViewStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory RefreshMatViewStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'RefreshMatViewStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'concurrent')
    ..aOB(2, _omitFieldNames ? '' : 'skipData')
    ..aOM<RangeVar>(3, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  RefreshMatViewStmt clone() => RefreshMatViewStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  RefreshMatViewStmt copyWith(void Function(RefreshMatViewStmt) updates) => super.copyWith((message) => updates(message as RefreshMatViewStmt)) as RefreshMatViewStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static RefreshMatViewStmt create() => RefreshMatViewStmt._();
  RefreshMatViewStmt createEmptyInstance() => create();
  static $pb.PbList<RefreshMatViewStmt> createRepeated() => $pb.PbList<RefreshMatViewStmt>();
  @$core.pragma('dart2js:noInline')
  static RefreshMatViewStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<RefreshMatViewStmt>(create);
  static RefreshMatViewStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get concurrent => $_getBF(0);
  @$pb.TagNumber(1)
  set concurrent($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasConcurrent() => $_has(0);
  @$pb.TagNumber(1)
  void clearConcurrent() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get skipData => $_getBF(1);
  @$pb.TagNumber(2)
  set skipData($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasSkipData() => $_has(1);
  @$pb.TagNumber(2)
  void clearSkipData() => clearField(2);

  @$pb.TagNumber(3)
  RangeVar get relation => $_getN(2);
  @$pb.TagNumber(3)
  set relation(RangeVar v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasRelation() => $_has(2);
  @$pb.TagNumber(3)
  void clearRelation() => clearField(3);
  @$pb.TagNumber(3)
  RangeVar ensureRelation() => $_ensure(2);
}

class CheckPointStmt extends $pb.GeneratedMessage {
  factory CheckPointStmt() => create();
  CheckPointStmt._() : super();
  factory CheckPointStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CheckPointStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CheckPointStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CheckPointStmt clone() => CheckPointStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CheckPointStmt copyWith(void Function(CheckPointStmt) updates) => super.copyWith((message) => updates(message as CheckPointStmt)) as CheckPointStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CheckPointStmt create() => CheckPointStmt._();
  CheckPointStmt createEmptyInstance() => create();
  static $pb.PbList<CheckPointStmt> createRepeated() => $pb.PbList<CheckPointStmt>();
  @$core.pragma('dart2js:noInline')
  static CheckPointStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CheckPointStmt>(create);
  static CheckPointStmt? _defaultInstance;
}

class DiscardStmt extends $pb.GeneratedMessage {
  factory DiscardStmt({
    DiscardMode? target,
  }) {
    final $result = create();
    if (target != null) {
      $result.target = target;
    }
    return $result;
  }
  DiscardStmt._() : super();
  factory DiscardStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DiscardStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DiscardStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<DiscardMode>(1, _omitFieldNames ? '' : 'target', $pb.PbFieldType.OE, defaultOrMaker: DiscardMode.DISCARD_MODE_UNDEFINED, valueOf: DiscardMode.valueOf, enumValues: DiscardMode.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DiscardStmt clone() => DiscardStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DiscardStmt copyWith(void Function(DiscardStmt) updates) => super.copyWith((message) => updates(message as DiscardStmt)) as DiscardStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DiscardStmt create() => DiscardStmt._();
  DiscardStmt createEmptyInstance() => create();
  static $pb.PbList<DiscardStmt> createRepeated() => $pb.PbList<DiscardStmt>();
  @$core.pragma('dart2js:noInline')
  static DiscardStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DiscardStmt>(create);
  static DiscardStmt? _defaultInstance;

  @$pb.TagNumber(1)
  DiscardMode get target => $_getN(0);
  @$pb.TagNumber(1)
  set target(DiscardMode v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasTarget() => $_has(0);
  @$pb.TagNumber(1)
  void clearTarget() => clearField(1);
}

class LockStmt extends $pb.GeneratedMessage {
  factory LockStmt({
    $core.Iterable<Node>? relations,
    $core.int? mode,
    $core.bool? nowait,
  }) {
    final $result = create();
    if (relations != null) {
      $result.relations.addAll(relations);
    }
    if (mode != null) {
      $result.mode = mode;
    }
    if (nowait != null) {
      $result.nowait = nowait;
    }
    return $result;
  }
  LockStmt._() : super();
  factory LockStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory LockStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'LockStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'relations', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'mode', $pb.PbFieldType.O3)
    ..aOB(3, _omitFieldNames ? '' : 'nowait')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  LockStmt clone() => LockStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  LockStmt copyWith(void Function(LockStmt) updates) => super.copyWith((message) => updates(message as LockStmt)) as LockStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static LockStmt create() => LockStmt._();
  LockStmt createEmptyInstance() => create();
  static $pb.PbList<LockStmt> createRepeated() => $pb.PbList<LockStmt>();
  @$core.pragma('dart2js:noInline')
  static LockStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<LockStmt>(create);
  static LockStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get relations => $_getList(0);

  @$pb.TagNumber(2)
  $core.int get mode => $_getIZ(1);
  @$pb.TagNumber(2)
  set mode($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasMode() => $_has(1);
  @$pb.TagNumber(2)
  void clearMode() => clearField(2);

  @$pb.TagNumber(3)
  $core.bool get nowait => $_getBF(2);
  @$pb.TagNumber(3)
  set nowait($core.bool v) { $_setBool(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasNowait() => $_has(2);
  @$pb.TagNumber(3)
  void clearNowait() => clearField(3);
}

class ConstraintsSetStmt extends $pb.GeneratedMessage {
  factory ConstraintsSetStmt({
    $core.Iterable<Node>? constraints,
    $core.bool? deferred,
  }) {
    final $result = create();
    if (constraints != null) {
      $result.constraints.addAll(constraints);
    }
    if (deferred != null) {
      $result.deferred = deferred;
    }
    return $result;
  }
  ConstraintsSetStmt._() : super();
  factory ConstraintsSetStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ConstraintsSetStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ConstraintsSetStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'constraints', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(2, _omitFieldNames ? '' : 'deferred')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ConstraintsSetStmt clone() => ConstraintsSetStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ConstraintsSetStmt copyWith(void Function(ConstraintsSetStmt) updates) => super.copyWith((message) => updates(message as ConstraintsSetStmt)) as ConstraintsSetStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ConstraintsSetStmt create() => ConstraintsSetStmt._();
  ConstraintsSetStmt createEmptyInstance() => create();
  static $pb.PbList<ConstraintsSetStmt> createRepeated() => $pb.PbList<ConstraintsSetStmt>();
  @$core.pragma('dart2js:noInline')
  static ConstraintsSetStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ConstraintsSetStmt>(create);
  static ConstraintsSetStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get constraints => $_getList(0);

  @$pb.TagNumber(2)
  $core.bool get deferred => $_getBF(1);
  @$pb.TagNumber(2)
  set deferred($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasDeferred() => $_has(1);
  @$pb.TagNumber(2)
  void clearDeferred() => clearField(2);
}

class ReindexStmt extends $pb.GeneratedMessage {
  factory ReindexStmt({
    ReindexObjectType? kind,
    RangeVar? relation,
    $core.String? name,
    $core.Iterable<Node>? params,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (relation != null) {
      $result.relation = relation;
    }
    if (name != null) {
      $result.name = name;
    }
    if (params != null) {
      $result.params.addAll(params);
    }
    return $result;
  }
  ReindexStmt._() : super();
  factory ReindexStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ReindexStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ReindexStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<ReindexObjectType>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: ReindexObjectType.REINDEX_OBJECT_TYPE_UNDEFINED, valueOf: ReindexObjectType.valueOf, enumValues: ReindexObjectType.values)
    ..aOM<RangeVar>(2, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOS(3, _omitFieldNames ? '' : 'name')
    ..pc<Node>(4, _omitFieldNames ? '' : 'params', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ReindexStmt clone() => ReindexStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ReindexStmt copyWith(void Function(ReindexStmt) updates) => super.copyWith((message) => updates(message as ReindexStmt)) as ReindexStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ReindexStmt create() => ReindexStmt._();
  ReindexStmt createEmptyInstance() => create();
  static $pb.PbList<ReindexStmt> createRepeated() => $pb.PbList<ReindexStmt>();
  @$core.pragma('dart2js:noInline')
  static ReindexStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ReindexStmt>(create);
  static ReindexStmt? _defaultInstance;

  @$pb.TagNumber(1)
  ReindexObjectType get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(ReindexObjectType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  RangeVar get relation => $_getN(1);
  @$pb.TagNumber(2)
  set relation(RangeVar v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasRelation() => $_has(1);
  @$pb.TagNumber(2)
  void clearRelation() => clearField(2);
  @$pb.TagNumber(2)
  RangeVar ensureRelation() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get name => $_getSZ(2);
  @$pb.TagNumber(3)
  set name($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasName() => $_has(2);
  @$pb.TagNumber(3)
  void clearName() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get params => $_getList(3);
}

class CreateConversionStmt extends $pb.GeneratedMessage {
  factory CreateConversionStmt({
    $core.Iterable<Node>? conversionName,
    $core.String? forEncodingName,
    $core.String? toEncodingName,
    $core.Iterable<Node>? funcName,
    $core.bool? def,
  }) {
    final $result = create();
    if (conversionName != null) {
      $result.conversionName.addAll(conversionName);
    }
    if (forEncodingName != null) {
      $result.forEncodingName = forEncodingName;
    }
    if (toEncodingName != null) {
      $result.toEncodingName = toEncodingName;
    }
    if (funcName != null) {
      $result.funcName.addAll(funcName);
    }
    if (def != null) {
      $result.def = def;
    }
    return $result;
  }
  CreateConversionStmt._() : super();
  factory CreateConversionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateConversionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateConversionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'conversion_name', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOS(2, _omitFieldNames ? '' : 'for_encoding_name')
    ..aOS(3, _omitFieldNames ? '' : 'to_encoding_name')
    ..pc<Node>(4, _omitFieldNames ? '' : 'func_name', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(5, _omitFieldNames ? '' : 'def')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateConversionStmt clone() => CreateConversionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateConversionStmt copyWith(void Function(CreateConversionStmt) updates) => super.copyWith((message) => updates(message as CreateConversionStmt)) as CreateConversionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateConversionStmt create() => CreateConversionStmt._();
  CreateConversionStmt createEmptyInstance() => create();
  static $pb.PbList<CreateConversionStmt> createRepeated() => $pb.PbList<CreateConversionStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateConversionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateConversionStmt>(create);
  static CreateConversionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get conversionName => $_getList(0);

  @$pb.TagNumber(2)
  $core.String get forEncodingName => $_getSZ(1);
  @$pb.TagNumber(2)
  set forEncodingName($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasForEncodingName() => $_has(1);
  @$pb.TagNumber(2)
  void clearForEncodingName() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get toEncodingName => $_getSZ(2);
  @$pb.TagNumber(3)
  set toEncodingName($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasToEncodingName() => $_has(2);
  @$pb.TagNumber(3)
  void clearToEncodingName() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get funcName => $_getList(3);

  @$pb.TagNumber(5)
  $core.bool get def => $_getBF(4);
  @$pb.TagNumber(5)
  set def($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasDef() => $_has(4);
  @$pb.TagNumber(5)
  void clearDef() => clearField(5);
}

class CreateCastStmt extends $pb.GeneratedMessage {
  factory CreateCastStmt({
    TypeName? sourcetype,
    TypeName? targettype,
    ObjectWithArgs? func,
    CoercionContext? context,
    $core.bool? inout,
  }) {
    final $result = create();
    if (sourcetype != null) {
      $result.sourcetype = sourcetype;
    }
    if (targettype != null) {
      $result.targettype = targettype;
    }
    if (func != null) {
      $result.func = func;
    }
    if (context != null) {
      $result.context = context;
    }
    if (inout != null) {
      $result.inout = inout;
    }
    return $result;
  }
  CreateCastStmt._() : super();
  factory CreateCastStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateCastStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateCastStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<TypeName>(1, _omitFieldNames ? '' : 'sourcetype', subBuilder: TypeName.create)
    ..aOM<TypeName>(2, _omitFieldNames ? '' : 'targettype', subBuilder: TypeName.create)
    ..aOM<ObjectWithArgs>(3, _omitFieldNames ? '' : 'func', subBuilder: ObjectWithArgs.create)
    ..e<CoercionContext>(4, _omitFieldNames ? '' : 'context', $pb.PbFieldType.OE, defaultOrMaker: CoercionContext.COERCION_CONTEXT_UNDEFINED, valueOf: CoercionContext.valueOf, enumValues: CoercionContext.values)
    ..aOB(5, _omitFieldNames ? '' : 'inout')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateCastStmt clone() => CreateCastStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateCastStmt copyWith(void Function(CreateCastStmt) updates) => super.copyWith((message) => updates(message as CreateCastStmt)) as CreateCastStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateCastStmt create() => CreateCastStmt._();
  CreateCastStmt createEmptyInstance() => create();
  static $pb.PbList<CreateCastStmt> createRepeated() => $pb.PbList<CreateCastStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateCastStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateCastStmt>(create);
  static CreateCastStmt? _defaultInstance;

  @$pb.TagNumber(1)
  TypeName get sourcetype => $_getN(0);
  @$pb.TagNumber(1)
  set sourcetype(TypeName v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasSourcetype() => $_has(0);
  @$pb.TagNumber(1)
  void clearSourcetype() => clearField(1);
  @$pb.TagNumber(1)
  TypeName ensureSourcetype() => $_ensure(0);

  @$pb.TagNumber(2)
  TypeName get targettype => $_getN(1);
  @$pb.TagNumber(2)
  set targettype(TypeName v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTargettype() => $_has(1);
  @$pb.TagNumber(2)
  void clearTargettype() => clearField(2);
  @$pb.TagNumber(2)
  TypeName ensureTargettype() => $_ensure(1);

  @$pb.TagNumber(3)
  ObjectWithArgs get func => $_getN(2);
  @$pb.TagNumber(3)
  set func(ObjectWithArgs v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasFunc() => $_has(2);
  @$pb.TagNumber(3)
  void clearFunc() => clearField(3);
  @$pb.TagNumber(3)
  ObjectWithArgs ensureFunc() => $_ensure(2);

  @$pb.TagNumber(4)
  CoercionContext get context => $_getN(3);
  @$pb.TagNumber(4)
  set context(CoercionContext v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasContext() => $_has(3);
  @$pb.TagNumber(4)
  void clearContext() => clearField(4);

  @$pb.TagNumber(5)
  $core.bool get inout => $_getBF(4);
  @$pb.TagNumber(5)
  set inout($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasInout() => $_has(4);
  @$pb.TagNumber(5)
  void clearInout() => clearField(5);
}

class CreateTransformStmt extends $pb.GeneratedMessage {
  factory CreateTransformStmt({
    $core.bool? replace,
    TypeName? typeName,
    $core.String? lang,
    ObjectWithArgs? fromsql,
    ObjectWithArgs? tosql,
  }) {
    final $result = create();
    if (replace != null) {
      $result.replace = replace;
    }
    if (typeName != null) {
      $result.typeName = typeName;
    }
    if (lang != null) {
      $result.lang = lang;
    }
    if (fromsql != null) {
      $result.fromsql = fromsql;
    }
    if (tosql != null) {
      $result.tosql = tosql;
    }
    return $result;
  }
  CreateTransformStmt._() : super();
  factory CreateTransformStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateTransformStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateTransformStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOB(1, _omitFieldNames ? '' : 'replace')
    ..aOM<TypeName>(2, _omitFieldNames ? '' : 'type_name', subBuilder: TypeName.create)
    ..aOS(3, _omitFieldNames ? '' : 'lang')
    ..aOM<ObjectWithArgs>(4, _omitFieldNames ? '' : 'fromsql', subBuilder: ObjectWithArgs.create)
    ..aOM<ObjectWithArgs>(5, _omitFieldNames ? '' : 'tosql', subBuilder: ObjectWithArgs.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateTransformStmt clone() => CreateTransformStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateTransformStmt copyWith(void Function(CreateTransformStmt) updates) => super.copyWith((message) => updates(message as CreateTransformStmt)) as CreateTransformStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateTransformStmt create() => CreateTransformStmt._();
  CreateTransformStmt createEmptyInstance() => create();
  static $pb.PbList<CreateTransformStmt> createRepeated() => $pb.PbList<CreateTransformStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateTransformStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateTransformStmt>(create);
  static CreateTransformStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.bool get replace => $_getBF(0);
  @$pb.TagNumber(1)
  set replace($core.bool v) { $_setBool(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasReplace() => $_has(0);
  @$pb.TagNumber(1)
  void clearReplace() => clearField(1);

  @$pb.TagNumber(2)
  TypeName get typeName => $_getN(1);
  @$pb.TagNumber(2)
  set typeName(TypeName v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasTypeName() => $_has(1);
  @$pb.TagNumber(2)
  void clearTypeName() => clearField(2);
  @$pb.TagNumber(2)
  TypeName ensureTypeName() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.String get lang => $_getSZ(2);
  @$pb.TagNumber(3)
  set lang($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasLang() => $_has(2);
  @$pb.TagNumber(3)
  void clearLang() => clearField(3);

  @$pb.TagNumber(4)
  ObjectWithArgs get fromsql => $_getN(3);
  @$pb.TagNumber(4)
  set fromsql(ObjectWithArgs v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasFromsql() => $_has(3);
  @$pb.TagNumber(4)
  void clearFromsql() => clearField(4);
  @$pb.TagNumber(4)
  ObjectWithArgs ensureFromsql() => $_ensure(3);

  @$pb.TagNumber(5)
  ObjectWithArgs get tosql => $_getN(4);
  @$pb.TagNumber(5)
  set tosql(ObjectWithArgs v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasTosql() => $_has(4);
  @$pb.TagNumber(5)
  void clearTosql() => clearField(5);
  @$pb.TagNumber(5)
  ObjectWithArgs ensureTosql() => $_ensure(4);
}

class PrepareStmt extends $pb.GeneratedMessage {
  factory PrepareStmt({
    $core.String? name,
    $core.Iterable<Node>? argtypes,
    Node? query,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (argtypes != null) {
      $result.argtypes.addAll(argtypes);
    }
    if (query != null) {
      $result.query = query;
    }
    return $result;
  }
  PrepareStmt._() : super();
  factory PrepareStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PrepareStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PrepareStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..pc<Node>(2, _omitFieldNames ? '' : 'argtypes', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<Node>(3, _omitFieldNames ? '' : 'query', subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PrepareStmt clone() => PrepareStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PrepareStmt copyWith(void Function(PrepareStmt) updates) => super.copyWith((message) => updates(message as PrepareStmt)) as PrepareStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PrepareStmt create() => PrepareStmt._();
  PrepareStmt createEmptyInstance() => create();
  static $pb.PbList<PrepareStmt> createRepeated() => $pb.PbList<PrepareStmt>();
  @$core.pragma('dart2js:noInline')
  static PrepareStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PrepareStmt>(create);
  static PrepareStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get argtypes => $_getList(1);

  @$pb.TagNumber(3)
  Node get query => $_getN(2);
  @$pb.TagNumber(3)
  set query(Node v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasQuery() => $_has(2);
  @$pb.TagNumber(3)
  void clearQuery() => clearField(3);
  @$pb.TagNumber(3)
  Node ensureQuery() => $_ensure(2);
}

class ExecuteStmt extends $pb.GeneratedMessage {
  factory ExecuteStmt({
    $core.String? name,
    $core.Iterable<Node>? params,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    if (params != null) {
      $result.params.addAll(params);
    }
    return $result;
  }
  ExecuteStmt._() : super();
  factory ExecuteStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ExecuteStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ExecuteStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..pc<Node>(2, _omitFieldNames ? '' : 'params', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ExecuteStmt clone() => ExecuteStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ExecuteStmt copyWith(void Function(ExecuteStmt) updates) => super.copyWith((message) => updates(message as ExecuteStmt)) as ExecuteStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ExecuteStmt create() => ExecuteStmt._();
  ExecuteStmt createEmptyInstance() => create();
  static $pb.PbList<ExecuteStmt> createRepeated() => $pb.PbList<ExecuteStmt>();
  @$core.pragma('dart2js:noInline')
  static ExecuteStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ExecuteStmt>(create);
  static ExecuteStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get params => $_getList(1);
}

class DeallocateStmt extends $pb.GeneratedMessage {
  factory DeallocateStmt({
    $core.String? name,
  }) {
    final $result = create();
    if (name != null) {
      $result.name = name;
    }
    return $result;
  }
  DeallocateStmt._() : super();
  factory DeallocateStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DeallocateStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DeallocateStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'name')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DeallocateStmt clone() => DeallocateStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DeallocateStmt copyWith(void Function(DeallocateStmt) updates) => super.copyWith((message) => updates(message as DeallocateStmt)) as DeallocateStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DeallocateStmt create() => DeallocateStmt._();
  DeallocateStmt createEmptyInstance() => create();
  static $pb.PbList<DeallocateStmt> createRepeated() => $pb.PbList<DeallocateStmt>();
  @$core.pragma('dart2js:noInline')
  static DeallocateStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DeallocateStmt>(create);
  static DeallocateStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);
}

class DropOwnedStmt extends $pb.GeneratedMessage {
  factory DropOwnedStmt({
    $core.Iterable<Node>? roles,
    DropBehavior? behavior,
  }) {
    final $result = create();
    if (roles != null) {
      $result.roles.addAll(roles);
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    return $result;
  }
  DropOwnedStmt._() : super();
  factory DropOwnedStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DropOwnedStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DropOwnedStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'roles', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..e<DropBehavior>(2, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DropOwnedStmt clone() => DropOwnedStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DropOwnedStmt copyWith(void Function(DropOwnedStmt) updates) => super.copyWith((message) => updates(message as DropOwnedStmt)) as DropOwnedStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DropOwnedStmt create() => DropOwnedStmt._();
  DropOwnedStmt createEmptyInstance() => create();
  static $pb.PbList<DropOwnedStmt> createRepeated() => $pb.PbList<DropOwnedStmt>();
  @$core.pragma('dart2js:noInline')
  static DropOwnedStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DropOwnedStmt>(create);
  static DropOwnedStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get roles => $_getList(0);

  @$pb.TagNumber(2)
  DropBehavior get behavior => $_getN(1);
  @$pb.TagNumber(2)
  set behavior(DropBehavior v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasBehavior() => $_has(1);
  @$pb.TagNumber(2)
  void clearBehavior() => clearField(2);
}

class ReassignOwnedStmt extends $pb.GeneratedMessage {
  factory ReassignOwnedStmt({
    $core.Iterable<Node>? roles,
    RoleSpec? newrole,
  }) {
    final $result = create();
    if (roles != null) {
      $result.roles.addAll(roles);
    }
    if (newrole != null) {
      $result.newrole = newrole;
    }
    return $result;
  }
  ReassignOwnedStmt._() : super();
  factory ReassignOwnedStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ReassignOwnedStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ReassignOwnedStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'roles', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOM<RoleSpec>(2, _omitFieldNames ? '' : 'newrole', subBuilder: RoleSpec.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ReassignOwnedStmt clone() => ReassignOwnedStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ReassignOwnedStmt copyWith(void Function(ReassignOwnedStmt) updates) => super.copyWith((message) => updates(message as ReassignOwnedStmt)) as ReassignOwnedStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ReassignOwnedStmt create() => ReassignOwnedStmt._();
  ReassignOwnedStmt createEmptyInstance() => create();
  static $pb.PbList<ReassignOwnedStmt> createRepeated() => $pb.PbList<ReassignOwnedStmt>();
  @$core.pragma('dart2js:noInline')
  static ReassignOwnedStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ReassignOwnedStmt>(create);
  static ReassignOwnedStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get roles => $_getList(0);

  @$pb.TagNumber(2)
  RoleSpec get newrole => $_getN(1);
  @$pb.TagNumber(2)
  set newrole(RoleSpec v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasNewrole() => $_has(1);
  @$pb.TagNumber(2)
  void clearNewrole() => clearField(2);
  @$pb.TagNumber(2)
  RoleSpec ensureNewrole() => $_ensure(1);
}

class AlterTSDictionaryStmt extends $pb.GeneratedMessage {
  factory AlterTSDictionaryStmt({
    $core.Iterable<Node>? dictname,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (dictname != null) {
      $result.dictname.addAll(dictname);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  AlterTSDictionaryStmt._() : super();
  factory AlterTSDictionaryStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterTSDictionaryStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterTSDictionaryStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..pc<Node>(1, _omitFieldNames ? '' : 'dictname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterTSDictionaryStmt clone() => AlterTSDictionaryStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterTSDictionaryStmt copyWith(void Function(AlterTSDictionaryStmt) updates) => super.copyWith((message) => updates(message as AlterTSDictionaryStmt)) as AlterTSDictionaryStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterTSDictionaryStmt create() => AlterTSDictionaryStmt._();
  AlterTSDictionaryStmt createEmptyInstance() => create();
  static $pb.PbList<AlterTSDictionaryStmt> createRepeated() => $pb.PbList<AlterTSDictionaryStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterTSDictionaryStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterTSDictionaryStmt>(create);
  static AlterTSDictionaryStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.List<Node> get dictname => $_getList(0);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);
}

class AlterTSConfigurationStmt extends $pb.GeneratedMessage {
  factory AlterTSConfigurationStmt({
    AlterTSConfigType? kind,
    $core.Iterable<Node>? cfgname,
    $core.Iterable<Node>? tokentype,
    $core.Iterable<Node>? dicts,
    $core.bool? override,
    $core.bool? replace,
    $core.bool? missingOk,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (cfgname != null) {
      $result.cfgname.addAll(cfgname);
    }
    if (tokentype != null) {
      $result.tokentype.addAll(tokentype);
    }
    if (dicts != null) {
      $result.dicts.addAll(dicts);
    }
    if (override != null) {
      $result.override = override;
    }
    if (replace != null) {
      $result.replace = replace;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    return $result;
  }
  AlterTSConfigurationStmt._() : super();
  factory AlterTSConfigurationStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterTSConfigurationStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterTSConfigurationStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<AlterTSConfigType>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: AlterTSConfigType.ALTER_TSCONFIG_TYPE_UNDEFINED, valueOf: AlterTSConfigType.valueOf, enumValues: AlterTSConfigType.values)
    ..pc<Node>(2, _omitFieldNames ? '' : 'cfgname', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'tokentype', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'dicts', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(5, _omitFieldNames ? '' : 'override')
    ..aOB(6, _omitFieldNames ? '' : 'replace')
    ..aOB(7, _omitFieldNames ? '' : 'missing_ok')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterTSConfigurationStmt clone() => AlterTSConfigurationStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterTSConfigurationStmt copyWith(void Function(AlterTSConfigurationStmt) updates) => super.copyWith((message) => updates(message as AlterTSConfigurationStmt)) as AlterTSConfigurationStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterTSConfigurationStmt create() => AlterTSConfigurationStmt._();
  AlterTSConfigurationStmt createEmptyInstance() => create();
  static $pb.PbList<AlterTSConfigurationStmt> createRepeated() => $pb.PbList<AlterTSConfigurationStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterTSConfigurationStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterTSConfigurationStmt>(create);
  static AlterTSConfigurationStmt? _defaultInstance;

  @$pb.TagNumber(1)
  AlterTSConfigType get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(AlterTSConfigType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get cfgname => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get tokentype => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get dicts => $_getList(3);

  @$pb.TagNumber(5)
  $core.bool get override => $_getBF(4);
  @$pb.TagNumber(5)
  set override($core.bool v) { $_setBool(4, v); }
  @$pb.TagNumber(5)
  $core.bool hasOverride() => $_has(4);
  @$pb.TagNumber(5)
  void clearOverride() => clearField(5);

  @$pb.TagNumber(6)
  $core.bool get replace => $_getBF(5);
  @$pb.TagNumber(6)
  set replace($core.bool v) { $_setBool(5, v); }
  @$pb.TagNumber(6)
  $core.bool hasReplace() => $_has(5);
  @$pb.TagNumber(6)
  void clearReplace() => clearField(6);

  @$pb.TagNumber(7)
  $core.bool get missingOk => $_getBF(6);
  @$pb.TagNumber(7)
  set missingOk($core.bool v) { $_setBool(6, v); }
  @$pb.TagNumber(7)
  $core.bool hasMissingOk() => $_has(6);
  @$pb.TagNumber(7)
  void clearMissingOk() => clearField(7);
}

class PublicationTable extends $pb.GeneratedMessage {
  factory PublicationTable({
    RangeVar? relation,
    Node? whereClause,
    $core.Iterable<Node>? columns,
  }) {
    final $result = create();
    if (relation != null) {
      $result.relation = relation;
    }
    if (whereClause != null) {
      $result.whereClause = whereClause;
    }
    if (columns != null) {
      $result.columns.addAll(columns);
    }
    return $result;
  }
  PublicationTable._() : super();
  factory PublicationTable.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PublicationTable.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PublicationTable', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOM<RangeVar>(1, _omitFieldNames ? '' : 'relation', subBuilder: RangeVar.create)
    ..aOM<Node>(2, _omitFieldNames ? '' : 'whereClause', subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'columns', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PublicationTable clone() => PublicationTable()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PublicationTable copyWith(void Function(PublicationTable) updates) => super.copyWith((message) => updates(message as PublicationTable)) as PublicationTable;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PublicationTable create() => PublicationTable._();
  PublicationTable createEmptyInstance() => create();
  static $pb.PbList<PublicationTable> createRepeated() => $pb.PbList<PublicationTable>();
  @$core.pragma('dart2js:noInline')
  static PublicationTable getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PublicationTable>(create);
  static PublicationTable? _defaultInstance;

  @$pb.TagNumber(1)
  RangeVar get relation => $_getN(0);
  @$pb.TagNumber(1)
  set relation(RangeVar v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasRelation() => $_has(0);
  @$pb.TagNumber(1)
  void clearRelation() => clearField(1);
  @$pb.TagNumber(1)
  RangeVar ensureRelation() => $_ensure(0);

  @$pb.TagNumber(2)
  Node get whereClause => $_getN(1);
  @$pb.TagNumber(2)
  set whereClause(Node v) { setField(2, v); }
  @$pb.TagNumber(2)
  $core.bool hasWhereClause() => $_has(1);
  @$pb.TagNumber(2)
  void clearWhereClause() => clearField(2);
  @$pb.TagNumber(2)
  Node ensureWhereClause() => $_ensure(1);

  @$pb.TagNumber(3)
  $core.List<Node> get columns => $_getList(2);
}

class PublicationObjSpec extends $pb.GeneratedMessage {
  factory PublicationObjSpec({
    PublicationObjSpecType? pubobjtype,
    $core.String? name,
    PublicationTable? pubtable,
    $core.int? location,
  }) {
    final $result = create();
    if (pubobjtype != null) {
      $result.pubobjtype = pubobjtype;
    }
    if (name != null) {
      $result.name = name;
    }
    if (pubtable != null) {
      $result.pubtable = pubtable;
    }
    if (location != null) {
      $result.location = location;
    }
    return $result;
  }
  PublicationObjSpec._() : super();
  factory PublicationObjSpec.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory PublicationObjSpec.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'PublicationObjSpec', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<PublicationObjSpecType>(1, _omitFieldNames ? '' : 'pubobjtype', $pb.PbFieldType.OE, defaultOrMaker: PublicationObjSpecType.PUBLICATION_OBJ_SPEC_TYPE_UNDEFINED, valueOf: PublicationObjSpecType.valueOf, enumValues: PublicationObjSpecType.values)
    ..aOS(2, _omitFieldNames ? '' : 'name')
    ..aOM<PublicationTable>(3, _omitFieldNames ? '' : 'pubtable', subBuilder: PublicationTable.create)
    ..a<$core.int>(4, _omitFieldNames ? '' : 'location', $pb.PbFieldType.O3)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  PublicationObjSpec clone() => PublicationObjSpec()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  PublicationObjSpec copyWith(void Function(PublicationObjSpec) updates) => super.copyWith((message) => updates(message as PublicationObjSpec)) as PublicationObjSpec;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static PublicationObjSpec create() => PublicationObjSpec._();
  PublicationObjSpec createEmptyInstance() => create();
  static $pb.PbList<PublicationObjSpec> createRepeated() => $pb.PbList<PublicationObjSpec>();
  @$core.pragma('dart2js:noInline')
  static PublicationObjSpec getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<PublicationObjSpec>(create);
  static PublicationObjSpec? _defaultInstance;

  @$pb.TagNumber(1)
  PublicationObjSpecType get pubobjtype => $_getN(0);
  @$pb.TagNumber(1)
  set pubobjtype(PublicationObjSpecType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasPubobjtype() => $_has(0);
  @$pb.TagNumber(1)
  void clearPubobjtype() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get name => $_getSZ(1);
  @$pb.TagNumber(2)
  set name($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasName() => $_has(1);
  @$pb.TagNumber(2)
  void clearName() => clearField(2);

  @$pb.TagNumber(3)
  PublicationTable get pubtable => $_getN(2);
  @$pb.TagNumber(3)
  set pubtable(PublicationTable v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasPubtable() => $_has(2);
  @$pb.TagNumber(3)
  void clearPubtable() => clearField(3);
  @$pb.TagNumber(3)
  PublicationTable ensurePubtable() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.int get location => $_getIZ(3);
  @$pb.TagNumber(4)
  set location($core.int v) { $_setSignedInt32(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasLocation() => $_has(3);
  @$pb.TagNumber(4)
  void clearLocation() => clearField(4);
}

class CreatePublicationStmt extends $pb.GeneratedMessage {
  factory CreatePublicationStmt({
    $core.String? pubname,
    $core.Iterable<Node>? options,
    $core.Iterable<Node>? pubobjects,
    $core.bool? forAllTables,
  }) {
    final $result = create();
    if (pubname != null) {
      $result.pubname = pubname;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (pubobjects != null) {
      $result.pubobjects.addAll(pubobjects);
    }
    if (forAllTables != null) {
      $result.forAllTables = forAllTables;
    }
    return $result;
  }
  CreatePublicationStmt._() : super();
  factory CreatePublicationStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreatePublicationStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreatePublicationStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'pubname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'pubobjects', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(4, _omitFieldNames ? '' : 'for_all_tables')
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreatePublicationStmt clone() => CreatePublicationStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreatePublicationStmt copyWith(void Function(CreatePublicationStmt) updates) => super.copyWith((message) => updates(message as CreatePublicationStmt)) as CreatePublicationStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreatePublicationStmt create() => CreatePublicationStmt._();
  CreatePublicationStmt createEmptyInstance() => create();
  static $pb.PbList<CreatePublicationStmt> createRepeated() => $pb.PbList<CreatePublicationStmt>();
  @$core.pragma('dart2js:noInline')
  static CreatePublicationStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreatePublicationStmt>(create);
  static CreatePublicationStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get pubname => $_getSZ(0);
  @$pb.TagNumber(1)
  set pubname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasPubname() => $_has(0);
  @$pb.TagNumber(1)
  void clearPubname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get pubobjects => $_getList(2);

  @$pb.TagNumber(4)
  $core.bool get forAllTables => $_getBF(3);
  @$pb.TagNumber(4)
  set forAllTables($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasForAllTables() => $_has(3);
  @$pb.TagNumber(4)
  void clearForAllTables() => clearField(4);
}

class AlterPublicationStmt extends $pb.GeneratedMessage {
  factory AlterPublicationStmt({
    $core.String? pubname,
    $core.Iterable<Node>? options,
    $core.Iterable<Node>? pubobjects,
    $core.bool? forAllTables,
    AlterPublicationAction? action,
  }) {
    final $result = create();
    if (pubname != null) {
      $result.pubname = pubname;
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    if (pubobjects != null) {
      $result.pubobjects.addAll(pubobjects);
    }
    if (forAllTables != null) {
      $result.forAllTables = forAllTables;
    }
    if (action != null) {
      $result.action = action;
    }
    return $result;
  }
  AlterPublicationStmt._() : super();
  factory AlterPublicationStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterPublicationStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterPublicationStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'pubname')
    ..pc<Node>(2, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(3, _omitFieldNames ? '' : 'pubobjects', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..aOB(4, _omitFieldNames ? '' : 'for_all_tables')
    ..e<AlterPublicationAction>(5, _omitFieldNames ? '' : 'action', $pb.PbFieldType.OE, defaultOrMaker: AlterPublicationAction.ALTER_PUBLICATION_ACTION_UNDEFINED, valueOf: AlterPublicationAction.valueOf, enumValues: AlterPublicationAction.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterPublicationStmt clone() => AlterPublicationStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterPublicationStmt copyWith(void Function(AlterPublicationStmt) updates) => super.copyWith((message) => updates(message as AlterPublicationStmt)) as AlterPublicationStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterPublicationStmt create() => AlterPublicationStmt._();
  AlterPublicationStmt createEmptyInstance() => create();
  static $pb.PbList<AlterPublicationStmt> createRepeated() => $pb.PbList<AlterPublicationStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterPublicationStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterPublicationStmt>(create);
  static AlterPublicationStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get pubname => $_getSZ(0);
  @$pb.TagNumber(1)
  set pubname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasPubname() => $_has(0);
  @$pb.TagNumber(1)
  void clearPubname() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<Node> get options => $_getList(1);

  @$pb.TagNumber(3)
  $core.List<Node> get pubobjects => $_getList(2);

  @$pb.TagNumber(4)
  $core.bool get forAllTables => $_getBF(3);
  @$pb.TagNumber(4)
  set forAllTables($core.bool v) { $_setBool(3, v); }
  @$pb.TagNumber(4)
  $core.bool hasForAllTables() => $_has(3);
  @$pb.TagNumber(4)
  void clearForAllTables() => clearField(4);

  @$pb.TagNumber(5)
  AlterPublicationAction get action => $_getN(4);
  @$pb.TagNumber(5)
  set action(AlterPublicationAction v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasAction() => $_has(4);
  @$pb.TagNumber(5)
  void clearAction() => clearField(5);
}

class CreateSubscriptionStmt extends $pb.GeneratedMessage {
  factory CreateSubscriptionStmt({
    $core.String? subname,
    $core.String? conninfo,
    $core.Iterable<Node>? publication,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (subname != null) {
      $result.subname = subname;
    }
    if (conninfo != null) {
      $result.conninfo = conninfo;
    }
    if (publication != null) {
      $result.publication.addAll(publication);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  CreateSubscriptionStmt._() : super();
  factory CreateSubscriptionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory CreateSubscriptionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'CreateSubscriptionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'subname')
    ..aOS(2, _omitFieldNames ? '' : 'conninfo')
    ..pc<Node>(3, _omitFieldNames ? '' : 'publication', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(4, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  CreateSubscriptionStmt clone() => CreateSubscriptionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  CreateSubscriptionStmt copyWith(void Function(CreateSubscriptionStmt) updates) => super.copyWith((message) => updates(message as CreateSubscriptionStmt)) as CreateSubscriptionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static CreateSubscriptionStmt create() => CreateSubscriptionStmt._();
  CreateSubscriptionStmt createEmptyInstance() => create();
  static $pb.PbList<CreateSubscriptionStmt> createRepeated() => $pb.PbList<CreateSubscriptionStmt>();
  @$core.pragma('dart2js:noInline')
  static CreateSubscriptionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<CreateSubscriptionStmt>(create);
  static CreateSubscriptionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get subname => $_getSZ(0);
  @$pb.TagNumber(1)
  set subname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasSubname() => $_has(0);
  @$pb.TagNumber(1)
  void clearSubname() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get conninfo => $_getSZ(1);
  @$pb.TagNumber(2)
  set conninfo($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasConninfo() => $_has(1);
  @$pb.TagNumber(2)
  void clearConninfo() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<Node> get publication => $_getList(2);

  @$pb.TagNumber(4)
  $core.List<Node> get options => $_getList(3);
}

class AlterSubscriptionStmt extends $pb.GeneratedMessage {
  factory AlterSubscriptionStmt({
    AlterSubscriptionType? kind,
    $core.String? subname,
    $core.String? conninfo,
    $core.Iterable<Node>? publication,
    $core.Iterable<Node>? options,
  }) {
    final $result = create();
    if (kind != null) {
      $result.kind = kind;
    }
    if (subname != null) {
      $result.subname = subname;
    }
    if (conninfo != null) {
      $result.conninfo = conninfo;
    }
    if (publication != null) {
      $result.publication.addAll(publication);
    }
    if (options != null) {
      $result.options.addAll(options);
    }
    return $result;
  }
  AlterSubscriptionStmt._() : super();
  factory AlterSubscriptionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory AlterSubscriptionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'AlterSubscriptionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..e<AlterSubscriptionType>(1, _omitFieldNames ? '' : 'kind', $pb.PbFieldType.OE, defaultOrMaker: AlterSubscriptionType.ALTER_SUBSCRIPTION_TYPE_UNDEFINED, valueOf: AlterSubscriptionType.valueOf, enumValues: AlterSubscriptionType.values)
    ..aOS(2, _omitFieldNames ? '' : 'subname')
    ..aOS(3, _omitFieldNames ? '' : 'conninfo')
    ..pc<Node>(4, _omitFieldNames ? '' : 'publication', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..pc<Node>(5, _omitFieldNames ? '' : 'options', $pb.PbFieldType.PM, subBuilder: Node.create)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  AlterSubscriptionStmt clone() => AlterSubscriptionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  AlterSubscriptionStmt copyWith(void Function(AlterSubscriptionStmt) updates) => super.copyWith((message) => updates(message as AlterSubscriptionStmt)) as AlterSubscriptionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static AlterSubscriptionStmt create() => AlterSubscriptionStmt._();
  AlterSubscriptionStmt createEmptyInstance() => create();
  static $pb.PbList<AlterSubscriptionStmt> createRepeated() => $pb.PbList<AlterSubscriptionStmt>();
  @$core.pragma('dart2js:noInline')
  static AlterSubscriptionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<AlterSubscriptionStmt>(create);
  static AlterSubscriptionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  AlterSubscriptionType get kind => $_getN(0);
  @$pb.TagNumber(1)
  set kind(AlterSubscriptionType v) { setField(1, v); }
  @$pb.TagNumber(1)
  $core.bool hasKind() => $_has(0);
  @$pb.TagNumber(1)
  void clearKind() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get subname => $_getSZ(1);
  @$pb.TagNumber(2)
  set subname($core.String v) { $_setString(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasSubname() => $_has(1);
  @$pb.TagNumber(2)
  void clearSubname() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get conninfo => $_getSZ(2);
  @$pb.TagNumber(3)
  set conninfo($core.String v) { $_setString(2, v); }
  @$pb.TagNumber(3)
  $core.bool hasConninfo() => $_has(2);
  @$pb.TagNumber(3)
  void clearConninfo() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<Node> get publication => $_getList(3);

  @$pb.TagNumber(5)
  $core.List<Node> get options => $_getList(4);
}

class DropSubscriptionStmt extends $pb.GeneratedMessage {
  factory DropSubscriptionStmt({
    $core.String? subname,
    $core.bool? missingOk,
    DropBehavior? behavior,
  }) {
    final $result = create();
    if (subname != null) {
      $result.subname = subname;
    }
    if (missingOk != null) {
      $result.missingOk = missingOk;
    }
    if (behavior != null) {
      $result.behavior = behavior;
    }
    return $result;
  }
  DropSubscriptionStmt._() : super();
  factory DropSubscriptionStmt.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory DropSubscriptionStmt.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'DropSubscriptionStmt', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..aOS(1, _omitFieldNames ? '' : 'subname')
    ..aOB(2, _omitFieldNames ? '' : 'missing_ok')
    ..e<DropBehavior>(3, _omitFieldNames ? '' : 'behavior', $pb.PbFieldType.OE, defaultOrMaker: DropBehavior.DROP_BEHAVIOR_UNDEFINED, valueOf: DropBehavior.valueOf, enumValues: DropBehavior.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  DropSubscriptionStmt clone() => DropSubscriptionStmt()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  DropSubscriptionStmt copyWith(void Function(DropSubscriptionStmt) updates) => super.copyWith((message) => updates(message as DropSubscriptionStmt)) as DropSubscriptionStmt;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static DropSubscriptionStmt create() => DropSubscriptionStmt._();
  DropSubscriptionStmt createEmptyInstance() => create();
  static $pb.PbList<DropSubscriptionStmt> createRepeated() => $pb.PbList<DropSubscriptionStmt>();
  @$core.pragma('dart2js:noInline')
  static DropSubscriptionStmt getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<DropSubscriptionStmt>(create);
  static DropSubscriptionStmt? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get subname => $_getSZ(0);
  @$pb.TagNumber(1)
  set subname($core.String v) { $_setString(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasSubname() => $_has(0);
  @$pb.TagNumber(1)
  void clearSubname() => clearField(1);

  @$pb.TagNumber(2)
  $core.bool get missingOk => $_getBF(1);
  @$pb.TagNumber(2)
  set missingOk($core.bool v) { $_setBool(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasMissingOk() => $_has(1);
  @$pb.TagNumber(2)
  void clearMissingOk() => clearField(2);

  @$pb.TagNumber(3)
  DropBehavior get behavior => $_getN(2);
  @$pb.TagNumber(3)
  set behavior(DropBehavior v) { setField(3, v); }
  @$pb.TagNumber(3)
  $core.bool hasBehavior() => $_has(2);
  @$pb.TagNumber(3)
  void clearBehavior() => clearField(3);
}

class ScanToken extends $pb.GeneratedMessage {
  factory ScanToken({
    $core.int? start,
    $core.int? end,
    Token? token,
    KeywordKind? keywordKind,
  }) {
    final $result = create();
    if (start != null) {
      $result.start = start;
    }
    if (end != null) {
      $result.end = end;
    }
    if (token != null) {
      $result.token = token;
    }
    if (keywordKind != null) {
      $result.keywordKind = keywordKind;
    }
    return $result;
  }
  ScanToken._() : super();
  factory ScanToken.fromBuffer($core.List<$core.int> i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromBuffer(i, r);
  factory ScanToken.fromJson($core.String i, [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) => create()..mergeFromJson(i, r);

  static final $pb.BuilderInfo _i = $pb.BuilderInfo(_omitMessageNames ? '' : 'ScanToken', package: const $pb.PackageName(_omitMessageNames ? '' : 'pg_query'), createEmptyInstance: create)
    ..a<$core.int>(1, _omitFieldNames ? '' : 'start', $pb.PbFieldType.O3)
    ..a<$core.int>(2, _omitFieldNames ? '' : 'end', $pb.PbFieldType.O3)
    ..e<Token>(4, _omitFieldNames ? '' : 'token', $pb.PbFieldType.OE, defaultOrMaker: Token.NUL, valueOf: Token.valueOf, enumValues: Token.values)
    ..e<KeywordKind>(5, _omitFieldNames ? '' : 'keywordKind', $pb.PbFieldType.OE, defaultOrMaker: KeywordKind.NO_KEYWORD, valueOf: KeywordKind.valueOf, enumValues: KeywordKind.values)
    ..hasRequiredFields = false
  ;

  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
  'Will be removed in next major version')
  ScanToken clone() => ScanToken()..mergeFromMessage(this);
  @$core.Deprecated(
  'Using this can add significant overhead to your binary. '
  'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
  'Will be removed in next major version')
  ScanToken copyWith(void Function(ScanToken) updates) => super.copyWith((message) => updates(message as ScanToken)) as ScanToken;

  $pb.BuilderInfo get info_ => _i;

  @$core.pragma('dart2js:noInline')
  static ScanToken create() => ScanToken._();
  ScanToken createEmptyInstance() => create();
  static $pb.PbList<ScanToken> createRepeated() => $pb.PbList<ScanToken>();
  @$core.pragma('dart2js:noInline')
  static ScanToken getDefault() => _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<ScanToken>(create);
  static ScanToken? _defaultInstance;

  @$pb.TagNumber(1)
  $core.int get start => $_getIZ(0);
  @$pb.TagNumber(1)
  set start($core.int v) { $_setSignedInt32(0, v); }
  @$pb.TagNumber(1)
  $core.bool hasStart() => $_has(0);
  @$pb.TagNumber(1)
  void clearStart() => clearField(1);

  @$pb.TagNumber(2)
  $core.int get end => $_getIZ(1);
  @$pb.TagNumber(2)
  set end($core.int v) { $_setSignedInt32(1, v); }
  @$pb.TagNumber(2)
  $core.bool hasEnd() => $_has(1);
  @$pb.TagNumber(2)
  void clearEnd() => clearField(2);

  @$pb.TagNumber(4)
  Token get token => $_getN(2);
  @$pb.TagNumber(4)
  set token(Token v) { setField(4, v); }
  @$pb.TagNumber(4)
  $core.bool hasToken() => $_has(2);
  @$pb.TagNumber(4)
  void clearToken() => clearField(4);

  @$pb.TagNumber(5)
  KeywordKind get keywordKind => $_getN(3);
  @$pb.TagNumber(5)
  set keywordKind(KeywordKind v) { setField(5, v); }
  @$pb.TagNumber(5)
  $core.bool hasKeywordKind() => $_has(3);
  @$pb.TagNumber(5)
  void clearKeywordKind() => clearField(5);
}


const _omitFieldNames = $core.bool.fromEnvironment('protobuf.omit_field_names');
const _omitMessageNames = $core.bool.fromEnvironment('protobuf.omit_message_names');
